<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mongo="http://www.springframework.org/schema/data/mongo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.2.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-3.2.xsd http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo.xsd">



    <bean  class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:com/sie/saaf/app/config/db_jdbc.properties</value>
                <value>classpath:com/sie/saaf/app/config/mongodb_cfg.properties</value>
            </list>
        </property>
    </bean>

    <!-- 定义mongo对象，对应的是mongodb官方jar包中的Mongo，replica-set设置集群副本的ip地址和端口 -->
    <!-- 
    <mongo:mongo-client id="mongo" replica-set="${mongo.hostport}">
        < !- 一些连接属性的设置 -1->
        <mongo:client-options connections-per-host="${mongo.connectionsPerHost}"
                       threads-allowed-to-block-for-connection-multiplier="${mongo.threadsAllowedToBlockForConnectionMultiplier}"
                       connect-timeout="${mongo.connectTimeout}"
                       max-wait-time="${mongo.maxWaitTime}"
                       socket-keep-alive="${mongo.socketKeepAlive}"
                       socket-timeout="${mongo.socketTimeout}"/>
    </mongo:mongo-client>
     -->
    <!-- mongo的工厂，通过它来取得mongo实例,dbname为mongodb的数据库名，没有的话会自动创建 -->
    <!-- 
    <mongo:db-factory dbname="userAccessLog" mongo-ref="mongo"/>
    <bean id="mongoTemplate"
          class="org.springframework.data.mongodb.core.MongoTemplate">
        <constructor-arg ref="mongo"/>
        <constructor-arg name="databaseName" value="userAccessLog"/>
    </bean>
 -->

    <!-- MQ配置 -->
    <bean id="connectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="useAsyncSend" value="true"></property>
        <!--<property name="brokerURL" value="failover:(tcp://139.159.229.31:61616,tcp://139.159.229.33:61616)"/>-->
        <property name="brokerURL" value="failover:(tcp://localhost:61616)"/>
        <property name="redeliveryPolicy">
            <bean id="redeliveryPolicy" class="org.apache.activemq.RedeliveryPolicy">
                <!--是否在每次尝试重新发送失败后,增长这个等待时间-->
                <property name="useExponentialBackOff" value="true"></property>
                <!--重发次数,默认为6次-->
                <property name="maximumRedeliveries" value="3"></property>
                <!--重发时间间隔,默认为1秒-->
                <property name="initialRedeliveryDelay" value="1000"></property>
                <!--第一次失败后重新发送之前等待500毫秒,第二次失败再等待500 * 2毫秒,这里的2就是value-->
                <property name="backOffMultiplier" value="2"></property>
                <!--最大传送延迟，只在useExponentialBackOff为true时有效（V5.5），假设首次重连间隔为10ms，倍数为2，那么第 二次重连时间间隔为 20ms，第三次重连时间间隔为40ms，当重连时间间隔大的最大重连时间间隔时，以后每次重连时间间隔都为最大重连时间间隔。-->
                <property name="maximumRedeliveryDelay" value="1000"></property>
            </bean>
        </property>
    </bean>

    <!-- 配置JMS模板（Queue），Spring提供的JMS工具类，它发送、接收消息。 -->
    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="receiveTimeout" value="10000"/>
    </bean>
    <!-- MQ配置结束 -->


    <!-- 消息队列配置 -->
    <bean id="saveMessage2Redis" class="com.yhg.transaction.compensation.core.TransactionCompensationIdempotentCore">
        <property name="jedisCluster" ref="jedisCluster"></property>
        <property name="redisKeyName" value="MQ_Message"></property>
        <property name="mapIndexKeyName" value="mq_Message_Index"></property>
        <!--如果没有idempotentKey属性默认为idempotent_key值-->
        <property name="idempotentKey" value="idempotent_key"></property>
        <property name="producerService" ref="producerService"></property>
    </bean>

    <bean id="transactionConsistencyCore" class="com.yhg.transaction.compensation.core.TransactionConsistencyCore">
        <property name="jedisCluster" ref="jedisCluster"></property>
        <property name="producerService" ref="producerService"></property>
        <property name="restTemplate" ref="restTemplate"/>
    </bean>

    <!-- 消息队列服务方 -->
    <bean id="producerService" class="com.yhg.activemq.framework.queue.ProducerServiceImpl">
        <property name="jmsTemplate" ref="jmsTemplate"></property>
    </bean>

    <!--queue消息生产者 -->
    <bean id="accessLogProducerService" class="com.yhg.activemq.framework.queue.ProducerServiceImpl">
        <property name="jmsTemplate" ref="jmsTemplate"></property>
    </bean>
    <bean id="baseUserAccessLogServer" class="com.yhg.access.log.model.server.BaseUserAccessLogServer">
        <constructor-arg ref="accessLogProducerService"/>
        <constructor-arg ref="mongoTemplate"/>
    </bean>
    
    <bean id="bpmCallBackMQConsumer" class="org.springframework.jms.listener.SimpleMessageListenerContainer">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="destinationName" value="bpmCallBackDataQueue101"/>
        <property name="messageListener" ref="bpmCallBackMQConsumerListener"/>
        <property name="concurrentConsumers" value="5"/>
    </bean>

</beans>