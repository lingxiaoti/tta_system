/*
Navicat Oracle Data Transfer
Oracle Client Version : 10.2.0.5.0

Source Server         : 云服务_屈成氏_139.159.224.135
Source Server Version : 120100
Source Host           : 139.159.224.135:1521
Source Schema         : TTASYS

Target Server Type    : ORACLE
Target Server Version : 120100
File Encoding         : 65001

Date: 2019-07-17 10:30:35
*/





-- ----------------------------
-- Table structure for ACT_BPM_CATEGORY
-- ----------------------------
DROP TABLE ACT_BPM_CATEGORY;
CREATE TABLE ACT_BPM_CATEGORY (
CATEGORY_ID NUMBER NOT NULL ,
CATEGORY_CODE VARCHAR2(255 BYTE) NULL ,
CATEGORY_NAME VARCHAR2(64 BYTE) NULL ,
PARENT_ID NUMBER DEFAULT -1  NOT NULL ,
PROCESS_KEY VARCHAR2(64 BYTE) NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE NOT NULL ,
LAST_UPDATE_DATE DATE NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER NOT NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for ACT_BPM_COMMUNICATE
-- ----------------------------
DROP TABLE ACT_BPM_COMMUNICATE;
CREATE TABLE ACT_BPM_COMMUNICATE (
COMMUNICATE_ID NUMBER NOT NULL ,
TYPE VARCHAR2(16 BYTE) NULL ,
CONTENT VARCHAR2(4000 BYTE) NULL ,
PROC_INST_ID VARCHAR2(64 BYTE) NULL ,
PROC_DEF_KEY VARCHAR2(64 BYTE) NULL ,
TASK_ID VARCHAR2(64 BYTE) NULL ,
TASK_NAME VARCHAR2(64 BYTE) NULL ,
RECEIVER_ID NUMBER DEFAULT NULL  NULL ,
MESSAGE_CHANNEL VARCHAR2(255 BYTE) NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE NOT NULL ,
LAST_UPDATE_DATE DATE NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL ,
ATTACHMENT_URL VARCHAR2(255 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for ACT_BPM_CONFIG
-- ----------------------------
DROP TABLE ACT_BPM_CONFIG;
CREATE TABLE ACT_BPM_CONFIG (
CONFIG_ID NUMBER NOT NULL ,
PROC_DEF_KEY VARCHAR2(64 BYTE) NULL ,
CODING_RULE VARCHAR2(255 BYTE) NULL ,
TITLE_FORMAT VARCHAR2(255 BYTE) NULL ,
CC_TITLE_FORMAT VARCHAR2(255 BYTE) NULL ,
CC_CONTENT_FORMAT VARCHAR2(1024 BYTE) NULL ,
URGE_TITLE_FORMAT VARCHAR2(255 BYTE) NULL ,
URGE_CONTENT_FORMAT VARCHAR2(1024 BYTE) NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE NOT NULL ,
LAST_UPDATE_DATE DATE NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER NOT NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for ACT_BPM_EXCEPTION
-- ----------------------------
DROP TABLE ACT_BPM_EXCEPTION;
CREATE TABLE ACT_BPM_EXCEPTION (
EXCEPTION_ID NUMBER NOT NULL ,
TYPE VARCHAR2(16 BYTE) NULL ,
CONTENT VARCHAR2(4000 BYTE) NULL ,
PROC_INST_ID VARCHAR2(64 BYTE) NULL ,
PROC_DEF_KEY VARCHAR2(64 BYTE) NULL ,
TASK_ID VARCHAR2(64 BYTE) NULL ,
TASK_NAME VARCHAR2(64 BYTE) NULL ,
STATUS NUMBER DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE NOT NULL ,
LAST_UPDATE_DATE DATE NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for ACT_BPM_LIST
-- ----------------------------
DROP TABLE ACT_BPM_LIST;
CREATE TABLE ACT_BPM_LIST (
LIST_ID NUMBER NOT NULL ,
LIST_CODE VARCHAR2(64 BYTE) NULL ,
LIST_NAME VARCHAR2(64 BYTE) NULL ,
CATEGORY_ID NUMBER DEFAULT NULL  NULL ,
TITLE VARCHAR2(64 BYTE) NULL ,
DESCRIPTION VARCHAR2(255 BYTE) NULL ,
VARIABLES CLOB NULL ,
PROPERTIES CLOB NULL ,
EXTEND CLOB NULL ,
START_TIME DATE DEFAULT NULL  NULL ,
END_TIME DATE DEFAULT NULL  NULL ,
RESULT VARCHAR2(16 BYTE) NULL ,
STATUS NUMBER DEFAULT NULL  NULL ,
BUSINESS_KEY VARCHAR2(64 BYTE) NULL ,
BILL_NO VARCHAR2(128 BYTE) NULL ,
PROC_DEF_ID VARCHAR2(64 BYTE) NULL ,
PROC_DEF_KEY VARCHAR2(64 BYTE) NULL ,
PROC_INST_ID VARCHAR2(64 BYTE) NULL ,
POSITION_ID NUMBER DEFAULT NULL  NULL ,
APPLY_POSITION_ID NUMBER DEFAULT NULL  NULL ,
RESPONSIBILITY_ID NUMBER DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE NOT NULL ,
LAST_UPDATE_DATE DATE NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL ,
ORG_ID NUMBER DEFAULT NULL  NULL ,
USER_TYPE VARCHAR2(64 BYTE) NULL ,
ROLE_TYPE VARCHAR2(64 BYTE) NULL ,
CUST_ACCOUNT_ID NUMBER DEFAULT NULL  NULL ,
DEPARTMENT_ID NUMBER DEFAULT NULL  NULL ,
APPLY_PERSON_ID NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN ACT_BPM_LIST.APPLY_POSITION_ID IS '申请人职位ID';
COMMENT ON COLUMN ACT_BPM_LIST.CUST_ACCOUNT_ID IS '经销商ID';
COMMENT ON COLUMN ACT_BPM_LIST.DEPARTMENT_ID IS '部门ID';
COMMENT ON COLUMN ACT_BPM_LIST.APPLY_PERSON_ID IS '申请人ID';

-- ----------------------------
-- Table structure for ACT_BPM_NOTIFY_TASK
-- ----------------------------
DROP TABLE ACT_BPM_NOTIFY_TASK;
CREATE TABLE ACT_BPM_NOTIFY_TASK (
NOTIFY_ID NUMBER NOT NULL ,
TITLE VARCHAR2(64 BYTE) NULL ,
CONTENT VARCHAR2(1024 BYTE) NULL ,
PROC_INST_ID VARCHAR2(64 BYTE) NULL ,
PROC_DEF_KEY VARCHAR2(64 BYTE) NULL ,
TASK_ID VARCHAR2(64 BYTE) NULL ,
TASK_NAME VARCHAR2(64 BYTE) NULL ,
RECEIVER_ID NUMBER DEFAULT NULL  NULL ,
READ_TIME DATE DEFAULT NULL  NULL ,
STATUS NUMBER DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE NOT NULL ,
LAST_UPDATE_DATE DATE NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for ACT_BPM_PERMISSION
-- ----------------------------
DROP TABLE ACT_BPM_PERMISSION;
CREATE TABLE ACT_BPM_PERMISSION (
PERMISSION_ID NUMBER NOT NULL ,
PROC_DEF_KEY VARCHAR2(64 BYTE) NULL ,
SYSTEM_CODE VARCHAR2(30 BYTE) NULL ,
OU_ID NUMBER DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE NOT NULL ,
LAST_UPDATE_DATE DATE NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for ACT_BPM_ROLE
-- ----------------------------
DROP TABLE ACT_BPM_ROLE;
CREATE TABLE ACT_BPM_ROLE (
ROLE_ID NUMBER NOT NULL ,
ROLE_KEY VARCHAR2(32 BYTE) NULL ,
ROLE_NAME VARCHAR2(64 BYTE) NULL ,
SYSTEM_CODE VARCHAR2(30 BYTE) NULL ,
HANDLER_EXPRESSION_TYPE VARCHAR2(16 BYTE) NULL ,
HANDLER_EXPRESSION VARCHAR2(255 BYTE) NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE NOT NULL ,
LAST_UPDATE_DATE DATE NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER NOT NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for ACT_BPM_TASK_CONFIG
-- ----------------------------
DROP TABLE ACT_BPM_TASK_CONFIG;
CREATE TABLE ACT_BPM_TASK_CONFIG (
CONFIG_ID NUMBER NOT NULL ,
PROC_DEF_KEY VARCHAR2(64 BYTE) NULL ,
TASK_DEF_ID VARCHAR2(64 BYTE) NULL ,
TASK_NAME VARCHAR2(255 BYTE) NULL ,
PCFORM_URL VARCHAR2(255 BYTE) NULL ,
MOBFORM_URL VARCHAR2(255 BYTE) NULL ,
PC_DATA_URL VARCHAR2(255 BYTE) NULL ,
MOB_DATA_URL VARCHAR2(255 BYTE) NULL ,
PROCESSER_IDS VARCHAR2(255 BYTE) NULL ,
PROCESSER_ROLE_KEYS VARCHAR2(255 BYTE) NULL ,
CC_IDS VARCHAR2(255 BYTE) NULL ,
CC_ROLE_KEYS VARCHAR2(255 BYTE) NULL ,
VARIABLES CLOB NULL ,
CALLBACK_URL VARCHAR2(255 BYTE) NULL ,
EDIT_STATUS NUMBER DEFAULT NULL  NULL ,
ENABLE_AUTOJUMP NUMBER DEFAULT NULL  NULL ,
EXTEND CLOB NULL ,
SORT_ID NUMBER DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE NOT NULL ,
LAST_UPDATE_DATE DATE NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER NOT NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for ACT_BPM_TASK_DELEGATE
-- ----------------------------
DROP TABLE ACT_BPM_TASK_DELEGATE;
CREATE TABLE ACT_BPM_TASK_DELEGATE (
DELEGATE_ID NUMBER NOT NULL ,
TASK_ID VARCHAR2(64 BYTE) NULL ,
TASK_NAME VARCHAR2(64 BYTE) NULL ,
PROC_DEF_KEY VARCHAR2(64 BYTE) NULL ,
PROC_INST_ID VARCHAR2(64 BYTE) NULL ,
CLIENT_USER_ID NUMBER NOT NULL ,
DELEGATE_USER_ID NUMBER DEFAULT NULL  NULL ,
TASK_TIME DATE DEFAULT NULL  NULL ,
START_TIME DATE DEFAULT NULL  NULL ,
END_TIME DATE DEFAULT NULL  NULL ,
STATUS VARCHAR2(16 BYTE) NULL ,
IS_AUTO NUMBER DEFAULT 0  NULL ,
CONFIG_ID NUMBER DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE NOT NULL ,
LAST_UPDATE_DATE DATE NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER NOT NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for ACT_BPM_TASK_DELEGATE_CONFIG
-- ----------------------------
DROP TABLE ACT_BPM_TASK_DELEGATE_CONFIG;
CREATE TABLE ACT_BPM_TASK_DELEGATE_CONFIG (
CONFIG_ID NUMBER NOT NULL ,
CLIENT_USER_ID NUMBER NOT NULL ,
DELEGATE_USER_ID NUMBER NOT NULL ,
CATEGORY_IDS VARCHAR2(255 BYTE) NULL ,
PROC_DEF_KEYS VARCHAR2(1024 BYTE) NULL ,
SYSTEM_CODE VARCHAR2(30 BYTE) NULL ,
START_TIME DATE DEFAULT NULL  NULL ,
END_TIME DATE DEFAULT NULL  NULL ,
DISABLED NUMBER DEFAULT 0  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE NOT NULL ,
LAST_UPDATE_DATE DATE NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER NOT NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for ACT_BPM_TASK_LEAVEL
-- ----------------------------
DROP TABLE ACT_BPM_TASK_LEAVEL;
CREATE TABLE ACT_BPM_TASK_LEAVEL (
TASK_ID VARCHAR2(64 BYTE) NOT NULL ,
PARENT_TASK_ID VARCHAR2(64 BYTE) NULL ,
TOP_TASK_ID VARCHAR2(64 BYTE) NULL ,
TOP_PROC_INST_ID VARCHAR2(64 BYTE) NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE NOT NULL ,
LAST_UPDATE_DATE DATE NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER NOT NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for ACT_BPM_TASK_PROCESSER
-- ----------------------------
DROP TABLE ACT_BPM_TASK_PROCESSER;
CREATE TABLE ACT_BPM_TASK_PROCESSER (
PROCESSER_ID NUMBER NOT NULL ,
CONFIG_ID NUMBER NOT NULL ,
PROCESSER_IDS VARCHAR2(1024 BYTE) NULL ,
PROCESSER_ROLE_KEYS VARCHAR2(1024 BYTE) NULL ,
SORT_ID NUMBER DEFAULT NULL  NULL ,
DISABLED NUMBER DEFAULT 0  NOT NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE NOT NULL ,
LAST_UPDATE_DATE DATE NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER NOT NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for ACT_BPM_TASK_URGE_CONFIG
-- ----------------------------
DROP TABLE ACT_BPM_TASK_URGE_CONFIG;
CREATE TABLE ACT_BPM_TASK_URGE_CONFIG (
CONFIG_ID NUMBER NOT NULL ,
PROC_DEF_KEY VARCHAR2(64 BYTE) NULL ,
START_TIME DATE DEFAULT NULL  NULL ,
END_TIME DATE DEFAULT NULL  NULL ,
TIMEOUT NUMBER DEFAULT NULL  NULL ,
TIMEGAP NUMBER DEFAULT NULL  NULL ,
DISABLED NUMBER DEFAULT 0  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE NOT NULL ,
LAST_UPDATE_DATE DATE NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER NOT NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for ACT_EVT_LOG
-- ----------------------------
DROP TABLE ACT_EVT_LOG;
CREATE TABLE ACT_EVT_LOG (
LOG_NR_ NUMBER NOT NULL ,
TYPE_ VARCHAR2(64 BYTE) NULL ,
PROC_DEF_ID_ VARCHAR2(64 BYTE) NULL ,
PROC_INST_ID_ VARCHAR2(64 BYTE) NULL ,
EXECUTION_ID_ VARCHAR2(64 BYTE) NULL ,
TASK_ID_ VARCHAR2(64 BYTE) NULL ,
TIME_STAMP_ TIMESTAMP(6)  DEFAULT sysdate  NOT NULL ,
USER_ID_ VARCHAR2(255 BYTE) NULL ,
DATA_ BLOB NULL ,
LOCK_OWNER_ VARCHAR2(255 BYTE) NULL ,
LOCK_TIME_ TIMESTAMP(6)  DEFAULT NULL  NULL ,
IS_PROCESSED_ NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for ACT_GE_BYTEARRAY
-- ----------------------------
DROP TABLE ACT_GE_BYTEARRAY;
CREATE TABLE ACT_GE_BYTEARRAY (
ID_ VARCHAR2(64 BYTE) NOT NULL ,
REV_ NUMBER DEFAULT NULL  NULL ,
NAME_ VARCHAR2(255 BYTE) NULL ,
DEPLOYMENT_ID_ VARCHAR2(64 BYTE) NULL ,
BYTES_ BLOB NULL ,
GENERATED_ NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for ACT_GE_PROPERTY
-- ----------------------------
DROP TABLE ACT_GE_PROPERTY;
CREATE TABLE ACT_GE_PROPERTY (
NAME_ VARCHAR2(64 BYTE) NOT NULL ,
VALUE_ VARCHAR2(300 BYTE) NULL ,
REV_ NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for ACT_HI_ACTINST
-- ----------------------------
DROP TABLE ACT_HI_ACTINST;
CREATE TABLE ACT_HI_ACTINST (
ID_ VARCHAR2(64 BYTE) NOT NULL ,
PROC_DEF_ID_ VARCHAR2(64 BYTE) NULL ,
PROC_INST_ID_ VARCHAR2(64 BYTE) NULL ,
EXECUTION_ID_ VARCHAR2(64 BYTE) NULL ,
ACT_ID_ VARCHAR2(255 BYTE) NULL ,
TASK_ID_ VARCHAR2(64 BYTE) NULL ,
CALL_PROC_INST_ID_ VARCHAR2(64 BYTE) NULL ,
ACT_NAME_ VARCHAR2(255 BYTE) NULL ,
ACT_TYPE_ VARCHAR2(255 BYTE) NULL ,
ASSIGNEE_ VARCHAR2(255 BYTE) NULL ,
START_TIME_ DATE NULL ,
END_TIME_ DATE NULL ,
DURATION_ NUMBER DEFAULT NULL  NULL ,
TENANT_ID_ VARCHAR2(255 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for ACT_HI_ATTACHMENT
-- ----------------------------
DROP TABLE ACT_HI_ATTACHMENT;
CREATE TABLE ACT_HI_ATTACHMENT (
ID_ VARCHAR2(64 BYTE) NOT NULL ,
REV_ NUMBER DEFAULT NULL  NULL ,
USER_ID_ VARCHAR2(255 BYTE) NULL ,
NAME_ VARCHAR2(255 BYTE) NULL ,
DESCRIPTION_ VARCHAR2(4000 BYTE) NULL ,
TYPE_ VARCHAR2(255 BYTE) NULL ,
TASK_ID_ VARCHAR2(64 BYTE) NULL ,
PROC_INST_ID_ VARCHAR2(64 BYTE) NULL ,
URL_ VARCHAR2(4000 BYTE) NULL ,
CONTENT_ID_ VARCHAR2(64 BYTE) NULL ,
TIME_ DATE NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for ACT_HI_COMMENT
-- ----------------------------
DROP TABLE ACT_HI_COMMENT;
CREATE TABLE ACT_HI_COMMENT (
ID_ VARCHAR2(64 BYTE) NOT NULL ,
TYPE_ VARCHAR2(255 BYTE) NULL ,
TIME_ DATE NULL ,
USER_ID_ VARCHAR2(255 BYTE) NULL ,
TASK_ID_ VARCHAR2(64 BYTE) NULL ,
PROC_INST_ID_ VARCHAR2(64 BYTE) NULL ,
ACTION_ VARCHAR2(255 BYTE) NULL ,
MESSAGE_ VARCHAR2(4000 BYTE) NULL ,
FULL_MSG_ BLOB NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for ACT_HI_DETAIL
-- ----------------------------
DROP TABLE ACT_HI_DETAIL;
CREATE TABLE ACT_HI_DETAIL (
ID_ VARCHAR2(64 BYTE) NOT NULL ,
TYPE_ VARCHAR2(255 BYTE) NULL ,
PROC_INST_ID_ VARCHAR2(64 BYTE) NULL ,
EXECUTION_ID_ VARCHAR2(64 BYTE) NULL ,
TASK_ID_ VARCHAR2(64 BYTE) NULL ,
ACT_INST_ID_ VARCHAR2(64 BYTE) NULL ,
NAME_ VARCHAR2(255 BYTE) NULL ,
VAR_TYPE_ VARCHAR2(255 BYTE) NULL ,
REV_ NUMBER DEFAULT NULL  NULL ,
TIME_ DATE NULL ,
BYTEARRAY_ID_ VARCHAR2(64 BYTE) NULL ,
DOUBLE_ BINARY_DOUBLE DEFAULT NULL  NULL ,
LONG_ NUMBER DEFAULT NULL  NULL ,
TEXT_ VARCHAR2(4000 BYTE) NULL ,
TEXT2_ VARCHAR2(4000 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for ACT_HI_IDENTITYLINK
-- ----------------------------
DROP TABLE ACT_HI_IDENTITYLINK;
CREATE TABLE ACT_HI_IDENTITYLINK (
ID_ VARCHAR2(64 BYTE) NOT NULL ,
GROUP_ID_ VARCHAR2(255 BYTE) NULL ,
TYPE_ VARCHAR2(255 BYTE) NULL ,
USER_ID_ VARCHAR2(255 BYTE) NULL ,
TASK_ID_ VARCHAR2(64 BYTE) NULL ,
PROC_INST_ID_ VARCHAR2(64 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for ACT_HI_PROCINST
-- ----------------------------
DROP TABLE ACT_HI_PROCINST;
CREATE TABLE ACT_HI_PROCINST (
ID_ VARCHAR2(64 BYTE) NOT NULL ,
PROC_INST_ID_ VARCHAR2(64 BYTE) NULL ,
BUSINESS_KEY_ VARCHAR2(255 BYTE) NULL ,
PROC_DEF_ID_ VARCHAR2(64 BYTE) NULL ,
START_TIME_ DATE NULL ,
END_TIME_ DATE NULL ,
DURATION_ NUMBER DEFAULT NULL  NULL ,
START_USER_ID_ VARCHAR2(255 BYTE) NULL ,
START_ACT_ID_ VARCHAR2(255 BYTE) NULL ,
END_ACT_ID_ VARCHAR2(255 BYTE) NULL ,
SUPER_PROCESS_INSTANCE_ID_ VARCHAR2(64 BYTE) NULL ,
DELETE_REASON_ VARCHAR2(4000 BYTE) NULL ,
TENANT_ID_ VARCHAR2(255 BYTE) NULL ,
NAME_ VARCHAR2(255 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for ACT_HI_TASKINST
-- ----------------------------
DROP TABLE ACT_HI_TASKINST;
CREATE TABLE ACT_HI_TASKINST (
ID_ VARCHAR2(64 BYTE) NOT NULL ,
PROC_DEF_ID_ VARCHAR2(64 BYTE) NULL ,
TASK_DEF_KEY_ VARCHAR2(255 BYTE) NULL ,
PROC_INST_ID_ VARCHAR2(64 BYTE) NULL ,
EXECUTION_ID_ VARCHAR2(64 BYTE) NULL ,
NAME_ VARCHAR2(255 BYTE) NULL ,
PARENT_TASK_ID_ VARCHAR2(64 BYTE) NULL ,
DESCRIPTION_ VARCHAR2(4000 BYTE) NULL ,
OWNER_ VARCHAR2(255 BYTE) NULL ,
ASSIGNEE_ VARCHAR2(255 BYTE) NULL ,
START_TIME_ DATE NULL ,
CLAIM_TIME_ DATE NULL ,
END_TIME_ DATE NULL ,
DURATION_ NUMBER DEFAULT NULL  NULL ,
DELETE_REASON_ VARCHAR2(4000 BYTE) NULL ,
PRIORITY_ NUMBER DEFAULT NULL  NULL ,
DUE_DATE_ DATE NULL ,
FORM_KEY_ VARCHAR2(255 BYTE) NULL ,
CATEGORY_ VARCHAR2(255 BYTE) NULL ,
TENANT_ID_ VARCHAR2(255 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for ACT_HI_VARINST
-- ----------------------------
DROP TABLE ACT_HI_VARINST;
CREATE TABLE ACT_HI_VARINST (
ID_ VARCHAR2(64 BYTE) NOT NULL ,
PROC_INST_ID_ VARCHAR2(64 BYTE) NULL ,
EXECUTION_ID_ VARCHAR2(64 BYTE) NULL ,
TASK_ID_ VARCHAR2(64 BYTE) NULL ,
NAME_ VARCHAR2(255 BYTE) NULL ,
VAR_TYPE_ VARCHAR2(100 BYTE) NULL ,
REV_ NUMBER DEFAULT NULL  NULL ,
BYTEARRAY_ID_ VARCHAR2(64 BYTE) NULL ,
DOUBLE_ BINARY_DOUBLE DEFAULT NULL  NULL ,
LONG_ NUMBER DEFAULT NULL  NULL ,
TEXT_ VARCHAR2(4000 BYTE) NULL ,
TEXT2_ VARCHAR2(4000 BYTE) NULL ,
CREATE_TIME_ DATE NULL ,
LAST_UPDATED_TIME_ DATE NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for ACT_ID_GROUP
-- ----------------------------
DROP TABLE ACT_ID_GROUP;
CREATE TABLE ACT_ID_GROUP (
ID_ VARCHAR2(64 BYTE) NOT NULL ,
REV_ NUMBER DEFAULT NULL  NULL ,
NAME_ VARCHAR2(255 BYTE) NULL ,
TYPE_ VARCHAR2(255 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for ACT_ID_INFO
-- ----------------------------
DROP TABLE ACT_ID_INFO;
CREATE TABLE ACT_ID_INFO (
ID_ VARCHAR2(64 BYTE) NOT NULL ,
REV_ NUMBER DEFAULT NULL  NULL ,
USER_ID_ VARCHAR2(64 BYTE) NULL ,
TYPE_ VARCHAR2(64 BYTE) NULL ,
KEY_ VARCHAR2(255 BYTE) NULL ,
VALUE_ VARCHAR2(255 BYTE) NULL ,
PASSWORD_ BLOB NULL ,
PARENT_ID_ VARCHAR2(255 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for ACT_ID_MEMBERSHIP
-- ----------------------------
DROP TABLE ACT_ID_MEMBERSHIP;
CREATE TABLE ACT_ID_MEMBERSHIP (
USER_ID_ VARCHAR2(64 BYTE) NOT NULL ,
GROUP_ID_ VARCHAR2(64 BYTE) NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for ACT_ID_USER
-- ----------------------------
DROP TABLE ACT_ID_USER;
CREATE TABLE ACT_ID_USER (
ID_ VARCHAR2(64 BYTE) NOT NULL ,
REV_ NUMBER DEFAULT NULL  NULL ,
FIRST_ VARCHAR2(255 BYTE) NULL ,
LAST_ VARCHAR2(255 BYTE) NULL ,
EMAIL_ VARCHAR2(255 BYTE) NULL ,
PWD_ VARCHAR2(255 BYTE) NULL ,
PICTURE_ID_ VARCHAR2(64 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for ACT_PROCDEF_INFO
-- ----------------------------
DROP TABLE ACT_PROCDEF_INFO;
CREATE TABLE ACT_PROCDEF_INFO (
ID_ VARCHAR2(64 BYTE) NOT NULL ,
PROC_DEF_ID_ VARCHAR2(64 BYTE) NULL ,
REV_ NUMBER DEFAULT NULL  NULL ,
INFO_JSON_ID_ VARCHAR2(64 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for ACT_RE_DEPLOYMENT
-- ----------------------------
DROP TABLE ACT_RE_DEPLOYMENT;
CREATE TABLE ACT_RE_DEPLOYMENT (
ID_ VARCHAR2(64 BYTE) NOT NULL ,
NAME_ VARCHAR2(255 BYTE) NULL ,
CATEGORY_ VARCHAR2(255 BYTE) NULL ,
TENANT_ID_ VARCHAR2(255 BYTE) NULL ,
DEPLOY_TIME_ TIMESTAMP(6)  DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for ACT_RE_MODEL
-- ----------------------------
DROP TABLE ACT_RE_MODEL;
CREATE TABLE ACT_RE_MODEL (
ID_ VARCHAR2(64 BYTE) NOT NULL ,
REV_ NUMBER DEFAULT NULL  NULL ,
NAME_ VARCHAR2(255 BYTE) NULL ,
KEY_ VARCHAR2(255 BYTE) NULL ,
CATEGORY_ VARCHAR2(255 BYTE) NULL ,
CREATE_TIME_ TIMESTAMP(6)  DEFAULT NULL  NULL ,
LAST_UPDATE_TIME_ TIMESTAMP(6)  DEFAULT NULL  NULL ,
VERSION_ NUMBER DEFAULT NULL  NULL ,
META_INFO_ VARCHAR2(4000 BYTE) NULL ,
DEPLOYMENT_ID_ VARCHAR2(64 BYTE) NULL ,
EDITOR_SOURCE_VALUE_ID_ VARCHAR2(64 BYTE) NULL ,
EDITOR_SOURCE_EXTRA_VALUE_ID_ VARCHAR2(64 BYTE) NULL ,
TENANT_ID_ VARCHAR2(255 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for ACT_RE_PROCDEF
-- ----------------------------
DROP TABLE ACT_RE_PROCDEF;
CREATE TABLE ACT_RE_PROCDEF (
ID_ VARCHAR2(64 BYTE) NOT NULL ,
REV_ NUMBER DEFAULT NULL  NULL ,
CATEGORY_ VARCHAR2(255 BYTE) NULL ,
NAME_ VARCHAR2(255 BYTE) NULL ,
KEY_ VARCHAR2(255 BYTE) NULL ,
VERSION_ NUMBER NOT NULL ,
DEPLOYMENT_ID_ VARCHAR2(64 BYTE) NULL ,
RESOURCE_NAME_ VARCHAR2(4000 BYTE) NULL ,
DGRM_RESOURCE_NAME_ VARCHAR2(4000 BYTE) NULL ,
DESCRIPTION_ VARCHAR2(4000 BYTE) NULL ,
HAS_START_FORM_KEY_ NUMBER DEFAULT NULL  NULL ,
HAS_GRAPHICAL_NOTATION_ NUMBER DEFAULT NULL  NULL ,
SUSPENSION_STATE_ NUMBER DEFAULT NULL  NULL ,
TENANT_ID_ VARCHAR2(255 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for ACT_RU_EVENT_SUBSCR
-- ----------------------------
DROP TABLE ACT_RU_EVENT_SUBSCR;
CREATE TABLE ACT_RU_EVENT_SUBSCR (
ID_ VARCHAR2(64 BYTE) NOT NULL ,
REV_ NUMBER DEFAULT NULL  NULL ,
EVENT_TYPE_ VARCHAR2(255 BYTE) NULL ,
EVENT_NAME_ VARCHAR2(255 BYTE) NULL ,
EXECUTION_ID_ VARCHAR2(64 BYTE) NULL ,
PROC_INST_ID_ VARCHAR2(64 BYTE) NULL ,
ACTIVITY_ID_ VARCHAR2(64 BYTE) NULL ,
CONFIGURATION_ VARCHAR2(255 BYTE) NULL ,
CREATED_ TIMESTAMP(6)  DEFAULT sysdate  NOT NULL ,
PROC_DEF_ID_ VARCHAR2(64 BYTE) NULL ,
TENANT_ID_ VARCHAR2(255 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for ACT_RU_EXECUTION
-- ----------------------------
DROP TABLE ACT_RU_EXECUTION;
CREATE TABLE ACT_RU_EXECUTION (
ID_ VARCHAR2(64 BYTE) NOT NULL ,
REV_ NUMBER DEFAULT NULL  NULL ,
PROC_INST_ID_ VARCHAR2(64 BYTE) NULL ,
BUSINESS_KEY_ VARCHAR2(255 BYTE) NULL ,
PARENT_ID_ VARCHAR2(64 BYTE) NULL ,
PROC_DEF_ID_ VARCHAR2(64 BYTE) NULL ,
SUPER_EXEC_ VARCHAR2(64 BYTE) NULL ,
ACT_ID_ VARCHAR2(255 BYTE) NULL ,
IS_ACTIVE_ NUMBER DEFAULT NULL  NULL ,
IS_CONCURRENT_ NUMBER DEFAULT NULL  NULL ,
IS_SCOPE_ NUMBER DEFAULT NULL  NULL ,
IS_EVENT_SCOPE_ NUMBER DEFAULT NULL  NULL ,
SUSPENSION_STATE_ NUMBER DEFAULT NULL  NULL ,
CACHED_ENT_STATE_ NUMBER DEFAULT NULL  NULL ,
TENANT_ID_ VARCHAR2(255 BYTE) NULL ,
NAME_ VARCHAR2(255 BYTE) NULL ,
LOCK_TIME_ TIMESTAMP(6)  DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for ACT_RU_IDENTITYLINK
-- ----------------------------
DROP TABLE ACT_RU_IDENTITYLINK;
CREATE TABLE ACT_RU_IDENTITYLINK (
ID_ VARCHAR2(64 BYTE) NOT NULL ,
REV_ NUMBER DEFAULT NULL  NULL ,
GROUP_ID_ VARCHAR2(255 BYTE) NULL ,
TYPE_ VARCHAR2(255 BYTE) NULL ,
USER_ID_ VARCHAR2(255 BYTE) NULL ,
TASK_ID_ VARCHAR2(64 BYTE) NULL ,
PROC_INST_ID_ VARCHAR2(64 BYTE) NULL ,
PROC_DEF_ID_ VARCHAR2(64 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for ACT_RU_JOB
-- ----------------------------
DROP TABLE ACT_RU_JOB;
CREATE TABLE ACT_RU_JOB (
ID_ VARCHAR2(64 BYTE) NOT NULL ,
REV_ NUMBER DEFAULT NULL  NULL ,
TYPE_ VARCHAR2(255 BYTE) NULL ,
LOCK_EXP_TIME_ TIMESTAMP(6)  DEFAULT NULL  NULL ,
LOCK_OWNER_ VARCHAR2(255 BYTE) NULL ,
EXCLUSIVE_ NUMBER DEFAULT NULL  NULL ,
EXECUTION_ID_ VARCHAR2(64 BYTE) NULL ,
PROCESS_INSTANCE_ID_ VARCHAR2(64 BYTE) NULL ,
PROC_DEF_ID_ VARCHAR2(64 BYTE) NULL ,
RETRIES_ NUMBER DEFAULT NULL  NULL ,
EXCEPTION_STACK_ID_ VARCHAR2(64 BYTE) NULL ,
EXCEPTION_MSG_ VARCHAR2(4000 BYTE) NULL ,
DUEDATE_ TIMESTAMP(6)  DEFAULT NULL  NULL ,
REPEAT_ VARCHAR2(255 BYTE) NULL ,
HANDLER_TYPE_ VARCHAR2(255 BYTE) NULL ,
HANDLER_CFG_ VARCHAR2(4000 BYTE) NULL ,
TENANT_ID_ VARCHAR2(255 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for ACT_RU_TASK
-- ----------------------------
DROP TABLE ACT_RU_TASK;
CREATE TABLE ACT_RU_TASK (
ID_ VARCHAR2(64 BYTE) NOT NULL ,
REV_ NUMBER DEFAULT NULL  NULL ,
EXECUTION_ID_ VARCHAR2(64 BYTE) NULL ,
PROC_INST_ID_ VARCHAR2(64 BYTE) NULL ,
PROC_DEF_ID_ VARCHAR2(64 BYTE) NULL ,
NAME_ VARCHAR2(255 BYTE) NULL ,
PARENT_TASK_ID_ VARCHAR2(64 BYTE) NULL ,
DESCRIPTION_ VARCHAR2(4000 BYTE) NULL ,
TASK_DEF_KEY_ VARCHAR2(255 BYTE) NULL ,
OWNER_ VARCHAR2(255 BYTE) NULL ,
ASSIGNEE_ VARCHAR2(255 BYTE) NULL ,
DELEGATION_ VARCHAR2(64 BYTE) NULL ,
PRIORITY_ NUMBER DEFAULT NULL  NULL ,
CREATE_TIME_ TIMESTAMP(6)  DEFAULT NULL  NULL ,
DUE_DATE_ DATE NULL ,
CATEGORY_ VARCHAR2(255 BYTE) NULL ,
SUSPENSION_STATE_ NUMBER DEFAULT NULL  NULL ,
TENANT_ID_ VARCHAR2(255 BYTE) NULL ,
FORM_KEY_ VARCHAR2(255 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for ACT_RU_VARIABLE
-- ----------------------------
DROP TABLE ACT_RU_VARIABLE;
CREATE TABLE ACT_RU_VARIABLE (
ID_ VARCHAR2(64 BYTE) NOT NULL ,
REV_ NUMBER DEFAULT NULL  NULL ,
TYPE_ VARCHAR2(255 BYTE) NULL ,
NAME_ VARCHAR2(255 BYTE) NULL ,
EXECUTION_ID_ VARCHAR2(64 BYTE) NULL ,
PROC_INST_ID_ VARCHAR2(64 BYTE) NULL ,
TASK_ID_ VARCHAR2(64 BYTE) NULL ,
BYTEARRAY_ID_ VARCHAR2(64 BYTE) NULL ,
DOUBLE_ BINARY_DOUBLE DEFAULT NULL  NULL ,
LONG_ NUMBER DEFAULT NULL  NULL ,
TEXT_ VARCHAR2(4000 BYTE) NULL ,
TEXT2_ VARCHAR2(4000 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for ADMIN_AREA_INFO
-- ----------------------------
DROP TABLE ADMIN_AREA_INFO;
CREATE TABLE ADMIN_AREA_INFO (
AREA_ID NUMBER NOT NULL ,
AREA_CODE VARCHAR2(30 BYTE) NULL ,
AREA_NAME VARCHAR2(500 BYTE) NULL ,
AREA_TYPE VARCHAR2(50 BYTE) NULL ,
AREA_LEVEL VARCHAR2(10 BYTE) NULL ,
AREA_POSTCODE VARCHAR2(30 BYTE) NULL ,
AREA_STATUS VARCHAR2(30 BYTE) NULL ,
PARENT_AREA_CODE VARCHAR2(30 BYTE) NULL ,
PARENT_AREA_NAME VARCHAR2(500 BYTE) NULL ,
REGION_CODE VARCHAR2(50 BYTE) NULL ,
LONGITUDE VARCHAR2(30 BYTE) NULL ,
LATITUDE VARCHAR2(30 BYTE) NULL ,
DESCRIPTION VARCHAR2(500 BYTE) NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT sysdate  NOT NULL ,
CREATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATE_DATE DATE DEFAULT sysdate  NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN ADMIN_AREA_INFO.AREA_ID IS '表ID，主键，供其他表做外键';

-- ----------------------------
-- Table structure for BASE_ACCESS_BASEDATA
-- ----------------------------
DROP TABLE BASE_ACCESS_BASEDATA;
CREATE TABLE BASE_ACCESS_BASEDATA (
ACCESS_ID NUMBER NOT NULL ,
ORG_ID NUMBER DEFAULT NULL  NULL ,
ACCESS_TYPE VARCHAR2(10 BYTE) NULL ,
USER_ID NUMBER DEFAULT NULL  NULL ,
PERSON_ID NUMBER DEFAULT NULL  NULL ,
POSITION_ID NUMBER DEFAULT NULL  NULL ,
SUBORDINATE_PERSON_ID NUMBER DEFAULT NULL  NULL ,
SUBORDINATE_POSITION_ID NUMBER DEFAULT NULL  NULL ,
CUST_ACCOUNT_ID NUMBER DEFAULT NULL  NULL ,
ACCOUNT_NUMBER VARCHAR2(30 BYTE) NULL ,
SECONDARY_INVENTORY_NAME VARCHAR2(30 BYTE) NULL ,
CHANNEL_TYPE VARCHAR2(30 BYTE) NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_ACCESS_BASEDATA.ACCESS_ID IS '主键ID';
COMMENT ON COLUMN BASE_ACCESS_BASEDATA.ORG_ID IS '事业部';
COMMENT ON COLUMN BASE_ACCESS_BASEDATA.USER_ID IS '用户ID';
COMMENT ON COLUMN BASE_ACCESS_BASEDATA.PERSON_ID IS '人员ID';
COMMENT ON COLUMN BASE_ACCESS_BASEDATA.POSITION_ID IS '职位';
COMMENT ON COLUMN BASE_ACCESS_BASEDATA.SUBORDINATE_PERSON_ID IS '下级人员ID';
COMMENT ON COLUMN BASE_ACCESS_BASEDATA.SUBORDINATE_POSITION_ID IS '下级职位ID';
COMMENT ON COLUMN BASE_ACCESS_BASEDATA.CUST_ACCOUNT_ID IS '经销商ID';
COMMENT ON COLUMN BASE_ACCESS_BASEDATA.CREATION_DATE IS '创建时间';
COMMENT ON COLUMN BASE_ACCESS_BASEDATA.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_ACCESS_BASEDATA.LAST_UPDATE_DATE IS '更新时间';
COMMENT ON COLUMN BASE_ACCESS_BASEDATA.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_ACCESS_BASEDATA.LAST_UPDATE_LOGIN IS '最后更新登录ID';
COMMENT ON COLUMN BASE_ACCESS_BASEDATA.DELETE_FLAG IS '删除标识';
COMMENT ON COLUMN BASE_ACCESS_BASEDATA.VERSION_NUM IS '版本号';

-- ----------------------------
-- Table structure for BASE_ADMINSTRATIVE_REGION
-- ----------------------------
DROP TABLE BASE_ADMINSTRATIVE_REGION;
CREATE TABLE BASE_ADMINSTRATIVE_REGION (
REGION_ID NUMBER NOT NULL ,
PARENT_REGION_ID NUMBER DEFAULT NULL  NULL ,
REGION_CODE VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
PARENT_REGION_CODE VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
CITY_CODE VARCHAR2(10 BYTE) DEFAULT NULL  NULL ,
AD_CODE VARCHAR2(10 BYTE) DEFAULT NULL  NULL ,
REGION_NAME VARCHAR2(100 BYTE) DEFAULT NULL  NULL ,
REGION_SPELL_NAME VARCHAR2(100 BYTE) DEFAULT NULL  NULL ,
REGION_SHORT_NAME VARCHAR2(50 BYTE) DEFAULT NULL  NULL ,
REGION_SHORT_SPELL_NAME VARCHAR2(50 BYTE) DEFAULT NULL  NULL ,
REGION_NAMES VARCHAR2(100 BYTE) DEFAULT NULL  NULL ,
REGION_SHORT_NAMES VARCHAR2(80 BYTE) DEFAULT NULL  NULL ,
REGION_CENTER VARCHAR2(50 BYTE) DEFAULT NULL  NULL ,
REGION_LEVEL VARCHAR2(20 BYTE) DEFAULT NULL  NULL ,
REGION_DESCRIPTION VARCHAR2(400 BYTE) DEFAULT NULL  NULL ,
IS_HOT_CITY VARCHAR2(5 BYTE) DEFAULT NULL  NULL ,
ENABLED VARCHAR2(5 BYTE) DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_ADMINSTRATIVE_REGION.REGION_ID IS '行动区域Id';
COMMENT ON COLUMN BASE_ADMINSTRATIVE_REGION.PARENT_REGION_ID IS '上级行政区域Id';
COMMENT ON COLUMN BASE_ADMINSTRATIVE_REGION.REGION_CODE IS '区域代码';
COMMENT ON COLUMN BASE_ADMINSTRATIVE_REGION.PARENT_REGION_CODE IS '上级行政区域代码';
COMMENT ON COLUMN BASE_ADMINSTRATIVE_REGION.CITY_CODE IS '城市编码';
COMMENT ON COLUMN BASE_ADMINSTRATIVE_REGION.AD_CODE IS '区域编码';
COMMENT ON COLUMN BASE_ADMINSTRATIVE_REGION.REGION_NAME IS '行政区域名称';
COMMENT ON COLUMN BASE_ADMINSTRATIVE_REGION.REGION_SPELL_NAME IS '行政区域拼音';
COMMENT ON COLUMN BASE_ADMINSTRATIVE_REGION.REGION_SHORT_NAME IS '行政区域简称';
COMMENT ON COLUMN BASE_ADMINSTRATIVE_REGION.REGION_SHORT_SPELL_NAME IS '行政区域简称拼音';
COMMENT ON COLUMN BASE_ADMINSTRATIVE_REGION.REGION_NAMES IS '省市区全称';
COMMENT ON COLUMN BASE_ADMINSTRATIVE_REGION.REGION_SHORT_NAMES IS '省市区简称';
COMMENT ON COLUMN BASE_ADMINSTRATIVE_REGION.REGION_CENTER IS '城市中心点经纬度';
COMMENT ON COLUMN BASE_ADMINSTRATIVE_REGION.REGION_LEVEL IS '行政区划级别,country:国家,province:省份（直辖市会在province和city显示）,city:市（直辖市会在province和city显示,district:区县,street:街道';
COMMENT ON COLUMN BASE_ADMINSTRATIVE_REGION.REGION_DESCRIPTION IS '行政区域描述';
COMMENT ON COLUMN BASE_ADMINSTRATIVE_REGION.IS_HOT_CITY IS '是否热门城市,Y/N';
COMMENT ON COLUMN BASE_ADMINSTRATIVE_REGION.ENABLED IS '是否生效';
COMMENT ON COLUMN BASE_ADMINSTRATIVE_REGION.DELETE_FLAG IS '删除标记';
COMMENT ON COLUMN BASE_ADMINSTRATIVE_REGION.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_ADMINSTRATIVE_REGION.CREATION_DATE IS '创建时间';
COMMENT ON COLUMN BASE_ADMINSTRATIVE_REGION.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_ADMINSTRATIVE_REGION.LAST_UPDATE_DATE IS '更新时间';
COMMENT ON COLUMN BASE_ADMINSTRATIVE_REGION.LAST_UPDATE_LOGIN IS '最后一次更新人帐号';
COMMENT ON COLUMN BASE_ADMINSTRATIVE_REGION.VERSION_NUM IS '版本号';

-- ----------------------------
-- Table structure for BASE_API_CENTER_H
-- ----------------------------
DROP TABLE BASE_API_CENTER_H;
CREATE TABLE BASE_API_CENTER_H (
APIH_ID NUMBER NOT NULL ,
CENTER_NAME VARCHAR2(100 BYTE) NULL ,
CENTER_CODE VARCHAR2(100 BYTE) NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_API_CENTER_H.APIH_ID IS '主键ID';
COMMENT ON COLUMN BASE_API_CENTER_H.VERSION_NUM IS '版本号';

-- ----------------------------
-- Table structure for BASE_API_CENTER_L
-- ----------------------------
DROP TABLE BASE_API_CENTER_L;
CREATE TABLE BASE_API_CENTER_L (
APIL_ID NUMBER NOT NULL ,
CENTER_CODE VARCHAR2(100 BYTE) NULL ,
MODEL_NAME VARCHAR2(400 BYTE) NULL ,
MODEL_CODE VARCHAR2(400 BYTE) NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_API_CENTER_L.APIL_ID IS '主键ID';
COMMENT ON COLUMN BASE_API_CENTER_L.VERSION_NUM IS '版本号';

-- ----------------------------
-- Table structure for BASE_API_MANAGEMENT
-- ----------------------------
DROP TABLE BASE_API_MANAGEMENT;
CREATE TABLE BASE_API_MANAGEMENT (
API_ID NUMBER NOT NULL ,
INTERFACE_NAME VARCHAR2(400 BYTE) NULL ,
REQUEST_MODE VARCHAR2(100 BYTE) NULL ,
API_STATUS VARCHAR2(100 BYTE) NULL ,
URL_ADDRESS VARCHAR2(400 BYTE) NULL ,
DEVELOPER VARCHAR2(128 BYTE) NULL ,
API_DESC VARCHAR2(400 BYTE) NULL ,
REQUEST_PARAM CLOB NULL ,
REQUEST_PARAM_DICT CLOB NULL ,
RESPONSE_PARAM CLOB NULL ,
RESPONSE_PARAM_DICT CLOB NULL ,
CENTER_NAME VARCHAR2(100 BYTE) NULL ,
CENTER_CODE VARCHAR2(100 BYTE) NULL ,
MODEL_NAME VARCHAR2(400 BYTE) NULL ,
MODEL_CODE VARCHAR2(400 BYTE) NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_API_MANAGEMENT.API_ID IS '主键ID';
COMMENT ON COLUMN BASE_API_MANAGEMENT.VERSION_NUM IS '版本号';

-- ----------------------------
-- Table structure for BASE_APP_AUTH_CONTAIN
-- ----------------------------
DROP TABLE BASE_APP_AUTH_CONTAIN;
CREATE TABLE BASE_APP_AUTH_CONTAIN (
AUTH_APP_WAP_ID NUMBER NOT NULL ,
APP_WAP_ID NUMBER DEFAULT NULL  NULL ,
OBJECT_TYPE VARCHAR2(16 BYTE) NULL ,
OU_ID NUMBER DEFAULT NULL  NULL ,
DEP_CODE VARCHAR2(64 BYTE) NULL ,
EMP_ID NUMBER DEFAULT NULL  NULL ,
PROVINCE VARCHAR2(64 BYTE) NULL ,
CITY VARCHAR2(64 BYTE) NULL ,
AREA VARCHAR2(64 BYTE) NULL ,
STORE VARCHAR2(64 BYTE) NULL ,
DEALER VARCHAR2(64 BYTE) NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_APP_AUTH_CONTAIN.AUTH_APP_WAP_ID IS '用户授权主键';
COMMENT ON COLUMN BASE_APP_AUTH_CONTAIN.APP_WAP_ID IS 'app应用主键';
COMMENT ON COLUMN BASE_APP_AUTH_CONTAIN.OU_ID IS 'OU ID';
COMMENT ON COLUMN BASE_APP_AUTH_CONTAIN.EMP_ID IS '员工Id';
COMMENT ON COLUMN BASE_APP_AUTH_CONTAIN.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_APP_AUTH_CONTAIN.CREATION_DATE IS '创建时间';
COMMENT ON COLUMN BASE_APP_AUTH_CONTAIN.LAST_UPDATE_DATE IS '最后更新时间';
COMMENT ON COLUMN BASE_APP_AUTH_CONTAIN.LAST_UPDATE_LOGIN IS '最后登录Id';
COMMENT ON COLUMN BASE_APP_AUTH_CONTAIN.LAST_UPDATED_BY IS '最后更新人';
COMMENT ON COLUMN BASE_APP_AUTH_CONTAIN.VERSION_NUM IS '版本号';
COMMENT ON COLUMN BASE_APP_AUTH_CONTAIN.DELETE_FLAG IS '是否删除0：未删除1：已删除';

-- ----------------------------
-- Table structure for BASE_APP_AUTH_EXCLUDE
-- ----------------------------
DROP TABLE BASE_APP_AUTH_EXCLUDE;
CREATE TABLE BASE_APP_AUTH_EXCLUDE (
AUTH_APP_WAP_ID NUMBER NOT NULL ,
APP_WAP_ID NUMBER DEFAULT NULL  NULL ,
OBJECT_TYPE VARCHAR2(16 BYTE) NULL ,
OU_ID NUMBER DEFAULT NULL  NULL ,
DEP_CODE VARCHAR2(64 BYTE) NULL ,
EMP_ID NUMBER DEFAULT NULL  NULL ,
PROVINCE VARCHAR2(64 BYTE) NULL ,
CITY VARCHAR2(64 BYTE) NULL ,
AREA VARCHAR2(64 BYTE) NULL ,
STORE VARCHAR2(64 BYTE) NULL ,
DEALER VARCHAR2(64 BYTE) NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_APP_AUTH_EXCLUDE.AUTH_APP_WAP_ID IS '用户授权主键';
COMMENT ON COLUMN BASE_APP_AUTH_EXCLUDE.APP_WAP_ID IS 'app应用主键';
COMMENT ON COLUMN BASE_APP_AUTH_EXCLUDE.OU_ID IS 'OU ID';
COMMENT ON COLUMN BASE_APP_AUTH_EXCLUDE.EMP_ID IS '员工Id';
COMMENT ON COLUMN BASE_APP_AUTH_EXCLUDE.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_APP_AUTH_EXCLUDE.CREATION_DATE IS '创建时间';
COMMENT ON COLUMN BASE_APP_AUTH_EXCLUDE.LAST_UPDATE_DATE IS '最后更新时间';
COMMENT ON COLUMN BASE_APP_AUTH_EXCLUDE.LAST_UPDATE_LOGIN IS '最后登录Id';
COMMENT ON COLUMN BASE_APP_AUTH_EXCLUDE.LAST_UPDATED_BY IS '最后更新人';
COMMENT ON COLUMN BASE_APP_AUTH_EXCLUDE.VERSION_NUM IS '版本号';
COMMENT ON COLUMN BASE_APP_AUTH_EXCLUDE.DELETE_FLAG IS '是否删除0：未删除1：已删除';

-- ----------------------------
-- Table structure for BASE_APP_DEPLOYEE_INFO
-- ----------------------------
DROP TABLE BASE_APP_DEPLOYEE_INFO;
CREATE TABLE BASE_APP_DEPLOYEE_INFO (
APP_WAP_ID NUMBER NOT NULL ,
APP_NAME VARCHAR2(32 BYTE) NULL ,
APP_WAP_ID_NAME VARCHAR2(64 BYTE) NULL ,
APP_WAP_NAME VARCHAR2(64 BYTE) NULL ,
APP_WAP_DESC VARCHAR2(256 BYTE) NULL ,
APP_WAP_SORT_ID NUMBER DEFAULT NULL  NULL ,
APP_WAP_VERSION VARCHAR2(16 BYTE) NULL ,
WAP_PACKING_VERSION VARCHAR2(16 BYTE) NULL ,
APP_WAP_ACCESS_HOME_PATH VARCHAR2(2000 BYTE) NULL ,
APP_WAP_FULL_SCREEN VARCHAR2(2 BYTE) NULL ,
APP_WAP_BACKUP_PATH VARCHAR2(1000 BYTE) NULL ,
APP_WAP_IMAGE_PATH VARCHAR2(1000 BYTE) NULL ,
APP_WAP_UPLOAD_PATH VARCHAR2(128 BYTE) NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_APP_DEPLOYEE_INFO.APP_WAP_ID IS '主键Id';
COMMENT ON COLUMN BASE_APP_DEPLOYEE_INFO.APP_WAP_SORT_ID IS '应用排序';
COMMENT ON COLUMN BASE_APP_DEPLOYEE_INFO.DELETE_FLAG IS '删除标记, 0表示未删除 1表示已删除';

-- ----------------------------
-- Table structure for BASE_APP_DEPLOYEE_MENU
-- ----------------------------
DROP TABLE BASE_APP_DEPLOYEE_MENU;
CREATE TABLE BASE_APP_DEPLOYEE_MENU (
APP_MENU_ID NUMBER NOT NULL ,
APP_WAP_ID NUMBER DEFAULT NULL  NULL ,
APP_MENU_NAME VARCHAR2(64 BYTE) NULL ,
APP_MENU_CODE VARCHAR2(64 BYTE) NULL ,
APP_MENU_IMG VARCHAR2(3000 BYTE) NULL ,
APP_MENU_URL VARCHAR2(3000 BYTE) NULL ,
APP_MENU_SORT NUMBER DEFAULT NULL  NULL ,
APP_DEFAULT_DISPLAY NUMBER DEFAULT 0  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_APP_DEPLOYEE_MENU.APP_MENU_ID IS '主键Id';
COMMENT ON COLUMN BASE_APP_DEPLOYEE_MENU.APP_MENU_SORT IS 'app菜单排序';
COMMENT ON COLUMN BASE_APP_DEPLOYEE_MENU.APP_DEFAULT_DISPLAY IS '默认显示在最近使用栏,0表示显示 1表示不显示';
COMMENT ON COLUMN BASE_APP_DEPLOYEE_MENU.DELETE_FLAG IS '删除标记, 0表示未删除 1表示已删除';

-- ----------------------------
-- Table structure for BASE_ATTACHMENT
-- ----------------------------
DROP TABLE BASE_ATTACHMENT;
CREATE TABLE BASE_ATTACHMENT (
FILE_ID NUMBER NOT NULL ,
SOURCE_FILE_NAME VARCHAR2(200 BYTE) NULL ,
FUNCTION_ID VARCHAR2(50 BYTE) NULL ,
BUSINESS_ID NUMBER DEFAULT NULL  NULL ,
FILE_STORE_SYSTEM NUMBER DEFAULT NULL  NULL ,
FILE_PATH VARCHAR2(200 BYTE) NULL ,
BUCKET_NAME VARCHAR2(100 BYTE) NULL ,
PHY_FILE_NAME VARCHAR2(100 BYTE) NULL ,
STATUS VARCHAR2(2 BYTE) NULL ,
FILE_SIZE NUMBER(10,2) DEFAULT NULL  NULL ,
FILE_TYPE VARCHAR2(20 BYTE) NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_ATTACHMENT.FILE_ID IS '文件ID';
COMMENT ON COLUMN BASE_ATTACHMENT.BUSINESS_ID IS '业务来源主键';
COMMENT ON COLUMN BASE_ATTACHMENT.FILE_STORE_SYSTEM IS '文件存储系统--1阿里sso 2文档系统';
COMMENT ON COLUMN BASE_ATTACHMENT.FILE_SIZE IS '文件大小(MB)';
COMMENT ON COLUMN BASE_ATTACHMENT.DELETE_FLAG IS '是否删除0未删除1已删除';
COMMENT ON COLUMN BASE_ATTACHMENT.CREATED_BY IS '创建用户ID';
COMMENT ON COLUMN BASE_ATTACHMENT.CREATION_DATE IS '创建时间';
COMMENT ON COLUMN BASE_ATTACHMENT.LAST_UPDATED_BY IS '最后修改用户ID';
COMMENT ON COLUMN BASE_ATTACHMENT.LAST_UPDATE_DATE IS '最后修改时间';
COMMENT ON COLUMN BASE_ATTACHMENT.LAST_UPDATE_LOGIN IS 'LAST_UPDATE_LOGIN';
COMMENT ON COLUMN BASE_ATTACHMENT.VERSION_NUM IS '版本号';

-- ----------------------------
-- Table structure for BASE_BUTTON_DATA
-- ----------------------------
DROP TABLE BASE_BUTTON_DATA;
CREATE TABLE BASE_BUTTON_DATA (
BBD_ID NUMBER NOT NULL ,
BBD_NAME VARCHAR2(30 BYTE) NULL ,
BBD_CODE VARCHAR2(50 BYTE) NULL ,
RES_ICON VARCHAR2(50 BYTE) NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_BUTTON_DATA.BBD_ID IS '主键ID';
COMMENT ON COLUMN BASE_BUTTON_DATA.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_BUTTON_DATA.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_BUTTON_DATA.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_BUTTON_DATA.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_BUTTON_DATA.VERSION_NUM IS '版本号';
COMMENT ON COLUMN BASE_BUTTON_DATA.LAST_UPDATE_LOGIN IS 'last_update_login';

-- ----------------------------
-- Table structure for BASE_BUTTON_DATA_LANGUAGE
-- ----------------------------
DROP TABLE BASE_BUTTON_DATA_LANGUAGE;
CREATE TABLE BASE_BUTTON_DATA_LANGUAGE (
BBD_LANGUAGE_ID NUMBER NOT NULL ,
BBD_NAME VARCHAR2(50 BYTE) NULL ,
BBD_ID NUMBER DEFAULT NULL  NULL ,
LANGUAGE VARCHAR2(30 BYTE) NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_BUTTON_DATA_LANGUAGE.BBD_LANGUAGE_ID IS '主键ID';
COMMENT ON COLUMN BASE_BUTTON_DATA_LANGUAGE.BBD_ID IS '系统编码';
COMMENT ON COLUMN BASE_BUTTON_DATA_LANGUAGE.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_BUTTON_DATA_LANGUAGE.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_BUTTON_DATA_LANGUAGE.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_BUTTON_DATA_LANGUAGE.VERSION_NUM IS '版本号';

-- ----------------------------
-- Table structure for BASE_CHANNEL
-- ----------------------------
DROP TABLE BASE_CHANNEL;
CREATE TABLE BASE_CHANNEL (
CHANNEL_ID NUMBER NOT NULL ,
CHANNEL_CODE VARCHAR2(150 BYTE) NULL ,
CHANNEL_NAME VARCHAR2(240 BYTE) NULL ,
CHANNEL_DESC VARCHAR2(240 BYTE) NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_CHANNEL.CHANNEL_ID IS '渠道Id';
COMMENT ON COLUMN BASE_CHANNEL.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_CHANNEL.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_CHANNEL.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_CHANNEL.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_CHANNEL.VERSION_NUM IS '版本号';
COMMENT ON COLUMN BASE_CHANNEL.LAST_UPDATE_LOGIN IS 'last_update_login';

-- ----------------------------
-- Table structure for BASE_CHANNEL_PRIVILEGE
-- ----------------------------
DROP TABLE BASE_CHANNEL_PRIVILEGE;
CREATE TABLE BASE_CHANNEL_PRIVILEGE (
CHANNEL_PRIVILEGE_ID NUMBER NOT NULL ,
ORG_ID NUMBER DEFAULT NULL  NULL ,
ACCESS_TYPE VARCHAR2(10 BYTE) NULL ,
CHANNEL_TYPE VARCHAR2(30 BYTE) NULL ,
TRANSACTION_TYPE_ID NUMBER DEFAULT NULL  NULL ,
ITEM_CODE VARCHAR2(30 BYTE) NULL ,
VALID_FLAG VARCHAR2(5 BYTE) NULL ,
CUSTOMER_ORDER_FLAG VARCHAR2(5 BYTE) NULL ,
DEFAULT_TYPE VARCHAR2(30 BYTE) NULL ,
ATTRIBUTE_CATEGORY VARCHAR2(30 BYTE) NULL ,
ATTRIBUTE1 VARCHAR2(150 BYTE) NULL ,
ATTRIBUTE2 VARCHAR2(150 BYTE) NULL ,
ATTRIBUTE3 VARCHAR2(150 BYTE) NULL ,
ATTRIBUTE4 VARCHAR2(150 BYTE) NULL ,
ATTRIBUTE5 VARCHAR2(150 BYTE) NULL ,
ATTRIBUTE6 VARCHAR2(150 BYTE) NULL ,
ATTRIBUTE7 VARCHAR2(150 BYTE) NULL ,
ATTRIBUTE8 VARCHAR2(150 BYTE) NULL ,
ATTRIBUTE9 VARCHAR2(150 BYTE) NULL ,
ATTRIBUTE10 VARCHAR2(150 BYTE) NULL ,
IS_BCREIMBURSEHEO VARCHAR2(5 BYTE) NULL ,
EXPENSE_PRICE_LIST_ID NUMBER DEFAULT NULL  NULL ,
IS_LINK_CASH_ORDER VARCHAR2(5 BYTE) NULL ,
EXPENSE_ACCOUNT NUMBER DEFAULT NULL  NULL ,
IS_QUOTA_CONTROL VARCHAR2(5 BYTE) NULL ,
IS_PROMOTION_CONTROL VARCHAR2(5 BYTE) NULL ,
IS_PAYMENT_CONTROL VARCHAR2(5 BYTE) NULL ,
IS_MOD_AMOUNT VARCHAR2(5 BYTE) NULL ,
PREFERRED_PAYMENT_ACCOUNT VARCHAR2(5 BYTE) NULL ,
BALANCE_CHECK_IN_APPROVE VARCHAR2(5 BYTE) NULL ,
VIEW_BALANCE_IN_OD_CREATE VARCHAR2(5 BYTE) NULL ,
VIEW_BALANCE_IN_APPROVE VARCHAR2(5 BYTE) NULL ,
BALANCE_CONTROL_OD_SUBMIT VARCHAR2(5 BYTE) NULL ,
BALANCE_CONTROL_OD_APPROVE VARCHAR2(5 BYTE) NULL ,
CARRIER_IN_APPROVE VARCHAR2(5 BYTE) NULL ,
IS_PURCHASE_RULE_CONTROL VARCHAR2(5 BYTE) NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_CHANNEL_PRIVILEGE.CHANNEL_PRIVILEGE_ID IS '主键';
COMMENT ON COLUMN BASE_CHANNEL_PRIVILEGE.ORG_ID IS 'OU组织Id';
COMMENT ON COLUMN BASE_CHANNEL_PRIVILEGE.TRANSACTION_TYPE_ID IS '交易Id、物料Id';
COMMENT ON COLUMN BASE_CHANNEL_PRIVILEGE.EXPENSE_PRICE_LIST_ID IS '费用价目表，订单计入费用科目时使用，当IS_BCREIMBURSEHEO字段为Y时必填';
COMMENT ON COLUMN BASE_CHANNEL_PRIVILEGE.EXPENSE_ACCOUNT IS '费用科目code';
COMMENT ON COLUMN BASE_CHANNEL_PRIVILEGE.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_CHANNEL_PRIVILEGE.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_CHANNEL_PRIVILEGE.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_CHANNEL_PRIVILEGE.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_CHANNEL_PRIVILEGE.VERSION_NUM IS '版本号';
COMMENT ON COLUMN BASE_CHANNEL_PRIVILEGE.LAST_UPDATE_LOGIN IS 'last_update_login';

-- ----------------------------
-- Table structure for BASE_CMS_ARTICLE
-- ----------------------------
DROP TABLE BASE_CMS_ARTICLE;
CREATE TABLE BASE_CMS_ARTICLE (
ARTICLE_ID NUMBER NOT NULL ,
ARTICLE_CATEGORY VARCHAR2(5 BYTE) DEFAULT NULL  NULL ,
ARTICLE_TYPE VARCHAR2(5 BYTE) DEFAULT NULL  NULL ,
TOP_FLAG VARCHAR2(50 BYTE) DEFAULT NULL  NULL ,
ARTICLE_TITLE VARCHAR2(50 BYTE) DEFAULT NULL  NULL ,
BIZ_ID NUMBER DEFAULT NULL  NULL ,
BIZ_CODE VARCHAR2(50 BYTE) DEFAULT NULL  NULL ,
ARTICLE_AUTHOR VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
EN_ARTICLE_DESCRIPTION VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ARTICLE_DESCRIPTION VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ENABLED_FLAG VARCHAR2(2 BYTE) DEFAULT NULL  NULL ,
PICTURE_WEB VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
PICTURE_PC VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ARTICLE_CONTENT_URL VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ARTICLE_STATUS VARCHAR2(2 BYTE) DEFAULT NULL  NULL ,
VISITED NUMBER DEFAULT NULL  NULL ,
TOP_TO_DATE DATE DEFAULT NULL  NULL ,
ARTICLE_PUBLISH_DATE DATE DEFAULT NULL  NULL ,
ARTICLE_INVALID_DATE DATE DEFAULT NULL  NULL ,
EN_ARTICLE_CONTENT CLOB NULL ,
ARTICLE_CONTENT CLOB NULL ,
SYSTEM_CODE VARCHAR2(20 BYTE) DEFAULT NULL  NULL ,
COMPANY_ID NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_CMS_ARTICLE.ARTICLE_ID IS '主键Id';
COMMENT ON COLUMN BASE_CMS_ARTICLE.ARTICLE_CATEGORY IS '文章分类';
COMMENT ON COLUMN BASE_CMS_ARTICLE.ARTICLE_TYPE IS '文章类型';
COMMENT ON COLUMN BASE_CMS_ARTICLE.TOP_FLAG IS '置顶标识';
COMMENT ON COLUMN BASE_CMS_ARTICLE.ARTICLE_TITLE IS '文章标题';
COMMENT ON COLUMN BASE_CMS_ARTICLE.BIZ_ID IS '业务id';
COMMENT ON COLUMN BASE_CMS_ARTICLE.BIZ_CODE IS '业务编码';
COMMENT ON COLUMN BASE_CMS_ARTICLE.ARTICLE_AUTHOR IS '文章作者';
COMMENT ON COLUMN BASE_CMS_ARTICLE.EN_ARTICLE_DESCRIPTION IS '文章简述英文';
COMMENT ON COLUMN BASE_CMS_ARTICLE.ARTICLE_DESCRIPTION IS '文章简述';
COMMENT ON COLUMN BASE_CMS_ARTICLE.ENABLED_FLAG IS '是否首页显示';
COMMENT ON COLUMN BASE_CMS_ARTICLE.PICTURE_WEB IS 'web端缩略图url';
COMMENT ON COLUMN BASE_CMS_ARTICLE.PICTURE_PC IS 'pc端缩略图url';
COMMENT ON COLUMN BASE_CMS_ARTICLE.ARTICLE_CONTENT_URL IS '文章链接';
COMMENT ON COLUMN BASE_CMS_ARTICLE.ARTICLE_STATUS IS '文章状态:Y=生效,N=失效';
COMMENT ON COLUMN BASE_CMS_ARTICLE.VISITED IS '浏览量';
COMMENT ON COLUMN BASE_CMS_ARTICLE.TOP_TO_DATE IS '置顶结束时间';
COMMENT ON COLUMN BASE_CMS_ARTICLE.ARTICLE_PUBLISH_DATE IS '文章发布时间';
COMMENT ON COLUMN BASE_CMS_ARTICLE.ARTICLE_INVALID_DATE IS '文章失效时间';
COMMENT ON COLUMN BASE_CMS_ARTICLE.EN_ARTICLE_CONTENT IS '文章内容英文';
COMMENT ON COLUMN BASE_CMS_ARTICLE.ARTICLE_CONTENT IS '文章内容';
COMMENT ON COLUMN BASE_CMS_ARTICLE.SYSTEM_CODE IS '系统编码';
COMMENT ON COLUMN BASE_CMS_ARTICLE.COMPANY_ID IS '事业部';
COMMENT ON COLUMN BASE_CMS_ARTICLE.DELETE_FLAG IS '删除标识';
COMMENT ON COLUMN BASE_CMS_ARTICLE.CREATION_DATE IS '创建时间';
COMMENT ON COLUMN BASE_CMS_ARTICLE.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_CMS_ARTICLE.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_CMS_ARTICLE.LAST_UPDATE_DATE IS '更新时间';
COMMENT ON COLUMN BASE_CMS_ARTICLE.LAST_UPDATE_LOGIN IS '最后一次更新人帐号';
COMMENT ON COLUMN BASE_CMS_ARTICLE.VERSION_NUM IS '版本号';

-- ----------------------------
-- Table structure for BASE_CMS_CAROUSEL
-- ----------------------------
DROP TABLE BASE_CMS_CAROUSEL;
CREATE TABLE BASE_CMS_CAROUSEL (
CAROUSEL_ID NUMBER NOT NULL ,
ORDER_SEQUENCE NUMBER DEFAULT NULL  NULL ,
CAROUSEL_TYPE VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
CAROUSEL_NAME VARCHAR2(240 BYTE) DEFAULT NULL  NULL ,
CAROUSEL_POSITION VARCHAR2(240 BYTE) DEFAULT NULL  NULL ,
DISPLAY_FLAG VARCHAR2(2 BYTE) DEFAULT NULL  NULL ,
PICTURE_DESC VARCHAR2(1000 BYTE) DEFAULT NULL  NULL ,
PICTURE_URL VARCHAR2(300 BYTE) DEFAULT NULL  NULL ,
URL_ADDRESS VARCHAR2(300 BYTE) DEFAULT NULL  NULL ,
START_DATE_ACTIVE DATE DEFAULT NULL  NULL ,
END_DATE_ACTIVE DATE DEFAULT NULL  NULL ,
SOURCE_TYPE VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
SOURCE_TYPE_NAME VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
SOURCE_NAME VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
SOURCE_NAME_ID VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
COMPANY_ID NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_CMS_CAROUSEL.CAROUSEL_ID IS '主键Id';
COMMENT ON COLUMN BASE_CMS_CAROUSEL.ORDER_SEQUENCE IS '显示顺序';
COMMENT ON COLUMN BASE_CMS_CAROUSEL.CAROUSEL_TYPE IS '轮播图类型,0图片;1flash;2代码3文字';
COMMENT ON COLUMN BASE_CMS_CAROUSEL.CAROUSEL_NAME IS '轮播图名称';
COMMENT ON COLUMN BASE_CMS_CAROUSEL.CAROUSEL_POSITION IS '轮播图位置';
COMMENT ON COLUMN BASE_CMS_CAROUSEL.DISPLAY_FLAG IS '是否显示';
COMMENT ON COLUMN BASE_CMS_CAROUSEL.PICTURE_DESC IS '图片描述';
COMMENT ON COLUMN BASE_CMS_CAROUSEL.PICTURE_URL IS '图片URL地址';
COMMENT ON COLUMN BASE_CMS_CAROUSEL.URL_ADDRESS IS '超链接地址';
COMMENT ON COLUMN BASE_CMS_CAROUSEL.START_DATE_ACTIVE IS '开始时间';
COMMENT ON COLUMN BASE_CMS_CAROUSEL.END_DATE_ACTIVE IS '结束时间';
COMMENT ON COLUMN BASE_CMS_CAROUSEL.SOURCE_TYPE IS '来源类型';
COMMENT ON COLUMN BASE_CMS_CAROUSEL.SOURCE_TYPE_NAME IS '来源类型描述';
COMMENT ON COLUMN BASE_CMS_CAROUSEL.SOURCE_NAME IS '来源名称';
COMMENT ON COLUMN BASE_CMS_CAROUSEL.SOURCE_NAME_ID IS '来源名称Id';
COMMENT ON COLUMN BASE_CMS_CAROUSEL.COMPANY_ID IS '事业部';
COMMENT ON COLUMN BASE_CMS_CAROUSEL.DELETE_FLAG IS '删除标识';
COMMENT ON COLUMN BASE_CMS_CAROUSEL.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_CMS_CAROUSEL.CREATION_DATE IS '创建时间';
COMMENT ON COLUMN BASE_CMS_CAROUSEL.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_CMS_CAROUSEL.LAST_UPDATE_DATE IS '更新时间';
COMMENT ON COLUMN BASE_CMS_CAROUSEL.LAST_UPDATE_LOGIN IS '最后一次更新人帐号';
COMMENT ON COLUMN BASE_CMS_CAROUSEL.VERSION_NUM IS '版本号';

-- ----------------------------
-- Table structure for BASE_CMS_CAROUSEL_CITY
-- ----------------------------
DROP TABLE BASE_CMS_CAROUSEL_CITY;
CREATE TABLE BASE_CMS_CAROUSEL_CITY (
CAROUSEL_CITY_ID NUMBER NOT NULL ,
CAROUSEL_ID NUMBER DEFAULT NULL  NULL ,
CITY_ID NUMBER DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_CMS_CAROUSEL_CITY.CAROUSEL_CITY_ID IS '参与城市id';
COMMENT ON COLUMN BASE_CMS_CAROUSEL_CITY.CAROUSEL_ID IS '广告/轮播图Id';
COMMENT ON COLUMN BASE_CMS_CAROUSEL_CITY.CITY_ID IS '城市id';
COMMENT ON COLUMN BASE_CMS_CAROUSEL_CITY.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_CMS_CAROUSEL_CITY.CREATION_DATE IS '创建时间';
COMMENT ON COLUMN BASE_CMS_CAROUSEL_CITY.DELETE_FLAG IS '删除标识';
COMMENT ON COLUMN BASE_CMS_CAROUSEL_CITY.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_CMS_CAROUSEL_CITY.LAST_UPDATE_DATE IS '更新时间';
COMMENT ON COLUMN BASE_CMS_CAROUSEL_CITY.LAST_UPDATE_LOGIN IS '最后一次更新人帐号';
COMMENT ON COLUMN BASE_CMS_CAROUSEL_CITY.VERSION_NUM IS '版本号';

-- ----------------------------
-- Table structure for BASE_CMS_CATEGORY
-- ----------------------------
DROP TABLE BASE_CMS_CATEGORY;
CREATE TABLE BASE_CMS_CATEGORY (
CATEGORY_ID NUMBER NOT NULL ,
PARENT_CATEGORY_ID NUMBER DEFAULT NULL  NULL ,
CATEGORY_CODE VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
CATEGORY_NAME VARCHAR2(100 BYTE) DEFAULT NULL  NULL ,
ENABLED VARCHAR2(5 BYTE) DEFAULT NULL  NULL ,
CATEGORY_ICON VARCHAR2(400 BYTE) DEFAULT NULL  NULL ,
COMPANY_ID NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_CMS_CATEGORY.CATEGORY_ID IS '分类Id';
COMMENT ON COLUMN BASE_CMS_CATEGORY.PARENT_CATEGORY_ID IS '上级分类';
COMMENT ON COLUMN BASE_CMS_CATEGORY.CATEGORY_CODE IS '分类编码';
COMMENT ON COLUMN BASE_CMS_CATEGORY.CATEGORY_NAME IS '分类名称';
COMMENT ON COLUMN BASE_CMS_CATEGORY.ENABLED IS '是否生效';
COMMENT ON COLUMN BASE_CMS_CATEGORY.CATEGORY_ICON IS '分类图标 冗余附件表url字段';
COMMENT ON COLUMN BASE_CMS_CATEGORY.COMPANY_ID IS '品牌 快码COMPANY_TYPE';
COMMENT ON COLUMN BASE_CMS_CATEGORY.DELETE_FLAG IS '删除标记';
COMMENT ON COLUMN BASE_CMS_CATEGORY.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_CMS_CATEGORY.CREATION_DATE IS '创建时间';
COMMENT ON COLUMN BASE_CMS_CATEGORY.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_CMS_CATEGORY.LAST_UPDATE_DATE IS '更新时间';
COMMENT ON COLUMN BASE_CMS_CATEGORY.LAST_UPDATE_LOGIN IS '最后一次更新人帐号';
COMMENT ON COLUMN BASE_CMS_CATEGORY.VERSION_NUM IS '版本号';

-- ----------------------------
-- Table structure for BASE_CMS_WEB_NOTICE
-- ----------------------------
DROP TABLE BASE_CMS_WEB_NOTICE;
CREATE TABLE BASE_CMS_WEB_NOTICE (
NOTICE_ID NUMBER NOT NULL ,
NOTICE_TITLE VARCHAR2(240 BYTE) DEFAULT NULL  NULL ,
NOTICE_ORDER NUMBER DEFAULT NULL  NULL ,
IS_DISPLAY VARCHAR2(5 BYTE) DEFAULT NULL  NULL ,
START_TIME DATE DEFAULT NULL  NULL ,
END_TIME DATE DEFAULT NULL  NULL ,
NOTICE_CONTENT CLOB NULL ,
DELETE_FLAG NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
COMPANY_ID NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_CMS_WEB_NOTICE.NOTICE_ID IS '主键Id';
COMMENT ON COLUMN BASE_CMS_WEB_NOTICE.NOTICE_TITLE IS '标题';
COMMENT ON COLUMN BASE_CMS_WEB_NOTICE.NOTICE_ORDER IS '显示顺序';
COMMENT ON COLUMN BASE_CMS_WEB_NOTICE.IS_DISPLAY IS '是否显示';
COMMENT ON COLUMN BASE_CMS_WEB_NOTICE.START_TIME IS '生效时间';
COMMENT ON COLUMN BASE_CMS_WEB_NOTICE.END_TIME IS '失效时间';
COMMENT ON COLUMN BASE_CMS_WEB_NOTICE.NOTICE_CONTENT IS '内容';
COMMENT ON COLUMN BASE_CMS_WEB_NOTICE.DELETE_FLAG IS '删除标识';
COMMENT ON COLUMN BASE_CMS_WEB_NOTICE.CREATION_DATE IS '创建时间';
COMMENT ON COLUMN BASE_CMS_WEB_NOTICE.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_CMS_WEB_NOTICE.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_CMS_WEB_NOTICE.LAST_UPDATE_DATE IS '更新时间';
COMMENT ON COLUMN BASE_CMS_WEB_NOTICE.LAST_UPDATE_LOGIN IS '最后一次更新人帐号';
COMMENT ON COLUMN BASE_CMS_WEB_NOTICE.VERSION_NUM IS '版本号';
COMMENT ON COLUMN BASE_CMS_WEB_NOTICE.COMPANY_ID IS '事业部';

-- ----------------------------
-- Table structure for BASE_CMS_WEB_NOTICE_CITY
-- ----------------------------
DROP TABLE BASE_CMS_WEB_NOTICE_CITY;
CREATE TABLE BASE_CMS_WEB_NOTICE_CITY (
NOTICE_CITY_ID NUMBER NOT NULL ,
NOTICE_ID NUMBER DEFAULT NULL  NULL ,
CITY_ID NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_CMS_WEB_NOTICE_CITY.NOTICE_CITY_ID IS '唯一Id';
COMMENT ON COLUMN BASE_CMS_WEB_NOTICE_CITY.NOTICE_ID IS '公告id';
COMMENT ON COLUMN BASE_CMS_WEB_NOTICE_CITY.CITY_ID IS '城市id';
COMMENT ON COLUMN BASE_CMS_WEB_NOTICE_CITY.DELETE_FLAG IS '删除标识';
COMMENT ON COLUMN BASE_CMS_WEB_NOTICE_CITY.CREATION_DATE IS '创建时间';
COMMENT ON COLUMN BASE_CMS_WEB_NOTICE_CITY.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_CMS_WEB_NOTICE_CITY.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_CMS_WEB_NOTICE_CITY.LAST_UPDATE_DATE IS '更新时间';
COMMENT ON COLUMN BASE_CMS_WEB_NOTICE_CITY.LAST_UPDATE_LOGIN IS '最后一次更新人帐号';
COMMENT ON COLUMN BASE_CMS_WEB_NOTICE_CITY.VERSION_NUM IS '版本号';

-- ----------------------------
-- Table structure for BASE_COMMON_MESSAGE_CONFIRM
-- ----------------------------
DROP TABLE BASE_COMMON_MESSAGE_CONFIRM;
CREATE TABLE BASE_COMMON_MESSAGE_CONFIRM (
CONFIRMID NUMBER NOT NULL ,
MESSAGEINDEX NUMBER NOT NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_COMMON_MESSAGE_CONFIRM.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_COMMON_MESSAGE_CONFIRM.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_COMMON_MESSAGE_CONFIRM.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_COMMON_MESSAGE_CONFIRM.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_COMMON_MESSAGE_CONFIRM.VERSION_NUM IS '版本号';

-- ----------------------------
-- Table structure for BASE_COMMON_TRANSACTION_CONFIR
-- ----------------------------
DROP TABLE BASE_COMMON_TRANSACTION_CONFIR;
CREATE TABLE BASE_COMMON_TRANSACTION_CONFIR (
CONFIRMID NUMBER NOT NULL ,
MESSAGEINDEX NUMBER NOT NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_COMMON_TRANSACTION_CONFIR.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_COMMON_TRANSACTION_CONFIR.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_COMMON_TRANSACTION_CONFIR.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_COMMON_TRANSACTION_CONFIR.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_COMMON_TRANSACTION_CONFIR.VERSION_NUM IS '版本号';

-- ----------------------------
-- Table structure for BASE_COMMON_TXN_CONFIRM
-- ----------------------------
DROP TABLE BASE_COMMON_TXN_CONFIRM;
CREATE TABLE BASE_COMMON_TXN_CONFIRM (
CONFIRMID NUMBER NOT NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
MESSAGEINDEX NUMBER DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for BASE_CUST_PDA_USER_RELATION
-- ----------------------------
DROP TABLE BASE_CUST_PDA_USER_RELATION;
CREATE TABLE BASE_CUST_PDA_USER_RELATION (
RELATION_ID NUMBER NOT NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CUST_USER_ID NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT NULL  NULL ,
ENABLE_FLAG VARCHAR2(1 BYTE) DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
PDA_USER_ID NUMBER DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for BASE_DATA_EXPORT
-- ----------------------------
DROP TABLE BASE_DATA_EXPORT;
CREATE TABLE BASE_DATA_EXPORT (
DATA_EXP_ID NUMBER NOT NULL ,
CREATE_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
DOWNLOAD_PATH CLOB NULL ,
DOWNLOAD_TIMES NUMBER DEFAULT NULL  NULL ,
FILE_NAME VARCHAR2(100 BYTE) DEFAULT NULL  NULL ,
GROUP_NAME VARCHAR2(250 BYTE) DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
REMOTE_FILE_NAME CLOB NULL ,
REQUEST_DATE DATE DEFAULT NULL  NULL ,
USER_ID NUMBER DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for BASE_DEPARTMENT
-- ----------------------------
DROP TABLE BASE_DEPARTMENT;
CREATE TABLE BASE_DEPARTMENT (
DEPARTMENT_ID NUMBER NOT NULL ,
DEPARTMENT_CODE VARCHAR2(50 BYTE) NULL ,
DEPARTMENT_NAME VARCHAR2(200 BYTE) NULL ,
DEPARTMENT_FULL_NAME VARCHAR2(300 BYTE) NULL ,
SUFFIX VARCHAR2(30 BYTE) NULL ,
DEPARTMENT_LEVEL NUMBER DEFAULT NULL  NULL ,
OU_ID NUMBER DEFAULT NULL  NULL ,
PARENT_DEPARTMENT_ID NUMBER DEFAULT NULL  NULL ,
COST_CENTER VARCHAR2(30 BYTE) NULL ,
DEPARTMENT_SEQ NUMBER DEFAULT NULL  NULL ,
DATE_FROM DATE DEFAULT NULL  NULL ,
DATE_TO DATE DEFAULT NULL  NULL ,
ENABLE_FLAG VARCHAR2(6 BYTE) NULL ,
BIZ_LINE_TYPE VARCHAR2(50 BYTE) NULL ,
CHANNEL VARCHAR2(50 BYTE) NULL ,
DEPARTMENT_TYPE VARCHAR2(30 BYTE) NULL ,
INVENTORY_ENABLE VARCHAR2(10 BYTE) NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_DEPARTMENT.DEPARTMENT_ID IS '部门ID';
COMMENT ON COLUMN BASE_DEPARTMENT.DEPARTMENT_LEVEL IS '部门层级';
COMMENT ON COLUMN BASE_DEPARTMENT.OU_ID IS '事业部';
COMMENT ON COLUMN BASE_DEPARTMENT.PARENT_DEPARTMENT_ID IS '父部门';
COMMENT ON COLUMN BASE_DEPARTMENT.DEPARTMENT_SEQ IS '部门序号';
COMMENT ON COLUMN BASE_DEPARTMENT.DATE_FROM IS '生效日期';
COMMENT ON COLUMN BASE_DEPARTMENT.DATE_TO IS '失效日期';
COMMENT ON COLUMN BASE_DEPARTMENT.CREATION_DATE IS '创建时间';
COMMENT ON COLUMN BASE_DEPARTMENT.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_DEPARTMENT.LAST_UPDATE_DATE IS '更新时间';
COMMENT ON COLUMN BASE_DEPARTMENT.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_DEPARTMENT.LAST_UPDATE_LOGIN IS '最后登录ID';
COMMENT ON COLUMN BASE_DEPARTMENT.DELETE_FLAG IS '删除标识';
COMMENT ON COLUMN BASE_DEPARTMENT.VERSION_NUM IS '版本号';

-- ----------------------------
-- Table structure for BASE_DEPARTMENT_CUST
-- ----------------------------
DROP TABLE BASE_DEPARTMENT_CUST;
CREATE TABLE BASE_DEPARTMENT_CUST (
DEPARTMENT_CUST_ID NUMBER NOT NULL ,
OU_ID NUMBER NOT NULL ,
DEPARTMENT_ID NUMBER NOT NULL ,
CUST_ACCOUNT_ID NUMBER DEFAULT NULL  NULL ,
PRIMARY_FLAG VARCHAR2(30 BYTE) NULL ,
START_DATE DATE DEFAULT NULL  NULL ,
END_DATE DATE DEFAULT NULL  NULL ,
ENABLE_FLAG VARCHAR2(10 BYTE) NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_DEPARTMENT_CUST.DEPARTMENT_CUST_ID IS '主键';
COMMENT ON COLUMN BASE_DEPARTMENT_CUST.OU_ID IS '事业部';
COMMENT ON COLUMN BASE_DEPARTMENT_CUST.DEPARTMENT_ID IS '部门ID';
COMMENT ON COLUMN BASE_DEPARTMENT_CUST.CUST_ACCOUNT_ID IS '经销商';
COMMENT ON COLUMN BASE_DEPARTMENT_CUST.START_DATE IS '生效日期';
COMMENT ON COLUMN BASE_DEPARTMENT_CUST.END_DATE IS '失效日期';
COMMENT ON COLUMN BASE_DEPARTMENT_CUST.CREATION_DATE IS '创建时间';
COMMENT ON COLUMN BASE_DEPARTMENT_CUST.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_DEPARTMENT_CUST.LAST_UPDATE_DATE IS '更新时间';
COMMENT ON COLUMN BASE_DEPARTMENT_CUST.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_DEPARTMENT_CUST.LAST_UPDATE_LOGIN IS '最后登录ID';
COMMENT ON COLUMN BASE_DEPARTMENT_CUST.DELETE_FLAG IS '删除标识';
COMMENT ON COLUMN BASE_DEPARTMENT_CUST.VERSION_NUM IS '版本号';

-- ----------------------------
-- Table structure for BASE_DEPARTMENT_HIERARCHY
-- ----------------------------
DROP TABLE BASE_DEPARTMENT_HIERARCHY;
CREATE TABLE BASE_DEPARTMENT_HIERARCHY (
SEQ_ID NUMBER NOT NULL ,
OU_ID NUMBER DEFAULT NULL  NULL ,
DEPARTMENT_ID NUMBER DEFAULT NULL  NULL ,
SUBORDINATE_DEPARTMENT_ID NUMBER DEFAULT NULL  NULL ,
LEVEL_DIFFERENCE NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_DEPARTMENT_HIERARCHY.SEQ_ID IS '主键ID';
COMMENT ON COLUMN BASE_DEPARTMENT_HIERARCHY.OU_ID IS '事业部';
COMMENT ON COLUMN BASE_DEPARTMENT_HIERARCHY.DEPARTMENT_ID IS '当前部门ID';
COMMENT ON COLUMN BASE_DEPARTMENT_HIERARCHY.SUBORDINATE_DEPARTMENT_ID IS '下级部门ID';
COMMENT ON COLUMN BASE_DEPARTMENT_HIERARCHY.LEVEL_DIFFERENCE IS '部门层级差异';
COMMENT ON COLUMN BASE_DEPARTMENT_HIERARCHY.CREATION_DATE IS '创建时间';
COMMENT ON COLUMN BASE_DEPARTMENT_HIERARCHY.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_DEPARTMENT_HIERARCHY.LAST_UPDATE_DATE IS '更新时间';
COMMENT ON COLUMN BASE_DEPARTMENT_HIERARCHY.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_DEPARTMENT_HIERARCHY.LAST_UPDATE_LOGIN IS '最后登录ID';
COMMENT ON COLUMN BASE_DEPARTMENT_HIERARCHY.DELETE_FLAG IS '删除标识';
COMMENT ON COLUMN BASE_DEPARTMENT_HIERARCHY.VERSION_NUM IS '版本号';

-- ----------------------------
-- Table structure for BASE_DEPARTMENT_LAN
-- ----------------------------
DROP TABLE BASE_DEPARTMENT_LAN;
CREATE TABLE BASE_DEPARTMENT_LAN (
DEPARTMENT_LAN_ID NUMBER NOT NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL ,
DEPARTMENT_ID NUMBER DEFAULT NULL  NULL ,
DEPARTMENT_NAME VARCHAR2(200 BYTE) NULL ,
DEPARTMENT_TYPE VARCHAR2(30 BYTE) NULL ,
SUFFIX VARCHAR2(30 BYTE) NULL ,
COST_CENTER VARCHAR2(30 BYTE) NULL ,
LANGUAGE VARCHAR2(30 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_DEPARTMENT_LAN.DEPARTMENT_LAN_ID IS '语言部门ID';
COMMENT ON COLUMN BASE_DEPARTMENT_LAN.CREATION_DATE IS '创建时间';
COMMENT ON COLUMN BASE_DEPARTMENT_LAN.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_DEPARTMENT_LAN.LAST_UPDATE_DATE IS '更新时间';
COMMENT ON COLUMN BASE_DEPARTMENT_LAN.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_DEPARTMENT_LAN.LAST_UPDATE_LOGIN IS '最后登录ID';
COMMENT ON COLUMN BASE_DEPARTMENT_LAN.DELETE_FLAG IS '删除标识';
COMMENT ON COLUMN BASE_DEPARTMENT_LAN.DEPARTMENT_ID IS '部门ID_外键';

-- ----------------------------
-- Table structure for BASE_DEPLOYEE_APP_HOST_INFO
-- ----------------------------
DROP TABLE BASE_DEPLOYEE_APP_HOST_INFO;
CREATE TABLE BASE_DEPLOYEE_APP_HOST_INFO (
HOST_ID NUMBER NOT NULL ,
APP_WAP_CODE VARCHAR2(64 BYTE) NULL ,
HOST_NAME VARCHAR2(64 BYTE) NULL ,
HOST_PORT NUMBER DEFAULT NULL  NULL ,
HOST_USER_NAME VARCHAR2(64 BYTE) NULL ,
HOST_PASSWORD VARCHAR2(64 BYTE) NULL ,
HOST_KEY VARCHAR2(64 BYTE) NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_DEPLOYEE_APP_HOST_INFO.HOST_ID IS '主机Id';
COMMENT ON COLUMN BASE_DEPLOYEE_APP_HOST_INFO.HOST_PORT IS '主机端口';
COMMENT ON COLUMN BASE_DEPLOYEE_APP_HOST_INFO.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_DEPLOYEE_APP_HOST_INFO.CREATION_DATE IS '创建时间';
COMMENT ON COLUMN BASE_DEPLOYEE_APP_HOST_INFO.LAST_UPDATE_DATE IS '最后更新时间';
COMMENT ON COLUMN BASE_DEPLOYEE_APP_HOST_INFO.LAST_UPDATE_LOGIN IS '最后登录Id';
COMMENT ON COLUMN BASE_DEPLOYEE_APP_HOST_INFO.LAST_UPDATED_BY IS '最后更新人';
COMMENT ON COLUMN BASE_DEPLOYEE_APP_HOST_INFO.VERSION_NUM IS '版本号';
COMMENT ON COLUMN BASE_DEPLOYEE_APP_HOST_INFO.DELETE_FLAG IS '是否删除0：未删除1：已删除';

-- ----------------------------
-- Table structure for BASE_DEPLOYEE_APP_INFO
-- ----------------------------
DROP TABLE BASE_DEPLOYEE_APP_INFO;
CREATE TABLE BASE_DEPLOYEE_APP_INFO (
APP_WAP_ID NUMBER NOT NULL ,
HOST_ID NUMBER DEFAULT NULL  NULL ,
APP_CODE VARCHAR2(64 BYTE) NULL ,
APP_NAME VARCHAR2(64 BYTE) NULL ,
APP_WAP_CODE VARCHAR2(64 BYTE) NULL ,
APP_WAP_NAME VARCHAR2(64 BYTE) NULL ,
APP_WAP_DESC VARCHAR2(256 BYTE) NULL ,
APP_WAP_SORT_ID NUMBER DEFAULT NULL  NULL ,
APP_WAP_VERSION FLOAT(5) DEFAULT NULL  NULL ,
APP_PACKING_VERSION FLOAT(5) DEFAULT NULL  NULL ,
APP_WAP_ACCESS_HOME_PATH VARCHAR2(2000 BYTE) NULL ,
APP_WAP_FULL_SCREEN VARCHAR2(2 BYTE) NULL ,
APP_WAP_BACKUP_PATH VARCHAR2(1000 BYTE) NULL ,
APP_WAP_IMAGE_PATH VARCHAR2(1000 BYTE) NULL ,
APP_WAP_UPLOAD_PATH VARCHAR2(256 BYTE) NULL ,
APP_WAP_DEPLOYEE_TIME DATE DEFAULT NULL  NULL ,
APP_WAP_STATUS NUMBER DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_DEPLOYEE_APP_INFO.APP_WAP_ID IS 'app应用主键';
COMMENT ON COLUMN BASE_DEPLOYEE_APP_INFO.HOST_ID IS 'app部署主机Id';
COMMENT ON COLUMN BASE_DEPLOYEE_APP_INFO.APP_WAP_SORT_ID IS 'app应用排序';
COMMENT ON COLUMN BASE_DEPLOYEE_APP_INFO.APP_WAP_VERSION IS 'app应用版本';
COMMENT ON COLUMN BASE_DEPLOYEE_APP_INFO.APP_PACKING_VERSION IS 'app打包版本';
COMMENT ON COLUMN BASE_DEPLOYEE_APP_INFO.APP_WAP_DEPLOYEE_TIME IS 'app应用发布时间';
COMMENT ON COLUMN BASE_DEPLOYEE_APP_INFO.APP_WAP_STATUS IS 'app状态';
COMMENT ON COLUMN BASE_DEPLOYEE_APP_INFO.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_DEPLOYEE_APP_INFO.CREATION_DATE IS '创建时间';
COMMENT ON COLUMN BASE_DEPLOYEE_APP_INFO.LAST_UPDATE_DATE IS '最后更新时间';
COMMENT ON COLUMN BASE_DEPLOYEE_APP_INFO.LAST_UPDATE_LOGIN IS '最后登录id';
COMMENT ON COLUMN BASE_DEPLOYEE_APP_INFO.LAST_UPDATED_BY IS '最后更新人';
COMMENT ON COLUMN BASE_DEPLOYEE_APP_INFO.VERSION_NUM IS '版本号';
COMMENT ON COLUMN BASE_DEPLOYEE_APP_INFO.DELETE_FLAG IS '是否删除0：未删除1：已删除';

-- ----------------------------
-- Table structure for BASE_DEPLOYEE_APP_MENU
-- ----------------------------
DROP TABLE BASE_DEPLOYEE_APP_MENU;
CREATE TABLE BASE_DEPLOYEE_APP_MENU (
APP_MENU_ID NUMBER NOT NULL ,
APP_WAP_ID NUMBER DEFAULT NULL  NULL ,
APP_MENU_NAME VARCHAR2(64 BYTE) NULL ,
APP_MENU_CODE VARCHAR2(64 BYTE) NULL ,
APP_MENU_URL VARCHAR2(64 BYTE) NULL ,
APP_MENU_IMAGE_PATH VARCHAR2(1000 BYTE) NULL ,
APP_MENU_SORT NUMBER DEFAULT NULL  NULL ,
APP_DEFAULT_DISPLAY NUMBER DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_DEPLOYEE_APP_MENU.APP_MENU_ID IS 'app应用菜单主键';
COMMENT ON COLUMN BASE_DEPLOYEE_APP_MENU.APP_WAP_ID IS 'app应用主键';
COMMENT ON COLUMN BASE_DEPLOYEE_APP_MENU.APP_MENU_SORT IS 'app应用菜单排序';
COMMENT ON COLUMN BASE_DEPLOYEE_APP_MENU.APP_DEFAULT_DISPLAY IS 'app应用默认是否显示';
COMMENT ON COLUMN BASE_DEPLOYEE_APP_MENU.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_DEPLOYEE_APP_MENU.CREATION_DATE IS '创建时间';
COMMENT ON COLUMN BASE_DEPLOYEE_APP_MENU.LAST_UPDATE_DATE IS '最后更新时间';
COMMENT ON COLUMN BASE_DEPLOYEE_APP_MENU.LAST_UPDATE_LOGIN IS '最后登录id';
COMMENT ON COLUMN BASE_DEPLOYEE_APP_MENU.LAST_UPDATED_BY IS '最后登录人';
COMMENT ON COLUMN BASE_DEPLOYEE_APP_MENU.VERSION_NUM IS '版本号';
COMMENT ON COLUMN BASE_DEPLOYEE_APP_MENU.DELETE_FLAG IS '是否删除0：未删除1：已删除';

-- ----------------------------
-- Table structure for BASE_EXPORT_RECORD
-- ----------------------------
DROP TABLE BASE_EXPORT_RECORD;
CREATE TABLE BASE_EXPORT_RECORD (
ID NUMBER NOT NULL ,
EXPORT_ID VARCHAR2(45 BYTE) NULL ,
USER_ID NUMBER DEFAULT NULL  NULL ,
REQUEST_URL VARCHAR2(255 BYTE) NULL ,
REQUEST_PARAMS VARCHAR2(500 BYTE) NULL ,
FUNCTION_NAME VARCHAR2(100 BYTE) NULL ,
FILE_URL VARCHAR2(300 BYTE) NULL ,
COMPLETE_DATE DATE DEFAULT NULL  NULL ,
STATUS VARCHAR2(2 BYTE) NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_EXPORT_RECORD.COMPLETE_DATE IS '完成时间';
COMMENT ON COLUMN BASE_EXPORT_RECORD.VERSION_NUM IS '版本号';

-- ----------------------------
-- Table structure for BASE_FAQ_HELP
-- ----------------------------
DROP TABLE BASE_FAQ_HELP;
CREATE TABLE BASE_FAQ_HELP (
FAQ_ID NUMBER NOT NULL ,
CATEGORY_ID NUMBER DEFAULT NULL  NULL ,
FAQ_TYPE VARCHAR2(5 BYTE) DEFAULT NULL  NULL ,
FAQ_TITLE VARCHAR2(240 BYTE) DEFAULT NULL  NULL ,
FAQ_ORDER NUMBER DEFAULT NULL  NULL ,
IS_DISPLAY VARCHAR2(5 BYTE) DEFAULT NULL  NULL ,
IS_TOP VARCHAR2(5 BYTE) DEFAULT NULL  NULL ,
START_TIME DATE DEFAULT NULL  NULL ,
END_TIME DATE DEFAULT NULL  NULL ,
FAQ_CONTENT CLOB NULL ,
COMPANY_ID NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_FAQ_HELP.FAQ_ID IS '主键Id';
COMMENT ON COLUMN BASE_FAQ_HELP.CATEGORY_ID IS '分类Id';
COMMENT ON COLUMN BASE_FAQ_HELP.FAQ_TYPE IS '类别';
COMMENT ON COLUMN BASE_FAQ_HELP.FAQ_TITLE IS 'FAQ标题';
COMMENT ON COLUMN BASE_FAQ_HELP.FAQ_ORDER IS '显示顺序';
COMMENT ON COLUMN BASE_FAQ_HELP.IS_DISPLAY IS '是否显示';
COMMENT ON COLUMN BASE_FAQ_HELP.IS_TOP IS '是否置顶';
COMMENT ON COLUMN BASE_FAQ_HELP.START_TIME IS '生效时间';
COMMENT ON COLUMN BASE_FAQ_HELP.END_TIME IS '失效时间';
COMMENT ON COLUMN BASE_FAQ_HELP.FAQ_CONTENT IS 'FAQ内容';
COMMENT ON COLUMN BASE_FAQ_HELP.COMPANY_ID IS '品牌 快码COMPANY_TYPE';
COMMENT ON COLUMN BASE_FAQ_HELP.DELETE_FLAG IS '删除标识';
COMMENT ON COLUMN BASE_FAQ_HELP.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_FAQ_HELP.CREATION_DATE IS '创建时间';
COMMENT ON COLUMN BASE_FAQ_HELP.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_FAQ_HELP.LAST_UPDATE_DATE IS '更新时间';
COMMENT ON COLUMN BASE_FAQ_HELP.LAST_UPDATE_LOGIN IS '最后一次更新人帐号';
COMMENT ON COLUMN BASE_FAQ_HELP.VERSION_NUM IS '版本号';

-- ----------------------------
-- Table structure for BASE_FUNCTION_COLLECTION
-- ----------------------------
DROP TABLE BASE_FUNCTION_COLLECTION;
CREATE TABLE BASE_FUNCTION_COLLECTION (
FUNCTION_COLLECTION_ID NUMBER NOT NULL ,
USER_ID NUMBER DEFAULT NULL  NULL ,
COLLECTION_TYPE VARCHAR2(45 BYTE) NULL ,
FUNCTION_NAME VARCHAR2(45 BYTE) NULL ,
FUNCTION_URL VARCHAR2(255 BYTE) NULL ,
REQUEST_METHOD VARCHAR2(10 BYTE) NULL ,
MENU_ID NUMBER DEFAULT NULL  NULL ,
RESP_ID NUMBER DEFAULT NULL  NULL ,
SYSTEM_CODE VARCHAR2(100 BYTE) NULL ,
PARAMS VARCHAR2(255 BYTE) NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_FUNCTION_COLLECTION.USER_ID IS '用户id';
COMMENT ON COLUMN BASE_FUNCTION_COLLECTION.MENU_ID IS '菜单id';
COMMENT ON COLUMN BASE_FUNCTION_COLLECTION.RESP_ID IS '职责id';
COMMENT ON COLUMN BASE_FUNCTION_COLLECTION.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_FUNCTION_COLLECTION.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_FUNCTION_COLLECTION.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_FUNCTION_COLLECTION.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_FUNCTION_COLLECTION.VERSION_NUM IS '版本号';
COMMENT ON COLUMN BASE_FUNCTION_COLLECTION.LAST_UPDATE_LOGIN IS 'last_update_login';

-- ----------------------------
-- Table structure for BASE_FUNCTION_COLLECTION_LAN
-- ----------------------------
DROP TABLE BASE_FUNCTION_COLLECTION_LAN;
CREATE TABLE BASE_FUNCTION_COLLECTION_LAN (
COLLECTION_LA_ID NUMBER NOT NULL ,
FUNCTION_NAME VARCHAR2(80 BYTE) NULL ,
FUNCTION_COLLECTION_ID NUMBER NOT NULL ,
LANGUAGE VARCHAR2(30 BYTE) NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_FUNCTION_COLLECTION_LAN.COLLECTION_LA_ID IS '主键ID';
COMMENT ON COLUMN BASE_FUNCTION_COLLECTION_LAN.FUNCTION_COLLECTION_ID IS '系统编码';
COMMENT ON COLUMN BASE_FUNCTION_COLLECTION_LAN.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_FUNCTION_COLLECTION_LAN.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_FUNCTION_COLLECTION_LAN.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_FUNCTION_COLLECTION_LAN.VERSION_NUM IS '版本号';

-- ----------------------------
-- Table structure for BASE_FUNCTION_COLLECTION_USER
-- ----------------------------
DROP TABLE BASE_FUNCTION_COLLECTION_USER;
CREATE TABLE BASE_FUNCTION_COLLECTION_USER (
FUNCTION_COLLECTION_USER_ID NUMBER NOT NULL ,
USER_ID NUMBER DEFAULT NULL  NULL ,
FUNCTION_COLLECTION_ID NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_FUNCTION_COLLECTION_USER.USER_ID IS '用户id';
COMMENT ON COLUMN BASE_FUNCTION_COLLECTION_USER.FUNCTION_COLLECTION_ID IS '菜单收藏id';
COMMENT ON COLUMN BASE_FUNCTION_COLLECTION_USER.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_FUNCTION_COLLECTION_USER.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_FUNCTION_COLLECTION_USER.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_FUNCTION_COLLECTION_USER.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_FUNCTION_COLLECTION_USER.VERSION_NUM IS '版本号';
COMMENT ON COLUMN BASE_FUNCTION_COLLECTION_USER.LAST_UPDATE_LOGIN IS 'last_update_login';

-- ----------------------------
-- Table structure for BASE_INV_STORE_CONTACT_T
-- ----------------------------
DROP TABLE BASE_INV_STORE_CONTACT_T;
CREATE TABLE BASE_INV_STORE_CONTACT_T (
STORE_CONTACT_ID NUMBER NOT NULL ,
STORE_CODE VARCHAR2(30 BYTE) NULL ,
BUSINESS_TYPE VARCHAR2(30 BYTE) NULL ,
START_DATE DATE DEFAULT NULL  NULL ,
END_DATE DATE DEFAULT NULL  NULL ,
PERSON_TYPE VARCHAR2(30 BYTE) NULL ,
PERSON_ID NUMBER DEFAULT NULL  NULL ,
PERSON_NAME VARCHAR2(100 BYTE) NULL ,
PHONE VARCHAR2(100 BYTE) NULL ,
EMAIL VARCHAR2(150 BYTE) NULL ,
QQ VARCHAR2(30 BYTE) NULL ,
WEIXIN_NAME VARCHAR2(100 BYTE) NULL ,
POSITION_ID NUMBER DEFAULT NULL  NULL ,
MEMO VARCHAR2(4000 BYTE) NULL ,
STATUS CHAR(10 BYTE) NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_INV_STORE_CONTACT_T.STORE_CONTACT_ID IS '主键';
COMMENT ON COLUMN BASE_INV_STORE_CONTACT_T.START_DATE IS '开始日期';
COMMENT ON COLUMN BASE_INV_STORE_CONTACT_T.END_DATE IS '结束日期';
COMMENT ON COLUMN BASE_INV_STORE_CONTACT_T.PERSON_ID IS '人员ID';
COMMENT ON COLUMN BASE_INV_STORE_CONTACT_T.POSITION_ID IS '人员职位ID';
COMMENT ON COLUMN BASE_INV_STORE_CONTACT_T.CREATION_DATE IS '创建时间';
COMMENT ON COLUMN BASE_INV_STORE_CONTACT_T.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_INV_STORE_CONTACT_T.LAST_UPDATE_DATE IS '更新时间';
COMMENT ON COLUMN BASE_INV_STORE_CONTACT_T.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_INV_STORE_CONTACT_T.LAST_UPDATE_LOGIN IS '最后登录ID';
COMMENT ON COLUMN BASE_INV_STORE_CONTACT_T.DELETE_FLAG IS '删除标识';
COMMENT ON COLUMN BASE_INV_STORE_CONTACT_T.VERSION_NUM IS '版本';

-- ----------------------------
-- Table structure for BASE_INV_STORE_T
-- ----------------------------
DROP TABLE BASE_INV_STORE_T;
CREATE TABLE BASE_INV_STORE_T (
STORE_CUST_ID NUMBER NOT NULL ,
STORE_CODE VARCHAR2(30 BYTE) NULL ,
START_DATE DATE DEFAULT NULL  NULL ,
END_DATE DATE DEFAULT NULL  NULL ,
SUBINV_CODE VARCHAR2(30 BYTE) NULL ,
STORE_NAME VARCHAR2(250 BYTE) NULL ,
STORE_TYPE VARCHAR2(150 BYTE) NULL ,
STORE_ATTDEF VARCHAR2(150 BYTE) NULL ,
STORE_MODE VARCHAR2(150 BYTE) NULL ,
UNITE_STORE_NAME VARCHAR2(150 BYTE) NULL ,
CUST_ACCOUNT_ID NUMBER DEFAULT NULL  NULL ,
ACCOUNT_NUMBER VARCHAR2(30 BYTE) NULL ,
MAIN_SUBINV_CODE VARCHAR2(30 BYTE) NULL ,
PROVINCE VARCHAR2(150 BYTE) NULL ,
CITY VARCHAR2(150 BYTE) NULL ,
AREA VARCHAR2(150 BYTE) NULL ,
ADDRESS1 VARCHAR2(240 BYTE) NULL ,
PHONE VARCHAR2(150 BYTE) NULL ,
JINGWEI VARCHAR2(150 BYTE) NULL ,
STATUS VARCHAR2(2 BYTE) NULL ,
STORE_USER_ID NUMBER DEFAULT NULL  NULL ,
OU_ID NUMBER DEFAULT NULL  NULL ,
VERSION NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
MEMO VARCHAR2(4000 BYTE) NULL ,
X_STORE_ATTDEF VARCHAR2(150 BYTE) NULL ,
STORE_TIER VARCHAR2(150 BYTE) NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_INV_STORE_T.STORE_CUST_ID IS '主键ID';
COMMENT ON COLUMN BASE_INV_STORE_T.START_DATE IS '开始日期';
COMMENT ON COLUMN BASE_INV_STORE_T.END_DATE IS '结束日期';
COMMENT ON COLUMN BASE_INV_STORE_T.CUST_ACCOUNT_ID IS '经销商客户ID(冗余)';
COMMENT ON COLUMN BASE_INV_STORE_T.STORE_USER_ID IS '门店用户名ID';
COMMENT ON COLUMN BASE_INV_STORE_T.OU_ID IS '事业部';
COMMENT ON COLUMN BASE_INV_STORE_T.VERSION IS '版本号';
COMMENT ON COLUMN BASE_INV_STORE_T.CREATION_DATE IS '创建时间';
COMMENT ON COLUMN BASE_INV_STORE_T.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_INV_STORE_T.LAST_UPDATE_DATE IS '更新时间';
COMMENT ON COLUMN BASE_INV_STORE_T.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_INV_STORE_T.LAST_UPDATE_LOGIN IS '最后登录ID';
COMMENT ON COLUMN BASE_INV_STORE_T.DELETE_FLAG IS '删除标识';
COMMENT ON COLUMN BASE_INV_STORE_T.VERSION_NUM IS '版本';

-- ----------------------------
-- Table structure for BASE_ISSUE_FEEDBACK
-- ----------------------------
DROP TABLE BASE_ISSUE_FEEDBACK;
CREATE TABLE BASE_ISSUE_FEEDBACK (
FEEDBACK_ID NUMBER NOT NULL ,
TITLE VARCHAR2(100 BYTE) NULL ,
CONTENT CLOB NULL ,
SYSTEM_CODE VARCHAR2(100 BYTE) NULL ,
OU_ID NUMBER DEFAULT NULL  NULL ,
SOURCE VARCHAR2(20 BYTE) NULL ,
STATUS VARCHAR2(20 BYTE) NULL ,
"COMMENT" CLOB NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_ISSUE_FEEDBACK.FEEDBACK_ID IS '主键ID';
COMMENT ON COLUMN BASE_ISSUE_FEEDBACK.OU_ID IS '事业部';
COMMENT ON COLUMN BASE_ISSUE_FEEDBACK.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_ISSUE_FEEDBACK.CREATION_DATE IS '创建时间';
COMMENT ON COLUMN BASE_ISSUE_FEEDBACK.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_ISSUE_FEEDBACK.LAST_UPDATE_DATE IS '更新时间';
COMMENT ON COLUMN BASE_ISSUE_FEEDBACK.LAST_UPDATE_LOGIN IS '更新登录ID';
COMMENT ON COLUMN BASE_ISSUE_FEEDBACK.DELETE_FLAG IS '删除标识';
COMMENT ON COLUMN BASE_ISSUE_FEEDBACK.VERSION_NUM IS '版本号';

-- ----------------------------
-- Table structure for BASE_JOB
-- ----------------------------
DROP TABLE BASE_JOB;
CREATE TABLE BASE_JOB (
JOB_ID NUMBER NOT NULL ,
JOB_CODE VARCHAR2(150 BYTE) NULL ,
JOB_NAME VARCHAR2(150 BYTE) NULL ,
DATE_FROM DATE DEFAULT NULL  NULL ,
DATE_TO DATE DEFAULT NULL  NULL ,
ENABLE_FLAG VARCHAR2(6 BYTE) NULL ,
OU_ID NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
"COMMENT" VARCHAR2(300 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_JOB.JOB_ID IS '职务ID';
COMMENT ON COLUMN BASE_JOB.DATE_FROM IS '生效日期';
COMMENT ON COLUMN BASE_JOB.DATE_TO IS '失效日期';
COMMENT ON COLUMN BASE_JOB.OU_ID IS '事业部';
COMMENT ON COLUMN BASE_JOB.CREATION_DATE IS '创建时间';
COMMENT ON COLUMN BASE_JOB.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_JOB.LAST_UPDATE_DATE IS '更新时间';
COMMENT ON COLUMN BASE_JOB.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_JOB.LAST_UPDATE_LOGIN IS '最后登录ID';
COMMENT ON COLUMN BASE_JOB.DELETE_FLAG IS '删除标识';
COMMENT ON COLUMN BASE_JOB.VERSION_NUM IS '版本号';

-- ----------------------------
-- Table structure for BASE_JOB_LAN
-- ----------------------------
DROP TABLE BASE_JOB_LAN;
CREATE TABLE BASE_JOB_LAN (
JOB_LAN_ID NUMBER NOT NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL ,
LANGUAGE VARCHAR2(30 BYTE) NULL ,
JOB_ID NUMBER DEFAULT NULL  NULL ,
JOB_NAME VARCHAR2(60 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_JOB_LAN.JOB_LAN_ID IS '主键ID';
COMMENT ON COLUMN BASE_JOB_LAN.CREATION_DATE IS '创建时间';
COMMENT ON COLUMN BASE_JOB_LAN.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_JOB_LAN.LAST_UPDATE_DATE IS '更新时间';
COMMENT ON COLUMN BASE_JOB_LAN.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_JOB_LAN.LAST_UPDATE_LOGIN IS '最后登录ID';
COMMENT ON COLUMN BASE_JOB_LAN.DELETE_FLAG IS '删除标识';
COMMENT ON COLUMN BASE_JOB_LAN.JOB_ID IS '外键ID_BASE_JOB';

-- ----------------------------
-- Table structure for BASE_LOGIN_LOG
-- ----------------------------
DROP TABLE BASE_LOGIN_LOG;
CREATE TABLE BASE_LOGIN_LOG (
ID NUMBER NOT NULL ,
APP_NAME VARCHAR2(45 BYTE) DEFAULT NULL  NULL ,
APP_VERSION VARCHAR2(20 BYTE) DEFAULT NULL  NULL ,
BRAND VARCHAR2(45 BYTE) DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
DEVICEINFO VARCHAR2(45 BYTE) DEFAULT NULL  NULL ,
IP VARCHAR2(45 BYTE) DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LOGIN_MODE VARCHAR2(2 BYTE) DEFAULT NULL  NULL ,
PHONE_NUMBER VARCHAR2(20 BYTE) DEFAULT NULL  NULL ,
SYSTEM VARCHAR2(20 BYTE) DEFAULT NULL  NULL ,
SYSTEM_VERSION VARCHAR2(20 BYTE) DEFAULT NULL  NULL ,
TOTAL_MEM VARCHAR2(20 BYTE) DEFAULT NULL  NULL ,
USER_AGENT VARCHAR2(255 BYTE) DEFAULT NULL  NULL ,
USER_ID NUMBER NOT NULL ,
USER_NAME VARCHAR2(100 BYTE) DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for BASE_LOOKUP_TYPES
-- ----------------------------
DROP TABLE BASE_LOOKUP_TYPES;
CREATE TABLE BASE_LOOKUP_TYPES (
LOOKUP_TYPE_ID NUMBER NOT NULL ,
LOOKUP_TYPE VARCHAR2(30 BYTE) NULL ,
MEANING VARCHAR2(150 BYTE) NULL ,
DESCRIPTION VARCHAR2(240 BYTE) NULL ,
CUSTOMIZATION_LEVEL VARCHAR2(1 BYTE) NULL ,
SYSTEM_CODE VARCHAR2(30 BYTE) NULL ,
PARENT_LOOKUP_TYPE_ID NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
PARENT_TYPE_ID NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL ,
JOB_NAME VARCHAR2(60 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_LOOKUP_TYPES.LOOKUP_TYPE_ID IS '主键ID';
COMMENT ON COLUMN BASE_LOOKUP_TYPES.PARENT_LOOKUP_TYPE_ID IS '父类型ID';
COMMENT ON COLUMN BASE_LOOKUP_TYPES.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_LOOKUP_TYPES.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_LOOKUP_TYPES.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_LOOKUP_TYPES.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_LOOKUP_TYPES.VERSION_NUM IS '版本号';

-- ----------------------------
-- Table structure for BASE_LOOKUP_TYPES_LAN
-- ----------------------------
DROP TABLE BASE_LOOKUP_TYPES_LAN;
CREATE TABLE BASE_LOOKUP_TYPES_LAN (
LOOKUP_TYPE_LAN_ID NUMBER NOT NULL ,
MEANING VARCHAR2(150 BYTE) NULL ,
DESCRIPTION VARCHAR2(240 BYTE) NULL ,
LOOKUP_TYPE_ID NUMBER DEFAULT NULL  NULL ,
LAN VARCHAR2(30 BYTE) NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_LOOKUP_TYPES_LAN.LOOKUP_TYPE_LAN_ID IS '主键ID';
COMMENT ON COLUMN BASE_LOOKUP_TYPES_LAN.LOOKUP_TYPE_ID IS '系统编码';
COMMENT ON COLUMN BASE_LOOKUP_TYPES_LAN.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_LOOKUP_TYPES_LAN.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_LOOKUP_TYPES_LAN.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_LOOKUP_TYPES_LAN.VERSION_NUM IS '版本号';

-- ----------------------------
-- Table structure for BASE_LOOKUP_VALUES
-- ----------------------------
DROP TABLE BASE_LOOKUP_VALUES;
CREATE TABLE BASE_LOOKUP_VALUES (
LOOKUP_VALUES_ID NUMBER NOT NULL ,
LOOKUP_TYPE VARCHAR2(30 BYTE) NULL ,
LOOKUP_CODE VARCHAR2(30 BYTE) NULL ,
MEANING VARCHAR2(500 BYTE) NULL ,
DESCRIPTION VARCHAR2(240 BYTE) NULL ,
PARENT_LOOKUP_VALUES_ID VARCHAR2(30 BYTE) NULL ,
ENABLED_FLAG VARCHAR2(1 BYTE) NULL ,
START_DATE_ACTIVE DATE DEFAULT NULL  NULL ,
END_DATE_ACTIVE DATE DEFAULT NULL  NULL ,
SYSTEM_CODE VARCHAR2(30 BYTE) NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
BU_ORG_ID VARCHAR2(50 BYTE) NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_LOOKUP_VALUES.LOOKUP_VALUES_ID IS '主键ID';
COMMENT ON COLUMN BASE_LOOKUP_VALUES.START_DATE_ACTIVE IS '生效日期';
COMMENT ON COLUMN BASE_LOOKUP_VALUES.END_DATE_ACTIVE IS '失效日期';
COMMENT ON COLUMN BASE_LOOKUP_VALUES.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_LOOKUP_VALUES.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_LOOKUP_VALUES.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_LOOKUP_VALUES.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_LOOKUP_VALUES.VERSION_NUM IS '版本号';

-- ----------------------------
-- Table structure for BASE_LOOKUP_VALUES_LAN
-- ----------------------------
DROP TABLE BASE_LOOKUP_VALUES_LAN;
CREATE TABLE BASE_LOOKUP_VALUES_LAN (
LOOKUP_VALUES_LAN_ID NUMBER NOT NULL ,
MEANING VARCHAR2(500 BYTE) NULL ,
DESCRIPTION VARCHAR2(240 BYTE) NULL ,
LOOKUP_VALUES_ID NUMBER NOT NULL ,
LAN VARCHAR2(30 BYTE) NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL ,
LOOKUP_CODE VARCHAR2(30 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_LOOKUP_VALUES_LAN.LOOKUP_VALUES_LAN_ID IS '主键ID';
COMMENT ON COLUMN BASE_LOOKUP_VALUES_LAN.LOOKUP_VALUES_ID IS '系统编码';
COMMENT ON COLUMN BASE_LOOKUP_VALUES_LAN.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_LOOKUP_VALUES_LAN.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_LOOKUP_VALUES_LAN.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_LOOKUP_VALUES_LAN.VERSION_NUM IS '版本号';

-- ----------------------------
-- Table structure for BASE_MANUAL_SUPPLEMENT
-- ----------------------------
DROP TABLE BASE_MANUAL_SUPPLEMENT;
CREATE TABLE BASE_MANUAL_SUPPLEMENT (
MANUAL_ID NUMBER NOT NULL ,
MESSAGE_INDEX NUMBER DEFAULT NULL  NULL ,
MESSAGE_BODY BLOB NULL ,
REQUEST_URL VARCHAR2(1500 BYTE) NULL ,
QUEUE_NAME VARCHAR2(200 BYTE) NULL ,
STATUS VARCHAR2(255 BYTE) NULL ,
SEND_QUEUE_TIMES NUMBER DEFAULT NULL  NULL ,
MESSAGE_CONTENT_BEAN BLOB NULL ,
DELETE_FLAG NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_MANUAL_SUPPLEMENT.MESSAGE_INDEX IS '消息体序号';
COMMENT ON COLUMN BASE_MANUAL_SUPPLEMENT.MESSAGE_BODY IS '消息体内容';
COMMENT ON COLUMN BASE_MANUAL_SUPPLEMENT.SEND_QUEUE_TIMES IS '发送到mq 的次数';
COMMENT ON COLUMN BASE_MANUAL_SUPPLEMENT.MESSAGE_CONTENT_BEAN IS '在mq中的完整的消息内容';
COMMENT ON COLUMN BASE_MANUAL_SUPPLEMENT.DELETE_FLAG IS '是否删除（0：未删除；1：已删除）';
COMMENT ON COLUMN BASE_MANUAL_SUPPLEMENT.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_MANUAL_SUPPLEMENT.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_MANUAL_SUPPLEMENT.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_MANUAL_SUPPLEMENT.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_MANUAL_SUPPLEMENT.VERSION_NUM IS '版本号';
COMMENT ON COLUMN BASE_MANUAL_SUPPLEMENT.LAST_UPDATE_LOGIN IS 'last_update_login';

-- ----------------------------
-- Table structure for BASE_MENU
-- ----------------------------
DROP TABLE BASE_MENU;
CREATE TABLE BASE_MENU (
MENU_ID NUMBER NOT NULL ,
MENU_PARENT_ID NUMBER DEFAULT NULL  NULL ,
MENU_CODE VARCHAR2(100 BYTE) NULL ,
ORDER_NO NUMBER DEFAULT NULL  NULL ,
MENU_NAME VARCHAR2(100 BYTE) NULL ,
MENU_DESC VARCHAR2(256 BYTE) NULL ,
LEVEL_ID NUMBER DEFAULT NULL  NULL ,
MENU_TYPE VARCHAR2(5 BYTE) NULL ,
PARAMETER VARCHAR2(2000 BYTE) NULL ,
SYSTEM_CODE VARCHAR2(30 BYTE) NULL ,
IMAGE_LINK VARCHAR2(60 BYTE) NULL ,
IMAGE_COLOR VARCHAR2(10 BYTE) NULL ,
HTML_URL VARCHAR2(240 BYTE) NULL ,
FROM_TYPE VARCHAR2(10 BYTE) NULL ,
ENABLED VARCHAR2(10 BYTE) NULL ,
START_DATE_ACTIVE DATE DEFAULT NULL  NULL ,
END_DATE_ACTIVE DATE DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_MENU.MENU_ID IS '菜单Id';
COMMENT ON COLUMN BASE_MENU.MENU_PARENT_ID IS '上级菜单Id';
COMMENT ON COLUMN BASE_MENU.ORDER_NO IS '排序号';
COMMENT ON COLUMN BASE_MENU.LEVEL_ID IS '层级ID';
COMMENT ON COLUMN BASE_MENU.START_DATE_ACTIVE IS '启用时间';
COMMENT ON COLUMN BASE_MENU.END_DATE_ACTIVE IS '失效时间';
COMMENT ON COLUMN BASE_MENU.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_MENU.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_MENU.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_MENU.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_MENU.VERSION_NUM IS '版本号';
COMMENT ON COLUMN BASE_MENU.LAST_UPDATE_LOGIN IS 'last_update_login';

-- ----------------------------
-- Table structure for BASE_MENU_LANGUAGE
-- ----------------------------
DROP TABLE BASE_MENU_LANGUAGE;
CREATE TABLE BASE_MENU_LANGUAGE (
LAN_MENU_ID NUMBER NOT NULL ,
MENU_ID NUMBER NOT NULL ,
LANGUAGE VARCHAR2(100 BYTE) NOT NULL ,
MENU_NAME VARCHAR2(100 BYTE) DEFAULT NULL  NULL ,
MENU_DESC VARCHAR2(256 BYTE) DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_MENU_LANGUAGE.LAN_MENU_ID IS '主键';
COMMENT ON COLUMN BASE_MENU_LANGUAGE.MENU_ID IS '关联base_menu表主键';
COMMENT ON COLUMN BASE_MENU_LANGUAGE.LANGUAGE IS '语言种类';
COMMENT ON COLUMN BASE_MENU_LANGUAGE.MENU_NAME IS '菜单名称';
COMMENT ON COLUMN BASE_MENU_LANGUAGE.MENU_DESC IS '菜单提示信息';
COMMENT ON COLUMN BASE_MENU_LANGUAGE.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_MENU_LANGUAGE.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_MENU_LANGUAGE.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_MENU_LANGUAGE.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_MENU_LANGUAGE.VERSION_NUM IS '版本号';
COMMENT ON COLUMN BASE_MENU_LANGUAGE.LAST_UPDATE_LOGIN IS 'last_update_login';

-- ----------------------------
-- Table structure for BASE_MESSAGE_BU
-- ----------------------------
DROP TABLE BASE_MESSAGE_BU;
CREATE TABLE BASE_MESSAGE_BU (
BU_MESS_ID NUMBER NOT NULL ,
CON_MESS_ID NUMBER NOT NULL ,
BU_ID NUMBER NOT NULL ,
USER_TYPE VARCHAR2(30 BYTE) NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_MESSAGE_BU.BU_MESS_ID IS '主键Id';
COMMENT ON COLUMN BASE_MESSAGE_BU.CON_MESS_ID IS '消息内容ID';
COMMENT ON COLUMN BASE_MESSAGE_BU.BU_ID IS '接收事业部ID';

-- ----------------------------
-- Table structure for BASE_MESSAGE_CONTENT
-- ----------------------------
DROP TABLE BASE_MESSAGE_CONTENT;
CREATE TABLE BASE_MESSAGE_CONTENT (
CON_MESS_ID NUMBER NOT NULL ,
CON_MESS_TITLE VARCHAR2(256 BYTE) NULL ,
CON_MESS_TYPE VARCHAR2(10 BYTE) NULL ,
CON_MESS_STATE NUMBER DEFAULT NULL  NULL ,
CON_MESS_SYSTEM VARCHAR2(32 BYTE) NULL ,
CON_SEND_DATE DATE DEFAULT NULL  NULL ,
CON_MESS_CONTENT VARCHAR2(2000 BYTE) NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_MESSAGE_CONTENT.CON_MESS_ID IS '主键Id';
COMMENT ON COLUMN BASE_MESSAGE_CONTENT.CON_MESS_STATE IS '消息状态 0:未发送给任何人；1:已发送；2:撤回';
COMMENT ON COLUMN BASE_MESSAGE_CONTENT.CON_SEND_DATE IS '消息的发送时间';

-- ----------------------------
-- Table structure for BASE_MESSAGE_DEPARTMENT
-- ----------------------------
DROP TABLE BASE_MESSAGE_DEPARTMENT;
CREATE TABLE BASE_MESSAGE_DEPARTMENT (
DEP_MESS_ID NUMBER NOT NULL ,
CON_MESS_ID NUMBER NOT NULL ,
BU_MESS_ID NUMBER NOT NULL ,
DEPT_ID NUMBER NOT NULL ,
DEPT_CODE VARCHAR2(20 BYTE) NULL ,
DEPT_NAME VARCHAR2(200 BYTE) NULL ,
SENDING_NUM NUMBER DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_MESSAGE_DEPARTMENT.DEP_MESS_ID IS '主键Id';
COMMENT ON COLUMN BASE_MESSAGE_DEPARTMENT.CON_MESS_ID IS '消息内容ID';
COMMENT ON COLUMN BASE_MESSAGE_DEPARTMENT.BU_MESS_ID IS '接收对象组合表主键ID';
COMMENT ON COLUMN BASE_MESSAGE_DEPARTMENT.DEPT_ID IS '接收部门ID';
COMMENT ON COLUMN BASE_MESSAGE_DEPARTMENT.SENDING_NUM IS '发送人数';

-- ----------------------------
-- Table structure for BASE_MESSAGE_INSTATION
-- ----------------------------
DROP TABLE BASE_MESSAGE_INSTATION;
CREATE TABLE BASE_MESSAGE_INSTATION (
INS_MESS_ID NUMBER NOT NULL ,
CON_MESS_ID NUMBER DEFAULT NULL  NULL ,
MESS_TITLE VARCHAR2(256 BYTE) NULL ,
MESS_CONTENT VARCHAR2(2000 BYTE) NULL ,
MESS_STATUS NUMBER DEFAULT 0  NULL ,
MESS_FROM_SYSTEM VARCHAR2(32 BYTE) NULL ,
MESS_FROM_MODULE VARCHAR2(32 BYTE) NULL ,
MESS_RECEIVER_ID NUMBER DEFAULT NULL  NULL ,
MESS_RECEIVER VARCHAR2(150 BYTE) NULL ,
MESS_SENDER_ID NUMBER DEFAULT NULL  NULL ,
MESS_SENDER VARCHAR2(150 BYTE) NULL ,
SOURCE_ID VARCHAR2(80 BYTE) NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_MESSAGE_INSTATION.INS_MESS_ID IS '主键Id';
COMMENT ON COLUMN BASE_MESSAGE_INSTATION.CON_MESS_ID IS '消息内容ID';
COMMENT ON COLUMN BASE_MESSAGE_INSTATION.MESS_STATUS IS '消息状态 已读/未读';
COMMENT ON COLUMN BASE_MESSAGE_INSTATION.MESS_RECEIVER_ID IS '消息接收人ID';
COMMENT ON COLUMN BASE_MESSAGE_INSTATION.MESS_SENDER_ID IS '消息接收人员ID';

-- ----------------------------
-- Table structure for BASE_MESSAGE_PERSON
-- ----------------------------
DROP TABLE BASE_MESSAGE_PERSON;
CREATE TABLE BASE_MESSAGE_PERSON (
PER_MESS_ID NUMBER NOT NULL ,
CON_MESS_ID NUMBER NOT NULL ,
BU_MESS_ID NUMBER NOT NULL ,
DEP_MESS_ID NUMBER NOT NULL ,
DEPT_ID NUMBER NOT NULL ,
USER_TYPE VARCHAR2(30 BYTE) NULL ,
USER_ID NUMBER NOT NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_MESSAGE_PERSON.PER_MESS_ID IS '主键Id';
COMMENT ON COLUMN BASE_MESSAGE_PERSON.CON_MESS_ID IS '消息内容ID';
COMMENT ON COLUMN BASE_MESSAGE_PERSON.BU_MESS_ID IS '接收对象组合表主键ID';
COMMENT ON COLUMN BASE_MESSAGE_PERSON.DEP_MESS_ID IS '接收部门表主键ID';
COMMENT ON COLUMN BASE_MESSAGE_PERSON.DEPT_ID IS '接收部门ID';
COMMENT ON COLUMN BASE_MESSAGE_PERSON.USER_ID IS '接收用户ID';

-- ----------------------------
-- Table structure for BASE_ORG_RESPONSIBILITY
-- ----------------------------
DROP TABLE BASE_ORG_RESPONSIBILITY;
CREATE TABLE BASE_ORG_RESPONSIBILITY (
ORG_RESP_ID NUMBER NOT NULL ,
RESPONSIBILITY_ID NUMBER DEFAULT NULL  NULL ,
ORG_ID NUMBER DEFAULT NULL  NULL ,
START_DATE_ACTIVE DATE DEFAULT NULL  NULL ,
END_DATE_ACTIVE DATE DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_ORG_RESPONSIBILITY.ORG_RESP_ID IS '主键';
COMMENT ON COLUMN BASE_ORG_RESPONSIBILITY.RESPONSIBILITY_ID IS '职责标识';
COMMENT ON COLUMN BASE_ORG_RESPONSIBILITY.ORG_ID IS '组织机构Id';
COMMENT ON COLUMN BASE_ORG_RESPONSIBILITY.START_DATE_ACTIVE IS '生效时间';
COMMENT ON COLUMN BASE_ORG_RESPONSIBILITY.END_DATE_ACTIVE IS '失效时间';
COMMENT ON COLUMN BASE_ORG_RESPONSIBILITY.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_ORG_RESPONSIBILITY.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_ORG_RESPONSIBILITY.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_ORG_RESPONSIBILITY.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_ORG_RESPONSIBILITY.VERSION_NUM IS '版本号';
COMMENT ON COLUMN BASE_ORG_RESPONSIBILITY.LAST_UPDATE_LOGIN IS 'last_update_login';

-- ----------------------------
-- Table structure for BASE_ORGANIZATION
-- ----------------------------
DROP TABLE BASE_ORGANIZATION;
CREATE TABLE BASE_ORGANIZATION (
ORG_ID NUMBER NOT NULL ,
PARENT_ORG_ID NUMBER DEFAULT NULL  NULL ,
ORG_CODE VARCHAR2(20 BYTE) NULL ,
ORG_NAME VARCHAR2(200 BYTE) NULL ,
TREE_TYPE VARCHAR2(20 BYTE) NULL ,
CHANNEL_TYPE VARCHAR2(20 BYTE) NULL ,
BUSINESS_TYPE VARCHAR2(20 BYTE) NULL ,
IS_DEP VARCHAR2(1 BYTE) NULL ,
ORG_TYPE VARCHAR2(20 BYTE) NULL ,
ORG_LEVEL NUMBER DEFAULT NULL  NULL ,
IS_LEAF NUMBER DEFAULT NULL  NULL ,
START_DATE DATE DEFAULT NULL  NULL ,
END_DATE DATE DEFAULT NULL  NULL ,
ENABLED VARCHAR2(2 BYTE) NULL ,
REMARK VARCHAR2(2000 BYTE) NULL ,
ORG_PINYIN_NAME VARCHAR2(100 BYTE) NULL ,
ORG_SIMPLE_PINYIN_NAME VARCHAR2(50 BYTE) NULL ,
ORDER_NO NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL ,
ORG_HIERARCHY_ID VARCHAR2(200 BYTE) NULL ,
ORG_EMAIL VARCHAR2(50 BYTE) NULL ,
SOURCE_SYSTEM_ID VARCHAR2(20 BYTE) NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
LEADER_ID NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
ORGANIZATION_ID NUMBER DEFAULT NULL  NULL ,
WORK_STATISTICS VARCHAR2(30 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_ORGANIZATION.ORG_ID IS '组织机构Id';
COMMENT ON COLUMN BASE_ORGANIZATION.PARENT_ORG_ID IS '父机构Id';
COMMENT ON COLUMN BASE_ORGANIZATION.ORG_LEVEL IS '组织机构层级';
COMMENT ON COLUMN BASE_ORGANIZATION.IS_LEAF IS '是否是叶子节点，(0：叶子节点，1：非叶子节点)';
COMMENT ON COLUMN BASE_ORGANIZATION.START_DATE IS '启用日期';
COMMENT ON COLUMN BASE_ORGANIZATION.END_DATE IS '失效日期';
COMMENT ON COLUMN BASE_ORGANIZATION.ORDER_NO IS '排序号';
COMMENT ON COLUMN BASE_ORGANIZATION.DELETE_FLAG IS '是否删除（0：未删除；1：已删除）';
COMMENT ON COLUMN BASE_ORGANIZATION.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_ORGANIZATION.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_ORGANIZATION.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_ORGANIZATION.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_ORGANIZATION.VERSION_NUM IS '版本号';
COMMENT ON COLUMN BASE_ORGANIZATION.LEADER_ID IS '组织领导';
COMMENT ON COLUMN BASE_ORGANIZATION.ORGANIZATION_ID IS '关联org_id，表示库存组织所属的机构';

-- ----------------------------
-- Table structure for BASE_ORGANIZATION_LAN
-- ----------------------------
DROP TABLE BASE_ORGANIZATION_LAN;
CREATE TABLE BASE_ORGANIZATION_LAN (
ORG_EN_ID NUMBER NOT NULL ,
ORG_ID NUMBER NOT NULL ,
LANGUAGE VARCHAR2(22 BYTE) DEFAULT NULL  NULL ,
PARENT_ORG_ID NUMBER NOT NULL ,
ORG_NAME_EN VARCHAR2(200 BYTE) NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_ORGANIZATION_LAN.ORG_EN_ID IS '英文组织机构id';
COMMENT ON COLUMN BASE_ORGANIZATION_LAN.LANGUAGE IS '语言标识';
COMMENT ON COLUMN BASE_ORGANIZATION_LAN.VERSION_NUM IS '版本号';
COMMENT ON COLUMN BASE_ORGANIZATION_LAN.DELETE_FLAG IS '是否删除（0：未删除；1：已删除）';

-- ----------------------------
-- Table structure for BASE_PDA_INV_CFG
-- ----------------------------
DROP TABLE BASE_PDA_INV_CFG;
CREATE TABLE BASE_PDA_INV_CFG (
CFG_ID NUMBER NOT NULL ,
SUB_INV_CODE VARCHAR2(32 BYTE) NULL ,
ORGANIZATION_ID NUMBER DEFAULT NULL  NULL ,
CHANNEL_CODE VARCHAR2(10 BYTE) NULL ,
ROLE_ID NUMBER DEFAULT NULL  NULL ,
USER_ID NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_PDA_INV_CFG.CFG_ID IS '主键Id';
COMMENT ON COLUMN BASE_PDA_INV_CFG.ORGANIZATION_ID IS '库存组织ID';
COMMENT ON COLUMN BASE_PDA_INV_CFG.USER_ID IS '用户ID';
COMMENT ON COLUMN BASE_PDA_INV_CFG.DELETE_FLAG IS '是否删除（0：未删除；1：已删除）';
COMMENT ON COLUMN BASE_PDA_INV_CFG.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_PDA_INV_CFG.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_PDA_INV_CFG.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_PDA_INV_CFG.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_PDA_INV_CFG.VERSION_NUM IS '版本号';
COMMENT ON COLUMN BASE_PDA_INV_CFG.LAST_UPDATE_LOGIN IS 'last_update_login';

-- ----------------------------
-- Table structure for BASE_PDA_ROLE_CFG
-- ----------------------------
DROP TABLE BASE_PDA_ROLE_CFG;
CREATE TABLE BASE_PDA_ROLE_CFG (
PDA_ROLE_CFG_ID NUMBER NOT NULL ,
ROLE_ID NUMBER DEFAULT NULL  NULL ,
ORGANIZATION_ID NUMBER DEFAULT NULL  NULL ,
CHANNEL_CODE VARCHAR2(10 BYTE) NULL ,
MENU_ID NUMBER DEFAULT NULL  NULL ,
INV_CODE VARCHAR2(255 BYTE) NULL ,
INV_NAME VARCHAR2(255 BYTE) NULL ,
DESCRIPTION VARCHAR2(400 BYTE) NULL ,
ENABLED VARCHAR2(5 BYTE) NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_PDA_ROLE_CFG.PDA_ROLE_CFG_ID IS '主键';
COMMENT ON COLUMN BASE_PDA_ROLE_CFG.ROLE_ID IS '角色权限ID';
COMMENT ON COLUMN BASE_PDA_ROLE_CFG.ORGANIZATION_ID IS '库存组织ID';
COMMENT ON COLUMN BASE_PDA_ROLE_CFG.MENU_ID IS '菜单ID';
COMMENT ON COLUMN BASE_PDA_ROLE_CFG.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_PDA_ROLE_CFG.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_PDA_ROLE_CFG.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_PDA_ROLE_CFG.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_PDA_ROLE_CFG.VERSION_NUM IS '版本号';
COMMENT ON COLUMN BASE_PDA_ROLE_CFG.LAST_UPDATE_LOGIN IS 'last_update_login';

-- ----------------------------
-- Table structure for BASE_PERSON
-- ----------------------------
DROP TABLE BASE_PERSON;
CREATE TABLE BASE_PERSON (
PERSON_ID NUMBER NOT NULL ,
EMPLOYEE_NUMBER VARCHAR2(30 BYTE) NULL ,
PERSON_NAME VARCHAR2(150 BYTE) NULL ,
PERSON_TYPE VARCHAR2(10 BYTE) NULL ,
SEX VARCHAR2(10 BYTE) NULL ,
BIRTH_DAY DATE DEFAULT NULL  NULL ,
CARD_NO VARCHAR2(20 BYTE) NULL ,
ENABLED VARCHAR2(1 BYTE) NULL ,
TEL_PHONE VARCHAR2(30 BYTE) NULL ,
MOBILE_PHONE VARCHAR2(30 BYTE) NULL ,
EMAIL VARCHAR2(60 BYTE) NULL ,
POSTAL_ADDRESS VARCHAR2(240 BYTE) NULL ,
POSTCODE VARCHAR2(10 BYTE) NULL ,
SERVICE_STORE_ID NUMBER DEFAULT NULL  NULL ,
SOURCE_SYSTEM_ID NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
SOURCE_CODE VARCHAR2(30 BYTE) NULL ,
SOURCE_ID NUMBER DEFAULT NULL  NULL ,
GRAND NUMBER NULL ,
PERSON_NAME_EN VARCHAR2(150 BYTE) NULL ,
DEPT_NO VARCHAR2(100 BYTE) NULL ,
POST_NAME VARCHAR2(150 BYTE) NULL ,
AREA VARCHAR2(100 BYTE) NULL ,
MARKET VARCHAR2(100 BYTE) NULL ,
ORG_CODE VARCHAR2(100 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_PERSON.PERSON_ID IS '人员Id';
COMMENT ON COLUMN BASE_PERSON.BIRTH_DAY IS '生日';
COMMENT ON COLUMN BASE_PERSON.SERVICE_STORE_ID IS '所属服务店';
COMMENT ON COLUMN BASE_PERSON.SOURCE_SYSTEM_ID IS '源系统ID';
COMMENT ON COLUMN BASE_PERSON.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_PERSON.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_PERSON.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_PERSON.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_PERSON.VERSION_NUM IS '版本号';
COMMENT ON COLUMN BASE_PERSON.GRAND IS '级别';
COMMENT ON COLUMN BASE_PERSON.PERSON_NAME_EN IS '英文名称';
COMMENT ON COLUMN BASE_PERSON.DEPT_NO IS '部门编码';
COMMENT ON COLUMN BASE_PERSON.POST_NAME IS '职位名称';
COMMENT ON COLUMN BASE_PERSON.AREA IS '区域';
COMMENT ON COLUMN BASE_PERSON.MARKET IS '市场';
COMMENT ON COLUMN BASE_PERSON.ORG_CODE IS '组织编码';

-- ----------------------------
-- Table structure for BASE_PERSON_ASSIGN
-- ----------------------------
DROP TABLE BASE_PERSON_ASSIGN;
CREATE TABLE BASE_PERSON_ASSIGN (
ASSIGN_ID NUMBER NOT NULL ,
PERSON_ID NUMBER DEFAULT NULL  NULL ,
POSITION_ID NUMBER DEFAULT NULL  NULL ,
JOB_ID NUMBER DEFAULT NULL  NULL ,
DATE_FROM DATE DEFAULT NULL  NULL ,
DATE_TO DATE DEFAULT NULL  NULL ,
OU_ID NUMBER DEFAULT NULL  NULL ,
MGR_FLAG VARCHAR2(10 BYTE) NULL ,
PRIMARY_FLAG VARCHAR2(10 BYTE) NULL ,
ENABLE_FLAG VARCHAR2(10 BYTE) NULL ,
BUDGET_VIEW VARCHAR2(30 BYTE) NULL ,
BUDGET_MAINTAIN VARCHAR2(30 BYTE) NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_PERSON_ASSIGN.ASSIGN_ID IS '分配ID';
COMMENT ON COLUMN BASE_PERSON_ASSIGN.PERSON_ID IS '人员ID';
COMMENT ON COLUMN BASE_PERSON_ASSIGN.POSITION_ID IS '职位ID';
COMMENT ON COLUMN BASE_PERSON_ASSIGN.JOB_ID IS '职务ID';
COMMENT ON COLUMN BASE_PERSON_ASSIGN.DATE_FROM IS '生效日期';
COMMENT ON COLUMN BASE_PERSON_ASSIGN.DATE_TO IS '失效日期';
COMMENT ON COLUMN BASE_PERSON_ASSIGN.OU_ID IS '事业部';
COMMENT ON COLUMN BASE_PERSON_ASSIGN.CREATION_DATE IS '创建时间';
COMMENT ON COLUMN BASE_PERSON_ASSIGN.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_PERSON_ASSIGN.LAST_UPDATE_DATE IS '更新时间';
COMMENT ON COLUMN BASE_PERSON_ASSIGN.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_PERSON_ASSIGN.LAST_UPDATE_LOGIN IS '最后登录ID';
COMMENT ON COLUMN BASE_PERSON_ASSIGN.DELETE_FLAG IS '删除标识';
COMMENT ON COLUMN BASE_PERSON_ASSIGN.VERSION_NUM IS '版本号';

-- ----------------------------
-- Table structure for BASE_PERSON_CUST
-- ----------------------------
DROP TABLE BASE_PERSON_CUST;
CREATE TABLE BASE_PERSON_CUST (
PERSON_CUST_ID NUMBER NOT NULL ,
OU_ID NUMBER NOT NULL ,
PERSON_ID NUMBER NOT NULL ,
POSITION_ID NUMBER DEFAULT NULL  NULL ,
CUST_ACCOUNT_ID NUMBER DEFAULT NULL  NULL ,
PRIMARY_FLAG VARCHAR2(30 BYTE) NULL ,
START_DATE DATE DEFAULT NULL  NULL ,
END_DATE DATE DEFAULT NULL  NULL ,
ENABLE_FLAG VARCHAR2(10 BYTE) NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_PERSON_CUST.PERSON_CUST_ID IS '主键';
COMMENT ON COLUMN BASE_PERSON_CUST.OU_ID IS '事业部';
COMMENT ON COLUMN BASE_PERSON_CUST.PERSON_ID IS '人员ID';
COMMENT ON COLUMN BASE_PERSON_CUST.POSITION_ID IS '职位ID';
COMMENT ON COLUMN BASE_PERSON_CUST.CUST_ACCOUNT_ID IS '经销商';
COMMENT ON COLUMN BASE_PERSON_CUST.START_DATE IS '生效日期';
COMMENT ON COLUMN BASE_PERSON_CUST.END_DATE IS '失效日期';
COMMENT ON COLUMN BASE_PERSON_CUST.CREATION_DATE IS '创建时间';
COMMENT ON COLUMN BASE_PERSON_CUST.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_PERSON_CUST.LAST_UPDATE_DATE IS '更新时间';
COMMENT ON COLUMN BASE_PERSON_CUST.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_PERSON_CUST.LAST_UPDATE_LOGIN IS '最后登录ID';
COMMENT ON COLUMN BASE_PERSON_CUST.DELETE_FLAG IS '删除标识';
COMMENT ON COLUMN BASE_PERSON_CUST.VERSION_NUM IS '版本号';

-- ----------------------------
-- Table structure for BASE_PERSON_LAN
-- ----------------------------
DROP TABLE BASE_PERSON_LAN;
CREATE TABLE BASE_PERSON_LAN (
PERSON_ID_EN NUMBER NOT NULL ,
PERSON_ID NUMBER NOT NULL ,
PERSON_NAME_EN VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
LANGUAGE VARCHAR2(22 BYTE) DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_PERSON_LAN.PERSON_NAME_EN IS '人员姓名英文';
COMMENT ON COLUMN BASE_PERSON_LAN.LANGUAGE IS '语言标识';

-- ----------------------------
-- Table structure for BASE_PERSON_LEVEL
-- ----------------------------
DROP TABLE BASE_PERSON_LEVEL;
CREATE TABLE BASE_PERSON_LEVEL (
LEVEL_ID NUMBER NOT NULL ,
PERSON_ID NUMBER DEFAULT NULL  NULL ,
POSITION_ID NUMBER DEFAULT NULL  NULL ,
MGR_PERSON_ID NUMBER DEFAULT NULL  NULL ,
MGR_POSITION_ID NUMBER DEFAULT NULL  NULL ,
DATE_FROM DATE DEFAULT NULL  NULL ,
DATE_TO DATE DEFAULT NULL  NULL ,
OU_ID NUMBER DEFAULT NULL  NULL ,
ENABLE_FLAG VARCHAR2(10 BYTE) NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_PERSON_LEVEL.LEVEL_ID IS '主键ID';
COMMENT ON COLUMN BASE_PERSON_LEVEL.PERSON_ID IS '人员ID';
COMMENT ON COLUMN BASE_PERSON_LEVEL.POSITION_ID IS '职位ID';
COMMENT ON COLUMN BASE_PERSON_LEVEL.MGR_PERSON_ID IS '上级人员ID';
COMMENT ON COLUMN BASE_PERSON_LEVEL.MGR_POSITION_ID IS '上级职位ID';
COMMENT ON COLUMN BASE_PERSON_LEVEL.DATE_FROM IS '生效日期';
COMMENT ON COLUMN BASE_PERSON_LEVEL.DATE_TO IS '失效日期';
COMMENT ON COLUMN BASE_PERSON_LEVEL.OU_ID IS '事业部';
COMMENT ON COLUMN BASE_PERSON_LEVEL.CREATION_DATE IS '创建时间';
COMMENT ON COLUMN BASE_PERSON_LEVEL.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_PERSON_LEVEL.LAST_UPDATE_DATE IS '更新时间';
COMMENT ON COLUMN BASE_PERSON_LEVEL.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_PERSON_LEVEL.LAST_UPDATE_LOGIN IS '最后登录ID';
COMMENT ON COLUMN BASE_PERSON_LEVEL.DELETE_FLAG IS '删除标识';
COMMENT ON COLUMN BASE_PERSON_LEVEL.VERSION_NUM IS '版本号';

-- ----------------------------
-- Table structure for BASE_PERSON_ORGANIZATION
-- ----------------------------
DROP TABLE BASE_PERSON_ORGANIZATION;
CREATE TABLE BASE_PERSON_ORGANIZATION (
PERSON_ORG_ID NUMBER NOT NULL ,
POSITION_ID NUMBER DEFAULT NULL  NULL ,
ORG_ID NUMBER DEFAULT NULL  NULL ,
PERSON_ID NUMBER DEFAULT NULL  NULL ,
START_DATE DATE DEFAULT NULL  NULL ,
END_DATE DATE DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_PERSON_ORGANIZATION.PERSON_ORG_ID IS '主键Id';
COMMENT ON COLUMN BASE_PERSON_ORGANIZATION.POSITION_ID IS '职位ID';
COMMENT ON COLUMN BASE_PERSON_ORGANIZATION.ORG_ID IS '组织机构Id';
COMMENT ON COLUMN BASE_PERSON_ORGANIZATION.PERSON_ID IS '人员Id';
COMMENT ON COLUMN BASE_PERSON_ORGANIZATION.START_DATE IS '生效日期';
COMMENT ON COLUMN BASE_PERSON_ORGANIZATION.END_DATE IS '失效日期';
COMMENT ON COLUMN BASE_PERSON_ORGANIZATION.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_PERSON_ORGANIZATION.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_PERSON_ORGANIZATION.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_PERSON_ORGANIZATION.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_PERSON_ORGANIZATION.VERSION_NUM IS '版本号';

-- ----------------------------
-- Table structure for BASE_POSITION
-- ----------------------------
DROP TABLE BASE_POSITION;
CREATE TABLE BASE_POSITION (
POSITION_ID NUMBER NOT NULL ,
DEPARTMENT_ID NUMBER DEFAULT NULL  NULL ,
JOB_ID NUMBER DEFAULT NULL  NULL ,
POSITION_CODE VARCHAR2(200 BYTE) NULL ,
POSITION_NAME VARCHAR2(200 BYTE) NULL ,
DATE_FROM DATE DEFAULT NULL  NULL ,
DATE_TO DATE DEFAULT NULL  NULL ,
ENABLE_FLAG VARCHAR2(10 BYTE) NULL ,
BIZ_LINE_TYPE VARCHAR2(50 BYTE) NULL ,
CHANNEL VARCHAR2(50 BYTE) NULL ,
OU_ID NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_POSITION.POSITION_ID IS '职位ID';
COMMENT ON COLUMN BASE_POSITION.DEPARTMENT_ID IS '部门ID';
COMMENT ON COLUMN BASE_POSITION.JOB_ID IS '职务ID';
COMMENT ON COLUMN BASE_POSITION.DATE_FROM IS '生效日期';
COMMENT ON COLUMN BASE_POSITION.DATE_TO IS '失效日期';
COMMENT ON COLUMN BASE_POSITION.OU_ID IS '事业部';
COMMENT ON COLUMN BASE_POSITION.CREATION_DATE IS '创建时间';
COMMENT ON COLUMN BASE_POSITION.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_POSITION.LAST_UPDATE_DATE IS '更新时间';
COMMENT ON COLUMN BASE_POSITION.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_POSITION.LAST_UPDATE_LOGIN IS '最后登录ID';
COMMENT ON COLUMN BASE_POSITION.DELETE_FLAG IS '删除标识';
COMMENT ON COLUMN BASE_POSITION.VERSION_NUM IS '版本号';

-- ----------------------------
-- Table structure for BASE_POSITION_LAN
-- ----------------------------
DROP TABLE BASE_POSITION_LAN;
CREATE TABLE BASE_POSITION_LAN (
POSITION_ID_LAN NUMBER NOT NULL ,
LANGUAGE VARCHAR2(10 BYTE) NULL ,
POSITION_ID NUMBER DEFAULT NULL  NULL ,
DEPARTMENT_ID NUMBER DEFAULT NULL  NULL ,
JOB_ID NUMBER DEFAULT NULL  NULL ,
POSITION_CODE VARCHAR2(40 BYTE) NULL ,
POSITION_NAME VARCHAR2(200 BYTE) NULL ,
DATE_FROM DATE DEFAULT NULL  NULL ,
DATE_TO DATE DEFAULT NULL  NULL ,
ENABLE_FLAG VARCHAR2(10 BYTE) NULL ,
BIZ_LINE_TYPE VARCHAR2(50 BYTE) NULL ,
CHANNEL VARCHAR2(50 BYTE) NULL ,
OU_ID NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for BASE_PRIVILEGE_DETAIL
-- ----------------------------
DROP TABLE BASE_PRIVILEGE_DETAIL;
CREATE TABLE BASE_PRIVILEGE_DETAIL (
PRIVILEGE_DETAIL_ID NUMBER NOT NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
PRIVILEGE_DETAIL_CODE VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
PRIVILEGE_DETAIL_VALUE VARCHAR2(50 BYTE) DEFAULT NULL  NULL ,
PRIVILEGE_RECORD_ID NUMBER DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for BASE_PRIVILEGE_RECORD
-- ----------------------------
DROP TABLE BASE_PRIVILEGE_RECORD;
CREATE TABLE BASE_PRIVILEGE_RECORD (
PRIVILEGE_RECORD_ID NUMBER NOT NULL ,
ACCESS_TYPE VARCHAR2(10 BYTE) DEFAULT NULL  NULL ,
BUSINESS_CODE VARCHAR2(36 BYTE) DEFAULT NULL  NULL ,
BUSINESSTABLENAME VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
ENABLED VARCHAR2(5 BYTE) DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
ORG_ID NUMBER DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for BASE_PRODUCT_INFO
-- ----------------------------
DROP TABLE BASE_PRODUCT_INFO;
CREATE TABLE BASE_PRODUCT_INFO (
PRODUCT_ID NUMBER NOT NULL ,
ORGANIZATION_ID NUMBER DEFAULT NULL  NULL ,
ITEM_ID NUMBER DEFAULT NULL  NULL ,
ORG_ID NUMBER DEFAULT NULL  NULL ,
CHANNEL_CODE VARCHAR2(100 BYTE) NULL ,
ITEM_CODE VARCHAR2(50 BYTE) NULL ,
IS_VALID VARCHAR2(1 BYTE) NULL ,
INNER_ITEM_CODE VARCHAR2(10 BYTE) NULL ,
ITEM_NAME VARCHAR2(100 BYTE) NULL ,
ITEM_DESC VARCHAR2(280 BYTE) NULL ,
ITEM_TYPE VARCHAR2(30 BYTE) NULL ,
UNIT_ VARCHAR2(10 BYTE) NULL ,
BOX_UNIT VARCHAR2(10 BYTE) NULL ,
TRAY_UNIT VARCHAR2(10 BYTE) NULL ,
TRACK_BARCODE VARCHAR2(1 BYTE) NULL ,
NET_WEIGHT NUMBER(11,3) DEFAULT NULL  NULL ,
GROSS_WEIGHT NUMBER(11,3) DEFAULT NULL  NULL ,
PKG_VOLUME NUMBER(11,3) DEFAULT NULL  NULL ,
LOT_CONTROL_CODE NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
SERIES VARCHAR2(10 BYTE) NULL ,
SHELF_LIFE_MONTH NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_PRODUCT_INFO.PRODUCT_ID IS '主键Id';
COMMENT ON COLUMN BASE_PRODUCT_INFO.ORGANIZATION_ID IS '库存组织ID';
COMMENT ON COLUMN BASE_PRODUCT_INFO.ITEM_ID IS '物料ID';
COMMENT ON COLUMN BASE_PRODUCT_INFO.ORG_ID IS 'OU ID';
COMMENT ON COLUMN BASE_PRODUCT_INFO.NET_WEIGHT IS '净重（NULL）';
COMMENT ON COLUMN BASE_PRODUCT_INFO.GROSS_WEIGHT IS '毛重（NULL）';
COMMENT ON COLUMN BASE_PRODUCT_INFO.PKG_VOLUME IS '体积（NULL）';
COMMENT ON COLUMN BASE_PRODUCT_INFO.LOT_CONTROL_CODE IS 'LOT_CONTROL_CODE';
COMMENT ON COLUMN BASE_PRODUCT_INFO.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_PRODUCT_INFO.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_PRODUCT_INFO.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_PRODUCT_INFO.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_PRODUCT_INFO.VERSION_NUM IS '版本号';
COMMENT ON COLUMN BASE_PRODUCT_INFO.LAST_UPDATE_LOGIN IS 'last_update_login';

-- ----------------------------
-- Table structure for BASE_PRODUCT_INV
-- ----------------------------
DROP TABLE BASE_PRODUCT_INV;
CREATE TABLE BASE_PRODUCT_INV (
PRODUCT_INV_ID NUMBER NOT NULL ,
ITEM_CODE VARCHAR2(50 BYTE) NULL ,
WAREHOUSE_CODE VARCHAR2(50 BYTE) NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_PRODUCT_INV.PRODUCT_INV_ID IS '主键Id';
COMMENT ON COLUMN BASE_PRODUCT_INV.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_PRODUCT_INV.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_PRODUCT_INV.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_PRODUCT_INV.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_PRODUCT_INV.VERSION_NUM IS '版本号';
COMMENT ON COLUMN BASE_PRODUCT_INV.LAST_UPDATE_LOGIN IS 'last_update_login';

-- ----------------------------
-- Table structure for BASE_PROFILE
-- ----------------------------
DROP TABLE BASE_PROFILE;
CREATE TABLE BASE_PROFILE (
PROFILE_ID NUMBER NOT NULL ,
PROFILE_CODE VARCHAR2(50 BYTE) NULL ,
DS_ID NUMBER DEFAULT NULL  NULL ,
DS_NAME VARCHAR2(100 BYTE) NULL ,
SOURCE_SQL VARCHAR2(500 BYTE) NULL ,
PROFILE_NAME VARCHAR2(50 BYTE) NULL ,
PROFILE_DESC VARCHAR2(200 BYTE) NULL ,
SYSTEM_CODE VARCHAR2(50 BYTE) NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_PROFILE.PROFILE_ID IS '主键ID';
COMMENT ON COLUMN BASE_PROFILE.DS_ID IS '数据源Id';
COMMENT ON COLUMN BASE_PROFILE.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_PROFILE.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_PROFILE.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_PROFILE.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_PROFILE.VERSION_NUM IS '版本号';
COMMENT ON COLUMN BASE_PROFILE.LAST_UPDATE_LOGIN IS 'last_update_login';
COMMENT ON COLUMN BASE_PROFILE.DELETE_FLAG IS '是否删除，0：否，1：删除';

-- ----------------------------
-- Table structure for BASE_PROFILE_LAN
-- ----------------------------
DROP TABLE BASE_PROFILE_LAN;
CREATE TABLE BASE_PROFILE_LAN (
PROFILE_LAN_ID NUMBER NOT NULL ,
PROFILE_ID NUMBER NOT NULL ,
LAN VARCHAR2(20 BYTE) DEFAULT NULL  NULL ,
PROFILE_CODE VARCHAR2(50 BYTE) DEFAULT NULL  NULL ,
DS_ID NUMBER DEFAULT NULL  NULL ,
DS_NAME VARCHAR2(100 BYTE) DEFAULT NULL  NULL ,
SOURCE_SQL VARCHAR2(500 BYTE) DEFAULT NULL  NULL ,
PROFILE_NAME VARCHAR2(50 BYTE) DEFAULT NULL  NULL ,
PROFILE_DESC VARCHAR2(100 BYTE) DEFAULT NULL  NULL ,
SYSTEM_CODE VARCHAR2(50 BYTE) DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_PROFILE_LAN.PROFILE_LAN_ID IS '主键ID';
COMMENT ON COLUMN BASE_PROFILE_LAN.LAN IS '语音CN/EN';
COMMENT ON COLUMN BASE_PROFILE_LAN.PROFILE_CODE IS 'profile编码';
COMMENT ON COLUMN BASE_PROFILE_LAN.DS_ID IS '数据源Id';
COMMENT ON COLUMN BASE_PROFILE_LAN.DS_NAME IS '数据源名称';
COMMENT ON COLUMN BASE_PROFILE_LAN.SOURCE_SQL IS 'source_sql';
COMMENT ON COLUMN BASE_PROFILE_LAN.PROFILE_NAME IS 'profile名称';
COMMENT ON COLUMN BASE_PROFILE_LAN.PROFILE_DESC IS 'source_sql描述';
COMMENT ON COLUMN BASE_PROFILE_LAN.SYSTEM_CODE IS '为哪个系统定义的profile，默认为All表示所有系统适用';
COMMENT ON COLUMN BASE_PROFILE_LAN.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_PROFILE_LAN.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_PROFILE_LAN.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_PROFILE_LAN.LAST_UPDATE_DATE IS '更新时间';
COMMENT ON COLUMN BASE_PROFILE_LAN.VERSION_NUM IS '版本号';
COMMENT ON COLUMN BASE_PROFILE_LAN.LAST_UPDATE_LOGIN IS '版本号';
COMMENT ON COLUMN BASE_PROFILE_LAN.DELETE_FLAG IS '是否删除，0：否，1：删除';

-- ----------------------------
-- Table structure for BASE_PROFILE_VALUE
-- ----------------------------
DROP TABLE BASE_PROFILE_VALUE;
CREATE TABLE BASE_PROFILE_VALUE (
PROFILE_VALUE_ID NUMBER NOT NULL ,
PROFILE_ID NUMBER DEFAULT NULL  NULL ,
BUSINESS_KEY NUMBER DEFAULT NULL  NULL ,
SYSTEM_CODE VARCHAR2(100 BYTE) NULL ,
KEY_TABLE_NAME VARCHAR2(100 BYTE) NULL ,
PROFILE_VALUE VARCHAR2(200 BYTE) NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_PROFILE_VALUE.PROFILE_VALUE_ID IS '主键ID';
COMMENT ON COLUMN BASE_PROFILE_VALUE.PROFILE_ID IS 'profile表Id';
COMMENT ON COLUMN BASE_PROFILE_VALUE.BUSINESS_KEY IS '业务表对应的主键';
COMMENT ON COLUMN BASE_PROFILE_VALUE.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_PROFILE_VALUE.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_PROFILE_VALUE.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_PROFILE_VALUE.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_PROFILE_VALUE.VERSION_NUM IS '版本号';
COMMENT ON COLUMN BASE_PROFILE_VALUE.LAST_UPDATE_LOGIN IS 'last_update_login';
COMMENT ON COLUMN BASE_PROFILE_VALUE.DELETE_FLAG IS '是否删除，0：否，1：删除';

-- ----------------------------
-- Table structure for BASE_PROFILE_VALUE_LAN
-- ----------------------------
DROP TABLE BASE_PROFILE_VALUE_LAN;
CREATE TABLE BASE_PROFILE_VALUE_LAN (
PROFILE_VALUE_LAN_ID NUMBER NOT NULL ,
PROFILE_LAN_ID NUMBER DEFAULT NULL  NULL ,
LAN VARCHAR2(30 BYTE) NULL ,
BUSINESS_KEY NUMBER DEFAULT NULL  NULL ,
SYSTEM_CODE VARCHAR2(100 BYTE) NULL ,
KEY_TABLE_NAME VARCHAR2(100 BYTE) NULL ,
PROFILE_VALUE VARCHAR2(200 BYTE) NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_PROFILE_VALUE_LAN.PROFILE_VALUE_LAN_ID IS '主键ID';
COMMENT ON COLUMN BASE_PROFILE_VALUE_LAN.PROFILE_LAN_ID IS 'profile_lan表Id';
COMMENT ON COLUMN BASE_PROFILE_VALUE_LAN.BUSINESS_KEY IS '业务表对应的主键';
COMMENT ON COLUMN BASE_PROFILE_VALUE_LAN.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_PROFILE_VALUE_LAN.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_PROFILE_VALUE_LAN.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_PROFILE_VALUE_LAN.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_PROFILE_VALUE_LAN.VERSION_NUM IS '版本号';
COMMENT ON COLUMN BASE_PROFILE_VALUE_LAN.LAST_UPDATE_LOGIN IS 'last_update_login';
COMMENT ON COLUMN BASE_PROFILE_VALUE_LAN.DELETE_FLAG IS '是否删除，0：否，1：删除';

-- ----------------------------
-- Table structure for BASE_PUBLISH_APP_INFO
-- ----------------------------
DROP TABLE BASE_PUBLISH_APP_INFO;
CREATE TABLE BASE_PUBLISH_APP_INFO (
APP_WAP_ID NUMBER NOT NULL ,
APP_WAP_NAME VARCHAR2(10 BYTE) NULL ,
APP_SYSTEM VARCHAR2(10 BYTE) NULL ,
APP_PUBLISH_VERSION VARCHAR2(10 BYTE) NULL ,
APP_UPDATE_TIPS VARCHAR2(2000 BYTE) NULL ,
APP_DOWNLOAD_URL VARCHAR2(256 BYTE) NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_PUBLISH_APP_INFO.APP_WAP_ID IS 'app应用主键';
COMMENT ON COLUMN BASE_PUBLISH_APP_INFO.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_PUBLISH_APP_INFO.CREATION_DATE IS '创建时间';
COMMENT ON COLUMN BASE_PUBLISH_APP_INFO.LAST_UPDATE_DATE IS '最后更新时间';
COMMENT ON COLUMN BASE_PUBLISH_APP_INFO.LAST_UPDATE_LOGIN IS '最后登录id';
COMMENT ON COLUMN BASE_PUBLISH_APP_INFO.LAST_UPDATED_BY IS '最后更新人';
COMMENT ON COLUMN BASE_PUBLISH_APP_INFO.VERSION_NUM IS '版本号';
COMMENT ON COLUMN BASE_PUBLISH_APP_INFO.DELETE_FLAG IS '是否删除0：未删除1：已删除';

-- ----------------------------
-- Table structure for BASE_REPORT_CHARTS_TYPE
-- ----------------------------
DROP TABLE BASE_REPORT_CHARTS_TYPE;
CREATE TABLE BASE_REPORT_CHARTS_TYPE (
CHARTS_ID NUMBER NOT NULL ,
CHARTS_CODE VARCHAR2(30 BYTE) NULL ,
CHARTS_NAME VARCHAR2(30 BYTE) NULL ,
CHARTS_SCRIPT VARCHAR2(4000 BYTE) NULL ,
DIMENSIONS VARCHAR2(300 BYTE) NULL ,
DIMENSION_LENGTH NUMBER DEFAULT NULL  NULL ,
DATA_CONVERSION_SCRIPT VARCHAR2(4000 BYTE) NULL ,
DESCRIPTION VARCHAR2(250 BYTE) NULL ,
ATTRIBUTE_CATEGORY VARCHAR2(30 BYTE) NULL ,
CHARTS_TYPE VARCHAR2(30 BYTE) NULL ,
DEMO_URL VARCHAR2(250 BYTE) NULL ,
CHARTS_TITLE VARCHAR2(300 BYTE) NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_REPORT_CHARTS_TYPE.CHARTS_ID IS '主键ID';
COMMENT ON COLUMN BASE_REPORT_CHARTS_TYPE.DIMENSION_LENGTH IS 'dimension_length';
COMMENT ON COLUMN BASE_REPORT_CHARTS_TYPE.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_REPORT_CHARTS_TYPE.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_REPORT_CHARTS_TYPE.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_REPORT_CHARTS_TYPE.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_REPORT_CHARTS_TYPE.VERSION_NUM IS '版本号';
COMMENT ON COLUMN BASE_REPORT_CHARTS_TYPE.LAST_UPDATE_LOGIN IS 'last_update_login';

-- ----------------------------
-- Table structure for BASE_REPORT_CHARTS_TYPE_LAN
-- ----------------------------
DROP TABLE BASE_REPORT_CHARTS_TYPE_LAN;
CREATE TABLE BASE_REPORT_CHARTS_TYPE_LAN (
CHARTS_LAN_ID NUMBER NOT NULL ,
CHARTS_ID NUMBER NOT NULL ,
LAN VARCHAR2(30 BYTE) NULL ,
CHARTS_NAME VARCHAR2(30 BYTE) NULL ,
DESCRIPTION VARCHAR2(250 BYTE) NULL ,
CHARTS_TITLE VARCHAR2(300 BYTE) NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_REPORT_CHARTS_TYPE_LAN.CHARTS_LAN_ID IS 'dimension_length';
COMMENT ON COLUMN BASE_REPORT_CHARTS_TYPE_LAN.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_REPORT_CHARTS_TYPE_LAN.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_REPORT_CHARTS_TYPE_LAN.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_REPORT_CHARTS_TYPE_LAN.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_REPORT_CHARTS_TYPE_LAN.VERSION_NUM IS '版本号';
COMMENT ON COLUMN BASE_REPORT_CHARTS_TYPE_LAN.LAST_UPDATE_LOGIN IS 'last_update_login';

-- ----------------------------
-- Table structure for BASE_REPORT_DATASOURCE
-- ----------------------------
DROP TABLE BASE_REPORT_DATASOURCE;
CREATE TABLE BASE_REPORT_DATASOURCE (
DS_ID NUMBER NOT NULL ,
DS_NAME VARCHAR2(100 BYTE) NULL ,
DS_TYPE VARCHAR2(25 BYTE) NULL ,
DS_ACCESS_TYPE VARCHAR2(10 BYTE) NULL ,
DS_ACCESS_PROTOCAL VARCHAR2(10 BYTE) NULL ,
DS_IP VARCHAR2(20 BYTE) NULL ,
DS_PORT VARCHAR2(10 BYTE) NULL ,
DS_WEBSERVER_ADDRESS VARCHAR2(500 BYTE) NULL ,
DS_WEBSERVER_USER VARCHAR2(45 BYTE) NULL ,
DS_WEBSERVER_PASSWORD VARCHAR2(100 BYTE) NULL ,
DS_WEBSERVER_TOKEN VARCHAR2(500 BYTE) NULL ,
DS_DB_INSTANCE_NAME VARCHAR2(100 BYTE) NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_REPORT_DATASOURCE.DS_ID IS '主键';
COMMENT ON COLUMN BASE_REPORT_DATASOURCE.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_REPORT_DATASOURCE.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_REPORT_DATASOURCE.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_REPORT_DATASOURCE.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_REPORT_DATASOURCE.VERSION_NUM IS '版本号';
COMMENT ON COLUMN BASE_REPORT_DATASOURCE.LAST_UPDATE_LOGIN IS 'last_update_login';

-- ----------------------------
-- Table structure for BASE_REPORT_DATASOURCE_LAN
-- ----------------------------
DROP TABLE BASE_REPORT_DATASOURCE_LAN;
CREATE TABLE BASE_REPORT_DATASOURCE_LAN (
EN_ID NUMBER NOT NULL ,
DS_ID NUMBER NOT NULL ,
LAN VARCHAR2(50 BYTE) NULL ,
DS_NAME VARCHAR2(100 BYTE) NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_REPORT_DATASOURCE_LAN.EN_ID IS '主键';
COMMENT ON COLUMN BASE_REPORT_DATASOURCE_LAN.DS_ID IS '主表ID';
COMMENT ON COLUMN BASE_REPORT_DATASOURCE_LAN.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_REPORT_DATASOURCE_LAN.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_REPORT_DATASOURCE_LAN.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_REPORT_DATASOURCE_LAN.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_REPORT_DATASOURCE_LAN.VERSION_NUM IS '版本号';
COMMENT ON COLUMN BASE_REPORT_DATASOURCE_LAN.LAST_UPDATE_LOGIN IS 'last_update_login';

-- ----------------------------
-- Table structure for BASE_REPORT_GROUP
-- ----------------------------
DROP TABLE BASE_REPORT_GROUP;
CREATE TABLE BASE_REPORT_GROUP (
REPORT_GROUP_ID NUMBER NOT NULL ,
MENU_TAB_NAME VARCHAR2(200 BYTE) NULL ,
REPORT_GROUP_DESC VARCHAR2(2000 BYTE) NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_REPORT_GROUP.REPORT_GROUP_ID IS '主键Id';
COMMENT ON COLUMN BASE_REPORT_GROUP.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_REPORT_GROUP.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_REPORT_GROUP.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_REPORT_GROUP.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_REPORT_GROUP.VERSION_NUM IS '版本号';
COMMENT ON COLUMN BASE_REPORT_GROUP.LAST_UPDATE_LOGIN IS 'last_update_login';

-- ----------------------------
-- Table structure for BASE_REPORT_GROUP_HEADER
-- ----------------------------
DROP TABLE BASE_REPORT_GROUP_HEADER;
CREATE TABLE BASE_REPORT_GROUP_HEADER (
REPORT_GROUP_HEADER_ID NUMBER NOT NULL ,
REPORT_HEADER_ID NUMBER DEFAULT NULL  NULL ,
REPORT_GROUP_ID NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_REPORT_GROUP_HEADER.REPORT_HEADER_ID IS '报表id';
COMMENT ON COLUMN BASE_REPORT_GROUP_HEADER.REPORT_GROUP_ID IS '报表组Id';
COMMENT ON COLUMN BASE_REPORT_GROUP_HEADER.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_REPORT_GROUP_HEADER.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_REPORT_GROUP_HEADER.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_REPORT_GROUP_HEADER.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_REPORT_GROUP_HEADER.VERSION_NUM IS '版本号';
COMMENT ON COLUMN BASE_REPORT_GROUP_HEADER.LAST_UPDATE_LOGIN IS 'last_update_login';

-- ----------------------------
-- Table structure for BASE_REPORT_HEADER
-- ----------------------------
DROP TABLE BASE_REPORT_HEADER;
CREATE TABLE BASE_REPORT_HEADER (
REPORT_HEADER_ID NUMBER NOT NULL ,
REPORT_HEADER_CODE VARCHAR2(30 BYTE) NULL ,
REPORT_TYPE VARCHAR2(50 BYTE) NULL ,
PAGE_SIZE NUMBER DEFAULT NULL  NULL ,
REPORT_TITLE VARCHAR2(100 BYTE) NULL ,
WEB_SCRIPT VARCHAR2(3999 BYTE) NULL ,
COUNT_SQL VARCHAR2(2000 BYTE) NULL ,
QUERY_SQL VARCHAR2(3999 BYTE) NULL ,
DS_ID NUMBER DEFAULT NULL  NULL ,
WHERE_CLAUSE VARCHAR2(1000 BYTE) NULL ,
ORDER_BY VARCHAR2(500 BYTE) NULL ,
QUERY_FLAG VARCHAR2(5 BYTE) NULL ,
COUNT_FLAG VARCHAR2(30 BYTE) NULL ,
REPORT_DESC VARCHAR2(2000 BYTE) NULL ,
CHARTS_TITLE VARCHAR2(300 BYTE) NULL ,
CHARTS_TYPE VARCHAR2(30 BYTE) NULL ,
CHARTS_CODE VARCHAR2(30 BYTE) NULL ,
CHARTS_NAME VARCHAR2(30 BYTE) NULL ,
DATA_CONVERSION_SCRIPT VARCHAR2(4000 BYTE) NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_REPORT_HEADER.REPORT_HEADER_ID IS '主键ID';
COMMENT ON COLUMN BASE_REPORT_HEADER.PAGE_SIZE IS '列表行数';
COMMENT ON COLUMN BASE_REPORT_HEADER.DS_ID IS '对应的数据源Id';
COMMENT ON COLUMN BASE_REPORT_HEADER.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_REPORT_HEADER.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_REPORT_HEADER.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_REPORT_HEADER.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_REPORT_HEADER.VERSION_NUM IS '版本号';
COMMENT ON COLUMN BASE_REPORT_HEADER.LAST_UPDATE_LOGIN IS 'last_update_login';

-- ----------------------------
-- Table structure for BASE_REPORT_LINE
-- ----------------------------
DROP TABLE BASE_REPORT_LINE;
CREATE TABLE BASE_REPORT_LINE (
REPORT_LINE_ID NUMBER NOT NULL ,
REPORT_HEADER_ID NUMBER DEFAULT NULL  NULL ,
REPORT_HEADER_CODE VARCHAR2(30 BYTE) NULL ,
ORDER_NO NUMBER DEFAULT NULL  NULL ,
COLUMN_CODE VARCHAR2(50 BYTE) NULL ,
COLUMN_NAME VARCHAR2(50 BYTE) NULL ,
COLUMN_DISPLAY_WIDTH NUMBER DEFAULT NULL  NULL ,
COLUMN_DATA_TYPE VARCHAR2(30 BYTE) NULL ,
COLUMN_DISPLAY_FLAG VARCHAR2(5 BYTE) NULL ,
PARAM_REQUIRED_FLAG VARCHAR2(5 BYTE) NULL ,
PARAM_DISPLAY_TYPE VARCHAR2(20 BYTE) NULL ,
PARAM_DISPLAY_NAME VARCHAR2(200 BYTE) NULL ,
PARAM_USE_CODE VARCHAR2(200 BYTE) NULL ,
PARAM_DATA_FROM_TYPE VARCHAR2(30 BYTE) NULL ,
PARAM_DEFAULT_VALUE VARCHAR2(200 BYTE) NULL ,
COUNT_FLAG VARCHAR2(30 BYTE) NULL ,
SUM_FLAG VARCHAR2(30 BYTE) NULL ,
AVG_FLAG VARCHAR2(30 BYTE) NULL ,
REPORT_LINE_DESC CLOB NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
PARAM_DATA_FROM_TYPE_CODE VARCHAR2(100 BYTE) NULL ,
RANGE_FLAG VARCHAR2(10 BYTE) NULL ,
CONDITION_FLAG VARCHAR2(10 BYTE) NULL ,
CONDITION_EXPRESSION VARCHAR2(10 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_REPORT_LINE.REPORT_LINE_ID IS '主键ID';
COMMENT ON COLUMN BASE_REPORT_LINE.REPORT_HEADER_ID IS '头表Id';
COMMENT ON COLUMN BASE_REPORT_LINE.ORDER_NO IS '列排序编号';
COMMENT ON COLUMN BASE_REPORT_LINE.COLUMN_DISPLAY_WIDTH IS '列显示宽度';
COMMENT ON COLUMN BASE_REPORT_LINE.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_REPORT_LINE.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_REPORT_LINE.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_REPORT_LINE.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_REPORT_LINE.VERSION_NUM IS '版本号';
COMMENT ON COLUMN BASE_REPORT_LINE.LAST_UPDATE_LOGIN IS 'last_update_login';

-- ----------------------------
-- Table structure for BASE_REQUEST_LOG
-- ----------------------------
DROP TABLE BASE_REQUEST_LOG;
CREATE TABLE BASE_REQUEST_LOG (
ID NUMBER NOT NULL ,
REQUEST_URL VARCHAR2(255 BYTE) NULL ,
REQUEST_METHOD VARCHAR2(255 BYTE) NULL ,
REQUEST_BODY CLOB NULL ,
RESPONSE CLOB NULL ,
REQUEST_HEADER VARCHAR2(255 BYTE) NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_REQUEST_LOG.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_REQUEST_LOG.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_REQUEST_LOG.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_REQUEST_LOG.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_REQUEST_LOG.VERSION_NUM IS '版本号';

-- ----------------------------
-- Table structure for BASE_RESOURCE
-- ----------------------------
DROP TABLE BASE_RESOURCE;
CREATE TABLE BASE_RESOURCE (
RESOURCE_ID NUMBER NOT NULL ,
MENU_ID NUMBER DEFAULT NULL  NULL ,
RESOURCE_CODE VARCHAR2(200 BYTE) NULL ,
BUTTON_URL VARCHAR2(200 BYTE) NULL ,
ORDER_NO NUMBER DEFAULT NULL  NULL ,
RESOURCE_TYPE VARCHAR2(30 BYTE) NULL ,
RESOURCE_NAME VARCHAR2(100 BYTE) NULL ,
RESOURCE_DESC VARCHAR2(250 BYTE) NULL ,
RES_ICON VARCHAR2(50 BYTE) NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_RESOURCE.RESOURCE_ID IS '资源标识';
COMMENT ON COLUMN BASE_RESOURCE.MENU_ID IS '菜单Id，节点标识 对应到功能';
COMMENT ON COLUMN BASE_RESOURCE.ORDER_NO IS '排序号';
COMMENT ON COLUMN BASE_RESOURCE.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_RESOURCE.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_RESOURCE.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_RESOURCE.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_RESOURCE.VERSION_NUM IS '版本号';
COMMENT ON COLUMN BASE_RESOURCE.LAST_UPDATE_LOGIN IS 'last_update_login';

-- ----------------------------
-- Table structure for BASE_RESOURCE_LAN
-- ----------------------------
DROP TABLE BASE_RESOURCE_LAN;
CREATE TABLE BASE_RESOURCE_LAN (
RESOURCE_LANGUAGE_ID NUMBER NOT NULL ,
RESOURCE_NAME VARCHAR2(100 BYTE) NULL ,
RESOURCE_DESC VARCHAR2(250 BYTE) NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
LANGUAGE VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL ,
RESOURCE_TYPE VARCHAR2(30 BYTE) NULL ,
RESOURCE_ID NUMBER DEFAULT NULL  NULL ,
MENU_ID NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_RESOURCE_LAN.RESOURCE_LANGUAGE_ID IS '主键ID';
COMMENT ON COLUMN BASE_RESOURCE_LAN.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_RESOURCE_LAN.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_RESOURCE_LAN.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_RESOURCE_LAN.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_RESOURCE_LAN.VERSION_NUM IS '版本号';

-- ----------------------------
-- Table structure for BASE_RESPONSIBILITY
-- ----------------------------
DROP TABLE BASE_RESPONSIBILITY;
CREATE TABLE BASE_RESPONSIBILITY (
RESPONSIBILITY_ID NUMBER NOT NULL ,
RESPONSIBILITY_CODE VARCHAR2(256 BYTE) NULL ,
RESPONSIBILITY_NAME VARCHAR2(256 BYTE) NULL ,
RESPONSIBILITY_DESC VARCHAR2(1000 BYTE) NULL ,
START_DATE_ACTIVE DATE DEFAULT NULL  NULL ,
END_DATE_ACTIVE DATE DEFAULT NULL  NULL ,
SYSTEM_CODE VARCHAR2(30 BYTE) NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_RESPONSIBILITY.RESPONSIBILITY_ID IS '职责标识';
COMMENT ON COLUMN BASE_RESPONSIBILITY.START_DATE_ACTIVE IS '生效时间';
COMMENT ON COLUMN BASE_RESPONSIBILITY.END_DATE_ACTIVE IS '失效时间';
COMMENT ON COLUMN BASE_RESPONSIBILITY.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_RESPONSIBILITY.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_RESPONSIBILITY.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_RESPONSIBILITY.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_RESPONSIBILITY.VERSION_NUM IS '版本号';
COMMENT ON COLUMN BASE_RESPONSIBILITY.LAST_UPDATE_LOGIN IS 'last_update_login';

-- ----------------------------
-- Table structure for BASE_RESPONSIBILITY_LAN
-- ----------------------------
DROP TABLE BASE_RESPONSIBILITY_LAN;
CREATE TABLE BASE_RESPONSIBILITY_LAN (
LAN_ID NUMBER NOT NULL ,
MEANING VARCHAR2(150 BYTE) NULL ,
DESCRIPTION VARCHAR2(240 BYTE) NULL ,
RESPONSIBILITY_ID NUMBER DEFAULT NULL  NULL ,
LAN VARCHAR2(30 BYTE) NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_RESPONSIBILITY_LAN.LAN_ID IS '主键ID';
COMMENT ON COLUMN BASE_RESPONSIBILITY_LAN.RESPONSIBILITY_ID IS '职责id';
COMMENT ON COLUMN BASE_RESPONSIBILITY_LAN.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_RESPONSIBILITY_LAN.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_RESPONSIBILITY_LAN.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_RESPONSIBILITY_LAN.VERSION_NUM IS '版本号';

-- ----------------------------
-- Table structure for BASE_RESPONSIBILITY_ROLE
-- ----------------------------
DROP TABLE BASE_RESPONSIBILITY_ROLE;
CREATE TABLE BASE_RESPONSIBILITY_ROLE (
RESP_ROLE_ID NUMBER NOT NULL ,
RESPONSIBILITY_ID NUMBER DEFAULT NULL  NULL ,
ROLE_ID NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_RESPONSIBILITY_ROLE.RESP_ROLE_ID IS '主键ID';
COMMENT ON COLUMN BASE_RESPONSIBILITY_ROLE.RESPONSIBILITY_ID IS '职责标识';
COMMENT ON COLUMN BASE_RESPONSIBILITY_ROLE.ROLE_ID IS '角色标识';
COMMENT ON COLUMN BASE_RESPONSIBILITY_ROLE.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_RESPONSIBILITY_ROLE.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_RESPONSIBILITY_ROLE.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_RESPONSIBILITY_ROLE.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_RESPONSIBILITY_ROLE.VERSION_NUM IS '版本号';
COMMENT ON COLUMN BASE_RESPONSIBILITY_ROLE.LAST_UPDATE_LOGIN IS 'last_update_login';

-- ----------------------------
-- Table structure for BASE_RESPONSIBILITY_ROLE_LAN
-- ----------------------------
DROP TABLE BASE_RESPONSIBILITY_ROLE_LAN;
CREATE TABLE BASE_RESPONSIBILITY_ROLE_LAN (
LAN_ROLE_ID NUMBER NOT NULL ,
RESPONSIBILITY_LAN_ID NUMBER DEFAULT NULL  NULL ,
ROLE_ID NUMBER DEFAULT NULL  NULL ,
LAN VARCHAR2(50 BYTE) NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_RESPONSIBILITY_ROLE_LAN.LAN_ROLE_ID IS '主键ID';
COMMENT ON COLUMN BASE_RESPONSIBILITY_ROLE_LAN.RESPONSIBILITY_LAN_ID IS '职责标识';
COMMENT ON COLUMN BASE_RESPONSIBILITY_ROLE_LAN.ROLE_ID IS '角色标识';
COMMENT ON COLUMN BASE_RESPONSIBILITY_ROLE_LAN.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_RESPONSIBILITY_ROLE_LAN.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_RESPONSIBILITY_ROLE_LAN.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_RESPONSIBILITY_ROLE_LAN.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_RESPONSIBILITY_ROLE_LAN.VERSION_NUM IS '版本号';
COMMENT ON COLUMN BASE_RESPONSIBILITY_ROLE_LAN.LAST_UPDATE_LOGIN IS 'last_update_login';

-- ----------------------------
-- Table structure for BASE_ROLE
-- ----------------------------
DROP TABLE BASE_ROLE;
CREATE TABLE BASE_ROLE (
ROLE_ID NUMBER NOT NULL ,
ROLE_NAME VARCHAR2(100 BYTE) NULL ,
ROLE_CODE VARCHAR2(100 BYTE) NULL ,
ROLE_DESC VARCHAR2(250 BYTE) NULL ,
SYSTEM_CODE VARCHAR2(30 BYTE) NULL ,
START_DATE_ACTIVE DATE DEFAULT NULL  NULL ,
END_DATE_ACTIVE DATE DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_ROLE.ROLE_ID IS '角色Id';
COMMENT ON COLUMN BASE_ROLE.START_DATE_ACTIVE IS '生效时间';
COMMENT ON COLUMN BASE_ROLE.END_DATE_ACTIVE IS '失效时间';
COMMENT ON COLUMN BASE_ROLE.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_ROLE.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_ROLE.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_ROLE.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_ROLE.VERSION_NUM IS '版本号';
COMMENT ON COLUMN BASE_ROLE.LAST_UPDATE_LOGIN IS 'last_update_login';

-- ----------------------------
-- Table structure for BASE_ROLE_LANGUAGE
-- ----------------------------
DROP TABLE BASE_ROLE_LANGUAGE;
CREATE TABLE BASE_ROLE_LANGUAGE (
ROLE_LANGUAGE_ID NUMBER NOT NULL ,
ROLE_NAME VARCHAR2(100 BYTE) NULL ,
ROLE_DESC VARCHAR2(250 BYTE) NULL ,
LANGUAGE VARCHAR2(30 BYTE) NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL ,
ROLE_ID NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_ROLE_LANGUAGE.ROLE_LANGUAGE_ID IS '主键ID';
COMMENT ON COLUMN BASE_ROLE_LANGUAGE.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_ROLE_LANGUAGE.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_ROLE_LANGUAGE.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_ROLE_LANGUAGE.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_ROLE_LANGUAGE.VERSION_NUM IS '版本号';

-- ----------------------------
-- Table structure for BASE_ROLE_MENU
-- ----------------------------
DROP TABLE BASE_ROLE_MENU;
CREATE TABLE BASE_ROLE_MENU (
ROLE_MENU_ID NUMBER NOT NULL ,
MENU_ID NUMBER DEFAULT NULL  NULL ,
ROLE_ID NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_ROLE_MENU.ROLE_MENU_ID IS '主键ID';
COMMENT ON COLUMN BASE_ROLE_MENU.MENU_ID IS '节点标识,引用功能，只能引用功能，不能引用菜单';
COMMENT ON COLUMN BASE_ROLE_MENU.ROLE_ID IS '角色Id';
COMMENT ON COLUMN BASE_ROLE_MENU.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_ROLE_MENU.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_ROLE_MENU.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_ROLE_MENU.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_ROLE_MENU.VERSION_NUM IS '版本号';
COMMENT ON COLUMN BASE_ROLE_MENU.LAST_UPDATE_LOGIN IS 'last_update_login';

-- ----------------------------
-- Table structure for BASE_ROLE_RESOURCE
-- ----------------------------
DROP TABLE BASE_ROLE_RESOURCE;
CREATE TABLE BASE_ROLE_RESOURCE (
ROLE_RESOURCE_ID NUMBER NOT NULL ,
ROLE_ID NUMBER DEFAULT NULL  NULL ,
RESOURCE_ID NUMBER DEFAULT NULL  NULL ,
RESOURCE_VALUE VARCHAR2(100 BYTE) NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_ROLE_RESOURCE.ROLE_RESOURCE_ID IS '主键ID';
COMMENT ON COLUMN BASE_ROLE_RESOURCE.ROLE_ID IS '角色Id';
COMMENT ON COLUMN BASE_ROLE_RESOURCE.RESOURCE_ID IS '资源标识';
COMMENT ON COLUMN BASE_ROLE_RESOURCE.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_ROLE_RESOURCE.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_ROLE_RESOURCE.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_ROLE_RESOURCE.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_ROLE_RESOURCE.VERSION_NUM IS '版本号';
COMMENT ON COLUMN BASE_ROLE_RESOURCE.LAST_UPDATE_LOGIN IS 'last_update_login';

-- ----------------------------
-- Table structure for BASE_SYSTEM_SSO
-- ----------------------------
DROP TABLE BASE_SYSTEM_SSO;
CREATE TABLE BASE_SYSTEM_SSO (
SYS_SSO_ID NUMBER NOT NULL ,
SYSTEM_NAME VARCHAR2(100 BYTE) NULL ,
SYSTEM_CODE VARCHAR2(100 BYTE) NULL ,
DESCRIPTION VARCHAR2(255 BYTE) NULL ,
CLIENT_ID VARCHAR2(100 BYTE) NULL ,
ENABLE_FLAG VARCHAR2(10 BYTE) NULL ,
IMAGE_URL VARCHAR2(500 BYTE) NULL ,
ORDER_NO NUMBER DEFAULT NULL  NULL ,
PARAMS VARCHAR2(500 BYTE) NULL ,
REQUEST_METHOD VARCHAR2(45 BYTE) NULL ,
REQUEST_URL VARCHAR2(255 BYTE) NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_SYSTEM_SSO.SYS_SSO_ID IS '主键Id';
COMMENT ON COLUMN BASE_SYSTEM_SSO.ORDER_NO IS '排序';
COMMENT ON COLUMN BASE_SYSTEM_SSO.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_SYSTEM_SSO.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_SYSTEM_SSO.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_SYSTEM_SSO.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_SYSTEM_SSO.VERSION_NUM IS '版本号';

-- ----------------------------
-- Table structure for BASE_TASK_COLLECTION
-- ----------------------------
DROP TABLE BASE_TASK_COLLECTION;
CREATE TABLE BASE_TASK_COLLECTION (
TASK_COLLECTION_ID NUMBER NOT NULL ,
BUSINESS_KEY_ID VARCHAR2(64 BYTE) DEFAULT NULL  NULL ,
CREATE_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
FUNCTION_URL VARCHAR2(200 BYTE) DEFAULT NULL  NULL ,
HANDLER VARCHAR2(64 BYTE) DEFAULT NULL  NULL ,
INSTANCE_ID VARCHAR2(64 BYTE) DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
STATUS VARCHAR2(10 BYTE) DEFAULT NULL  NULL ,
SYSTEM_CODE VARCHAR2(64 BYTE) DEFAULT NULL  NULL ,
SYSTEM_NAME VARCHAR2(200 BYTE) DEFAULT NULL  NULL ,
TASK_ID VARCHAR2(64 BYTE) DEFAULT NULL  NULL ,
TASK_TITLE VARCHAR2(200 BYTE) DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for BASE_USER_RESPONSIBILITY
-- ----------------------------
DROP TABLE BASE_USER_RESPONSIBILITY;
CREATE TABLE BASE_USER_RESPONSIBILITY (
RESP_USER_ID NUMBER NOT NULL ,
RESPONSIBILITY_ID NUMBER DEFAULT NULL  NULL ,
USER_ID NUMBER NOT NULL ,
START_DATE_ACTIVE DATE DEFAULT NULL  NULL ,
END_DATE_ACTIVE DATE DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_USER_RESPONSIBILITY.RESP_USER_ID IS '主键';
COMMENT ON COLUMN BASE_USER_RESPONSIBILITY.RESPONSIBILITY_ID IS '职责标识';
COMMENT ON COLUMN BASE_USER_RESPONSIBILITY.USER_ID IS '用户Id';
COMMENT ON COLUMN BASE_USER_RESPONSIBILITY.START_DATE_ACTIVE IS '生效时间';
COMMENT ON COLUMN BASE_USER_RESPONSIBILITY.END_DATE_ACTIVE IS '失效时间';
COMMENT ON COLUMN BASE_USER_RESPONSIBILITY.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_USER_RESPONSIBILITY.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_USER_RESPONSIBILITY.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_USER_RESPONSIBILITY.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_USER_RESPONSIBILITY.VERSION_NUM IS '版本号';
COMMENT ON COLUMN BASE_USER_RESPONSIBILITY.LAST_UPDATE_LOGIN IS 'last_update_login';

-- ----------------------------
-- Table structure for BASE_USERS
-- ----------------------------
DROP TABLE BASE_USERS;
CREATE TABLE BASE_USERS (
USER_ID NUMBER NOT NULL ,
PHONE_NUMBER VARCHAR2(30 BYTE) NULL ,
NAME_PINGYIN VARCHAR2(100 BYTE) NULL ,
NAME_SIMPLE_PINYIN VARCHAR2(50 BYTE) NULL ,
PERSON_ID VARCHAR2(50 BYTE) NULL ,
SOURCE_ID VARCHAR2(36 BYTE) NULL ,
ISADMIN VARCHAR2(20 BYTE) NULL ,
USER_NAME VARCHAR2(100 BYTE) NULL ,
USER_DESC VARCHAR2(256 BYTE) NULL ,
USER_TYPE VARCHAR2(10 BYTE) NULL ,
USER_FULL_NAME VARCHAR2(100 BYTE) NULL ,
USER_HEAD_IMG_URL VARCHAR2(255 BYTE) NULL ,
ENCRYPTED_PASSWORD VARCHAR2(100 BYTE) NULL ,
INTERNAL_USER VARCHAR2(11 BYTE) NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL ,
START_DATE DATE DEFAULT NULL  NULL ,
END_DATE DATE DEFAULT NULL  NULL ,
ORDER_NO NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
CUST_ACCOUNT_ID VARCHAR2(11 BYTE) NULL ,
PWD_UPDATE_DATE DATE DEFAULT NULL  NULL ,
SERVICE_STORE_ID NUMBER DEFAULT NULL  NULL ,
SOURCE_CODE VARCHAR2(50 BYTE) NULL ,
STORE_CODE VARCHAR2(50 BYTE) NULL ,
DATA_TYPE VARCHAR2(2 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_USERS.USER_ID IS '用户Id';
COMMENT ON COLUMN BASE_USERS.DELETE_FLAG IS '是否删除（0：未删除；1：已删除）';
COMMENT ON COLUMN BASE_USERS.START_DATE IS '生效日期';
COMMENT ON COLUMN BASE_USERS.END_DATE IS '失效日期';
COMMENT ON COLUMN BASE_USERS.ORDER_NO IS '排序号';
COMMENT ON COLUMN BASE_USERS.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_USERS.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_USERS.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_USERS.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_USERS.VERSION_NUM IS '版本号';
COMMENT ON COLUMN BASE_USERS.SERVICE_STORE_ID IS '所属服务店id';
COMMENT ON COLUMN BASE_USERS.DATA_TYPE IS '数据类型';

-- ----------------------------
-- Table structure for BASE_USERS_LANGUAGE
-- ----------------------------
DROP TABLE BASE_USERS_LANGUAGE;
CREATE TABLE BASE_USERS_LANGUAGE (
USER_LANGUAGE_ID NUMBER NOT NULL ,
USER_ID NUMBER NOT NULL ,
USER_DESC VARCHAR2(256 BYTE) NULL ,
USER_FULL_NAME VARCHAR2(100 BYTE) NULL ,
DELETE_FLAG NUMBER DEFAULT 0  NULL ,
START_DATE DATE DEFAULT NULL  NULL ,
END_DATE DATE DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
CUST_ACCOUNT_ID VARCHAR2(11 BYTE) NULL ,
LANGUAGE VARCHAR2(5 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_USERS_LANGUAGE.USER_LANGUAGE_ID IS '用户语言id';
COMMENT ON COLUMN BASE_USERS_LANGUAGE.USER_ID IS '用户Id';
COMMENT ON COLUMN BASE_USERS_LANGUAGE.DELETE_FLAG IS '是否删除（0：未删除；1：已删除）';
COMMENT ON COLUMN BASE_USERS_LANGUAGE.START_DATE IS '生效日期';
COMMENT ON COLUMN BASE_USERS_LANGUAGE.END_DATE IS '失效日期';
COMMENT ON COLUMN BASE_USERS_LANGUAGE.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_USERS_LANGUAGE.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_USERS_LANGUAGE.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_USERS_LANGUAGE.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_USERS_LANGUAGE.VERSION_NUM IS '版本号';

-- ----------------------------
-- Table structure for BASE_WAREHOUSE_MAPPING
-- ----------------------------
DROP TABLE BASE_WAREHOUSE_MAPPING;
CREATE TABLE BASE_WAREHOUSE_MAPPING (
WAREHOUSE_ID NUMBER NOT NULL ,
WAREHOUSE_CODE VARCHAR2(50 BYTE) NULL ,
WAREHOUSE_NAME VARCHAR2(100 BYTE) NULL ,
ORG_ID NUMBER DEFAULT NULL  NULL ,
ORGANIZATION_ID NUMBER DEFAULT NULL  NULL ,
ORGANIZATION_NAME VARCHAR2(100 BYTE) NULL ,
ADDR VARCHAR2(400 BYTE) NULL ,
WAREHOUSE_TYPE NUMBER DEFAULT NULL  NULL ,
DEFAULT_FLAG VARCHAR2(500 BYTE) NULL ,
DESCRIPTION VARCHAR2(400 BYTE) NULL ,
ACCOUNT_CODE VARCHAR2(30 BYTE) NULL ,
ACCOUNT_NAME VARCHAR2(500 BYTE) NULL ,
ACCOUNT_ID NUMBER DEFAULT NULL  NULL ,
PARENT_WAREHOUSE_CODE VARCHAR2(50 BYTE) NULL ,
CHANNEL_CODE VARCHAR2(100 BYTE) NULL ,
PROVINCIAL VARCHAR2(50 BYTE) NULL ,
MUNICIPAL VARCHAR2(50 BYTE) NULL ,
COUNTY VARCHAR2(50 BYTE) NULL ,
ADDRESS_DETAIL VARCHAR2(100 BYTE) NULL ,
LONGITUDE NUMBER(10,6) DEFAULT NULL  NULL ,
LATITUDE NUMBER(10,6) DEFAULT NULL  NULL ,
MAIN_FLAG VARCHAR2(5 BYTE) NULL ,
DELETE_FLAG VARCHAR2(1 BYTE) NULL ,
START_DATE_ACTIVE DATE DEFAULT NULL  NULL ,
END_DATE_ACTIVE DATE DEFAULT NULL  NULL ,
ALLOW_NEGATIVE_ONHAND VARCHAR2(5 BYTE) NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN BASE_WAREHOUSE_MAPPING.WAREHOUSE_ID IS '表ID，主键，供其他表做外键';
COMMENT ON COLUMN BASE_WAREHOUSE_MAPPING.ORG_ID IS '组织ID（渠道库存组织必须关联OU）';
COMMENT ON COLUMN BASE_WAREHOUSE_MAPPING.ORGANIZATION_ID IS '库存组织ID';
COMMENT ON COLUMN BASE_WAREHOUSE_MAPPING.WAREHOUSE_TYPE IS '仓库类型（<20 内部子库、>=20 <30经销商子库、30>=门店子库）';
COMMENT ON COLUMN BASE_WAREHOUSE_MAPPING.ACCOUNT_ID IS '所属经销商Id，财务编码';
COMMENT ON COLUMN BASE_WAREHOUSE_MAPPING.LONGITUDE IS '地址经度';
COMMENT ON COLUMN BASE_WAREHOUSE_MAPPING.LATITUDE IS '地址纬度';
COMMENT ON COLUMN BASE_WAREHOUSE_MAPPING.START_DATE_ACTIVE IS '起始日期';
COMMENT ON COLUMN BASE_WAREHOUSE_MAPPING.END_DATE_ACTIVE IS '终止日期';
COMMENT ON COLUMN BASE_WAREHOUSE_MAPPING.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN BASE_WAREHOUSE_MAPPING.CREATED_BY IS '创建人';
COMMENT ON COLUMN BASE_WAREHOUSE_MAPPING.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN BASE_WAREHOUSE_MAPPING.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN BASE_WAREHOUSE_MAPPING.VERSION_NUM IS '版本号';
COMMENT ON COLUMN BASE_WAREHOUSE_MAPPING.LAST_UPDATE_LOGIN IS 'last_update_login';

-- ----------------------------
-- Table structure for BASE_WECHAT_MNG
-- ----------------------------
DROP TABLE BASE_WECHAT_MNG;
CREATE TABLE BASE_WECHAT_MNG (
WX_ID NUMBER NOT NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
UNION_ID VARCHAR2(200 BYTE) DEFAULT NULL  NULL ,
USER_ID NUMBER DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
WX_OPEN_ID VARCHAR2(200 BYTE) DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for CUX_CDM_ACCESS_BASEDATA
-- ----------------------------
DROP TABLE CUX_CDM_ACCESS_BASEDATA;
CREATE TABLE CUX_CDM_ACCESS_BASEDATA (
ORG_ID NUMBER NOT NULL ,
ACCESS_TYPE VARCHAR2(10 BYTE) DEFAULT NULL  NULL ,
ACCOUNT_INT VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE1 VARCHAR2(240 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE10 VARCHAR2(240 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE11 VARCHAR2(240 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE12 VARCHAR2(240 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE13 VARCHAR2(240 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE14 VARCHAR2(240 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE15 VARCHAR2(240 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE2 VARCHAR2(240 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE3 VARCHAR2(240 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE4 VARCHAR2(240 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE5 VARCHAR2(240 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE6 VARCHAR2(240 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE7 VARCHAR2(240 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE8 VARCHAR2(240 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE9 VARCHAR2(240 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE_CATEGORY VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
CHANNEL_TYPE VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATETIME DATE DEFAULT NULL  NULL ,
CUST_ACCOUNT_ID NUMBER DEFAULT NULL  NULL ,
LAST_UPDATETIME_DATETIME DATE DEFAULT NULL  NULL ,
LAST_UPDATETIME_LOGIN NUMBER DEFAULT NULL  NULL ,
LAST_UPDATETIMED_BY NUMBER DEFAULT NULL  NULL ,
OA_USER_ID NUMBER DEFAULT NULL  NULL ,
PERSON_ID NUMBER DEFAULT NULL  NULL ,
POSITION_ID NUMBER DEFAULT NULL  NULL ,
SECONDARY_INVENTORY_NAME VARCHAR2(100 BYTE) DEFAULT NULL  NULL ,
SUBORDINATE_PERSON_ID NUMBER DEFAULT NULL  NULL ,
SUBORDINATE_POSITION_ID NUMBER DEFAULT NULL  NULL ,
TERRITORY2 VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
TERRITORY3 VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
USER_ID NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for DOMAIN_WX
-- ----------------------------
DROP TABLE DOMAIN_WX;
CREATE TABLE DOMAIN_WX (
CONFIGURE_ID NUMBER NOT NULL ,
DOMAIN VARCHAR2(150 BYTE) NULL ,
CORP_ID VARCHAR2(150 BYTE) NULL ,
CORP_SECRET VARCHAR2(150 BYTE) NULL ,
AGENT_ID NUMBER DEFAULT NULL  NULL ,
SECRETH VARCHAR2(150 BYTE) NULL ,
DEPARTMENT VARCHAR2(150 BYTE) NULL ,
CALLBACK_SCOPE VARCHAR2(150 BYTE) NULL ,
CREATION_DATE TIMESTAMP(6)  DEFAULT sysdate  NOT NULL ,
CREATED_BY NUMBER DEFAULT 0  NOT NULL ,
LAST_UPDATED_BY NUMBER DEFAULT 0  NOT NULL ,
LAST_UPDATE_DATE TIMESTAMP(6)  DEFAULT sysdate  NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT 0  NOT NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN DOMAIN_WX.CONFIGURE_ID IS '域名和微信配置主键ID';
COMMENT ON COLUMN DOMAIN_WX.AGENT_ID IS '授权方的网页应用ID';
COMMENT ON COLUMN DOMAIN_WX.VERSION_NUM IS '版本号';

-- ----------------------------
-- Table structure for EW_CONFIGURATION_HEAD
-- ----------------------------
DROP TABLE EW_CONFIGURATION_HEAD;
CREATE TABLE EW_CONFIGURATION_HEAD (
EWC_HEAD_ID NUMBER NOT NULL ,
EWC_HEAD_NAME VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
EWC_HEAD_TYPE VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
RULE_BUSINESS_LINE_CODE VARCHAR2(100 BYTE) DEFAULT NULL  NULL ,
RULE_EXP_CODE VARCHAR2(100 BYTE) DEFAULT NULL  NULL ,
START_DATE_ACTIVE DATE NOT NULL ,
END_DATE_ACTIVE DATE DEFAULT NULL  NULL ,
DESCRIPTION VARCHAR2(500 BYTE) DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
CREATION_DATE DATE DEFAULT sysdate  NOT NULL ,
CREATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATE_DATE DATE DEFAULT sysdate  NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
ATTRIBUTE_CATEGORY VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE1 VARCHAR2(240 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE2 VARCHAR2(240 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE3 VARCHAR2(240 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE4 VARCHAR2(240 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE5 VARCHAR2(240 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE6 VARCHAR2(240 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE7 VARCHAR2(240 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE8 VARCHAR2(240 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE9 VARCHAR2(240 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE10 VARCHAR2(240 BYTE) DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN EW_CONFIGURATION_HEAD.EWC_HEAD_ID IS '表ID，主键，供其他表做外键';
COMMENT ON COLUMN EW_CONFIGURATION_HEAD.EWC_HEAD_NAME IS '预警名称';
COMMENT ON COLUMN EW_CONFIGURATION_HEAD.EWC_HEAD_TYPE IS '预警类型';
COMMENT ON COLUMN EW_CONFIGURATION_HEAD.RULE_BUSINESS_LINE_CODE IS '规则引擎业务编码';
COMMENT ON COLUMN EW_CONFIGURATION_HEAD.RULE_EXP_CODE IS '规则引擎表达式编码';
COMMENT ON COLUMN EW_CONFIGURATION_HEAD.START_DATE_ACTIVE IS '起始日期';
COMMENT ON COLUMN EW_CONFIGURATION_HEAD.END_DATE_ACTIVE IS '终止日期';
COMMENT ON COLUMN EW_CONFIGURATION_HEAD.DESCRIPTION IS '说明、备注';

-- ----------------------------
-- Table structure for EW_CONFIGURATION_LINE
-- ----------------------------
DROP TABLE EW_CONFIGURATION_LINE;
CREATE TABLE EW_CONFIGURATION_LINE (
EWC_LINE_ID NUMBER NOT NULL ,
EWC_HEAD_ID NUMBER DEFAULT NULL  NULL ,
EWC_LINE_MODE VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
EWC_LINE_NEED VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
EWC_LINE_TEMPLATE NUMBER DEFAULT NULL  NULL ,
EWC_LINE_TYPE VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
START_DATE_ACTIVE DATE NOT NULL ,
END_DATE_ACTIVE DATE DEFAULT NULL  NULL ,
DESCRIPTION VARCHAR2(500 BYTE) DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
CREATION_DATE DATE DEFAULT sysdate  NOT NULL ,
CREATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATE_DATE DATE DEFAULT sysdate  NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
ATTRIBUTE_CATEGORY VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE1 VARCHAR2(240 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE2 VARCHAR2(240 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE3 VARCHAR2(240 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE4 VARCHAR2(240 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE5 VARCHAR2(240 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE6 VARCHAR2(240 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE7 VARCHAR2(240 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE8 VARCHAR2(240 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE9 VARCHAR2(240 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE10 VARCHAR2(240 BYTE) DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN EW_CONFIGURATION_LINE.EWC_LINE_ID IS '表ID，主键，供其他表做外键';
COMMENT ON COLUMN EW_CONFIGURATION_LINE.EWC_HEAD_ID IS '预警配置头表ID';
COMMENT ON COLUMN EW_CONFIGURATION_LINE.EWC_LINE_MODE IS '推送方式';
COMMENT ON COLUMN EW_CONFIGURATION_LINE.EWC_LINE_NEED IS '待办页面';
COMMENT ON COLUMN EW_CONFIGURATION_LINE.EWC_LINE_TEMPLATE IS '推送模板';
COMMENT ON COLUMN EW_CONFIGURATION_LINE.EWC_LINE_TYPE IS '推送类型(个推)';
COMMENT ON COLUMN EW_CONFIGURATION_LINE.START_DATE_ACTIVE IS '起始日期';
COMMENT ON COLUMN EW_CONFIGURATION_LINE.END_DATE_ACTIVE IS '终止日期';
COMMENT ON COLUMN EW_CONFIGURATION_LINE.DESCRIPTION IS '说明、备注';

-- ----------------------------
-- Table structure for EW_CONFIGURATION_MAN
-- ----------------------------
DROP TABLE EW_CONFIGURATION_MAN;
CREATE TABLE EW_CONFIGURATION_MAN (
EWC_MAN_ID NUMBER NOT NULL ,
EWC_LINE_ID NUMBER DEFAULT NULL  NULL ,
PUSH_OBJECT NUMBER DEFAULT NULL  NULL ,
PUSH_TYPE VARCHAR2(10 BYTE) DEFAULT NULL  NULL ,
POSITION VARCHAR2(10 BYTE) DEFAULT NULL  NULL ,
START_DATE_ACTIVE DATE NOT NULL ,
END_DATE_ACTIVE DATE DEFAULT NULL  NULL ,
DESCRIPTION VARCHAR2(500 BYTE) DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
CREATION_DATE DATE DEFAULT sysdate  NOT NULL ,
CREATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATE_DATE DATE DEFAULT sysdate  NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN EW_CONFIGURATION_MAN.EWC_MAN_ID IS '表ID，主键，供其他表做外键';
COMMENT ON COLUMN EW_CONFIGURATION_MAN.EWC_LINE_ID IS '行表ID';
COMMENT ON COLUMN EW_CONFIGURATION_MAN.PUSH_OBJECT IS '推送对象';
COMMENT ON COLUMN EW_CONFIGURATION_MAN.PUSH_TYPE IS '推送类型(岗位,个人)';
COMMENT ON COLUMN EW_CONFIGURATION_MAN.POSITION IS '所在岗位';
COMMENT ON COLUMN EW_CONFIGURATION_MAN.START_DATE_ACTIVE IS '起始日期';
COMMENT ON COLUMN EW_CONFIGURATION_MAN.END_DATE_ACTIVE IS '终止日期';
COMMENT ON COLUMN EW_CONFIGURATION_MAN.DESCRIPTION IS '说明、备注';

-- ----------------------------
-- Table structure for EW_HANDLE
-- ----------------------------
DROP TABLE EW_HANDLE;
CREATE TABLE EW_HANDLE (
HANDLE_ID NUMBER NOT NULL ,
BATCH_ID NUMBER DEFAULT NULL  NULL ,
CITY_ID NUMBER DEFAULT NULL  NULL ,
CREATED_BY NUMBER NOT NULL ,
CREATION_DATE DATE NOT NULL ,
DESCRIPTION CLOB NULL ,
END_DATE_ACTIVE DATE DEFAULT NULL  NULL ,
EW_LEVEL VARCHAR2(20 BYTE) DEFAULT NULL  NULL ,
EW_VALVE NUMBER(20,2) DEFAULT NULL  NULL ,
HOUSEHOLDS NUMBER DEFAULT NULL  NULL ,
INVOLVEMENT_DATE DATE DEFAULT NULL  NULL ,
INVOLVEMENT_HOUSEHOLDS NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER NOT NULL ,
PRODUCT_TYPE VARCHAR2(100 BYTE) DEFAULT NULL  NULL ,
PROGRESS_DEVIATION NUMBER(20,2) DEFAULT NULL  NULL ,
PROGRESS_RATIO NUMBER(20,2) DEFAULT NULL  NULL ,
PROJECT_ID NUMBER DEFAULT NULL  NULL ,
SECURITY_DAY NUMBER DEFAULT NULL  NULL ,
START_DATE_ACTIVE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
APPROVE_STATUS VARCHAR2(20 BYTE) DEFAULT NULL  NULL ,
PROJECT_STATUS VARCHAR2(20 BYTE) DEFAULT NULL  NULL ,
REMARK VARCHAR2(500 BYTE) DEFAULT NULL  NULL ,
PROCESS_INSTANCE_ID VARCHAR2(50 BYTE) DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN EW_HANDLE.APPROVE_STATUS IS '审批状态';
COMMENT ON COLUMN EW_HANDLE.PROJECT_STATUS IS '项目批次完工状态';
COMMENT ON COLUMN EW_HANDLE.REMARK IS '备注';
COMMENT ON COLUMN EW_HANDLE.PROCESS_INSTANCE_ID IS '流程ID';

-- ----------------------------
-- Table structure for MSG_CFG
-- ----------------------------
DROP TABLE MSG_CFG;
CREATE TABLE MSG_CFG (
MSG_CFG_ID NUMBER NOT NULL ,
ORG_ID NUMBER NOT NULL ,
CHANNEL_TYPE VARCHAR2(30 BYTE) NOT NULL ,
MSG_TYPE_CODE VARCHAR2(20 BYTE) NOT NULL ,
MSG_SOURCE_ID NUMBER NOT NULL ,
TEMPLE_ID NUMBER DEFAULT NULL  NULL ,
FUNCTION_ID NUMBER DEFAULT NULL  NULL ,
IS_TIMING_DELIVERY NUMBER DEFAULT NULL  NULL ,
NEED_BLACK_VALIDATE VARCHAR2(2 BYTE) DEFAULT '0'  NULL ,
DELIVERY_TIME VARCHAR2(5 BYTE) DEFAULT NULL  NULL ,
ENABLED_FLAG VARCHAR2(2 BYTE) NOT NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE NOT NULL ,
LAST_UPDATED_BY NUMBER NOT NULL ,
CREATION_DATE DATE NOT NULL ,
CREATED_BY NUMBER NOT NULL ,
IS_DELETE NUMBER NOT NULL ,
BLACKLIST_FLAG VARCHAR2(1 BYTE) DEFAULT NULL  NULL ,
AGENT_ID VARCHAR2(10 BYTE) DEFAULT NULL  NULL ,
COMPENSATE_FLAG VARCHAR2(1 BYTE) DEFAULT NULL  NULL ,
MSG_CFG_NAME VARCHAR2(255 BYTE) DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN MSG_CFG.MSG_CFG_ID IS '消息配置id';
COMMENT ON COLUMN MSG_CFG.ORG_ID IS 'ou';
COMMENT ON COLUMN MSG_CFG.CHANNEL_TYPE IS '渠道类型';
COMMENT ON COLUMN MSG_CFG.MSG_TYPE_CODE IS '消息类型code';
COMMENT ON COLUMN MSG_CFG.IS_TIMING_DELIVERY IS '定时发送频率,间隔多少分钟';
COMMENT ON COLUMN MSG_CFG.NEED_BLACK_VALIDATE IS '0,否 1，是';
COMMENT ON COLUMN MSG_CFG.DELIVERY_TIME IS '定时发送开始时间';
COMMENT ON COLUMN MSG_CFG.ENABLED_FLAG IS '启用状态:0.已停用 1.启用';
COMMENT ON COLUMN MSG_CFG.LAST_UPDATE_DATE IS '最后更新时间';
COMMENT ON COLUMN MSG_CFG.LAST_UPDATED_BY IS '最后更新用户id';
COMMENT ON COLUMN MSG_CFG.CREATION_DATE IS '创建时间';
COMMENT ON COLUMN MSG_CFG.CREATED_BY IS '创建用户id';
COMMENT ON COLUMN MSG_CFG.IS_DELETE IS '是否删除';
COMMENT ON COLUMN MSG_CFG.BLACKLIST_FLAG IS '黑名单';
COMMENT ON COLUMN MSG_CFG.COMPENSATE_FLAG IS '是否补偿';
COMMENT ON COLUMN MSG_CFG.MSG_CFG_NAME IS '消息配置名称';

-- ----------------------------
-- Table structure for MSG_HISTORY
-- ----------------------------
DROP TABLE MSG_HISTORY;
CREATE TABLE MSG_HISTORY (
MSG_HISTORY_ID NUMBER NOT NULL ,
ORG_ID NUMBER NOT NULL ,
JOB_ID VARCHAR2(96 BYTE) DEFAULT NULL  NULL ,
CHANNEL_TYPE VARCHAR2(30 BYTE) NOT NULL ,
MSG_TYPE_CODE VARCHAR2(20 BYTE) NOT NULL ,
MSG_CFG_ID NUMBER DEFAULT NULL  NULL ,
RECEIVE_ID VARCHAR2(64 BYTE) DEFAULT NULL  NULL ,
RECEIVE_CODE VARCHAR2(1024 BYTE) DEFAULT NULL  NULL ,
RECEIVE_NAME VARCHAR2(255 BYTE) DEFAULT NULL  NULL ,
SOURCE_TYPE VARCHAR2(50 BYTE) DEFAULT NULL  NULL ,
BIZ_TYPE VARCHAR2(64 BYTE) NOT NULL ,
BIZ_ID VARCHAR2(96 BYTE) NOT NULL ,
MSG_TRANSACTION_DATE DATE DEFAULT NULL  NULL ,
MSG_TEMPLATE_ID VARCHAR2(64 BYTE) DEFAULT NULL  NULL ,
VALUE_LIST VARCHAR2(1024 BYTE) DEFAULT NULL  NULL ,
MSG_SUBJECT VARCHAR2(200 BYTE) DEFAULT NULL  NULL ,
MSG_CONTENT CLOB NULL ,
MSG_PRIORITY NUMBER DEFAULT NULL  NULL ,
SEND_DATE DATE DEFAULT NULL  NULL ,
SEND_STATUS VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
FAILURE_TIMES NUMBER DEFAULT NULL  NULL ,
RETURN_MSG VARCHAR2(1024 BYTE) DEFAULT NULL  NULL ,
SYNCHRO CHAR(1 BYTE) DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
REQUEST_ID VARCHAR2(96 BYTE) DEFAULT NULL  NULL ,
IS_DELETE NUMBER DEFAULT NULL  NULL ,
MSG_URL VARCHAR2(255 BYTE) DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN MSG_HISTORY.MSG_HISTORY_ID IS '消息记录id';
COMMENT ON COLUMN MSG_HISTORY.ORG_ID IS 'ou';
COMMENT ON COLUMN MSG_HISTORY.CHANNEL_TYPE IS '渠道类型';
COMMENT ON COLUMN MSG_HISTORY.MSG_TYPE_CODE IS '1.邮件 2.短信 3.微信 4.站内信';
COMMENT ON COLUMN MSG_HISTORY.RECEIVE_CODE IS '接收对象';
COMMENT ON COLUMN MSG_HISTORY.SOURCE_TYPE IS '记录来源于哪个系统';
COMMENT ON COLUMN MSG_HISTORY.BIZ_TYPE IS '请求源功能id';
COMMENT ON COLUMN MSG_HISTORY.BIZ_ID IS '请求源记录的主键id';
COMMENT ON COLUMN MSG_HISTORY.MSG_TRANSACTION_DATE IS '消息请求时间';
COMMENT ON COLUMN MSG_HISTORY.MSG_SUBJECT IS '消息标题';
COMMENT ON COLUMN MSG_HISTORY.MSG_CONTENT IS '消息内容';
COMMENT ON COLUMN MSG_HISTORY.SEND_DATE IS '发送时间';
COMMENT ON COLUMN MSG_HISTORY.SEND_STATUS IS '发送状态：1.待发送，2.已发送成功   3.发送异常';
COMMENT ON COLUMN MSG_HISTORY.RETURN_MSG IS '返回消息';
COMMENT ON COLUMN MSG_HISTORY.SYNCHRO IS 'y  同步 n  异步';

-- ----------------------------
-- Table structure for MSG_INSTANCE
-- ----------------------------
DROP TABLE MSG_INSTANCE;
CREATE TABLE MSG_INSTANCE (
MSG_INSTANCE_ID NUMBER NOT NULL ,
ORG_ID NUMBER NOT NULL ,
JOB_ID VARCHAR2(96 BYTE) DEFAULT NULL  NULL ,
CHANNEL_TYPE VARCHAR2(30 BYTE) NOT NULL ,
MSG_TYPE_CODE VARCHAR2(20 BYTE) NOT NULL ,
MSG_CFG_ID NUMBER NOT NULL ,
RECEIVE_ID VARCHAR2(64 BYTE) DEFAULT NULL  NULL ,
RECEIVE_CODE VARCHAR2(1024 BYTE) DEFAULT NULL  NULL ,
RECEIVE_NAME VARCHAR2(255 BYTE) DEFAULT NULL  NULL ,
SOURCE_TYPE VARCHAR2(50 BYTE) DEFAULT NULL  NULL ,
BIZ_TYPE VARCHAR2(64 BYTE) NOT NULL ,
BIZ_ID VARCHAR2(96 BYTE) NOT NULL ,
MSG_TRANSACTION_DATE DATE DEFAULT NULL  NULL ,
MSG_TEMPLATE_ID VARCHAR2(64 BYTE) DEFAULT NULL  NULL ,
TEMPLATE_VALUE VARCHAR2(1000 BYTE) DEFAULT NULL  NULL ,
VALUE_LIST VARCHAR2(1024 BYTE) DEFAULT NULL  NULL ,
MSG_SUBJECT VARCHAR2(200 BYTE) DEFAULT NULL  NULL ,
MSG_CONTENT CLOB NULL ,
MSG_PRIORITY NUMBER DEFAULT NULL  NULL ,
SEND_DATE DATE DEFAULT NULL  NULL ,
SEND_STATUS VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
FAILURE_TIMES NUMBER DEFAULT NULL  NULL ,
RETURN_MSG VARCHAR2(1024 BYTE) DEFAULT NULL  NULL ,
SYNCHRO CHAR(1 BYTE) DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
REQUEST_ID VARCHAR2(96 BYTE) DEFAULT NULL  NULL ,
IS_DELETE NUMBER DEFAULT NULL  NULL ,
MSG_URL VARCHAR2(255 BYTE) DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN MSG_INSTANCE.MSG_INSTANCE_ID IS '消息记录id';
COMMENT ON COLUMN MSG_INSTANCE.ORG_ID IS 'ou';
COMMENT ON COLUMN MSG_INSTANCE.CHANNEL_TYPE IS '渠道类型';
COMMENT ON COLUMN MSG_INSTANCE.MSG_TYPE_CODE IS '1.邮件 2.短信 3.微信 4.站内信';
COMMENT ON COLUMN MSG_INSTANCE.RECEIVE_CODE IS '接收对象';
COMMENT ON COLUMN MSG_INSTANCE.SOURCE_TYPE IS '记录来源于哪个系统';
COMMENT ON COLUMN MSG_INSTANCE.BIZ_TYPE IS '请求源功能id';
COMMENT ON COLUMN MSG_INSTANCE.BIZ_ID IS '请求源记录的主键id';
COMMENT ON COLUMN MSG_INSTANCE.MSG_TRANSACTION_DATE IS '消息请求时间';
COMMENT ON COLUMN MSG_INSTANCE.TEMPLATE_VALUE IS '模板参数值';
COMMENT ON COLUMN MSG_INSTANCE.MSG_SUBJECT IS '消息标题';
COMMENT ON COLUMN MSG_INSTANCE.MSG_CONTENT IS '消息内容';
COMMENT ON COLUMN MSG_INSTANCE.SEND_DATE IS '发送时间';
COMMENT ON COLUMN MSG_INSTANCE.SEND_STATUS IS '发送状态：1.待发送，2.已发送成功   3.发送异常';
COMMENT ON COLUMN MSG_INSTANCE.RETURN_MSG IS '返回消息';
COMMENT ON COLUMN MSG_INSTANCE.SYNCHRO IS 'y  同步 n  异步';

-- ----------------------------
-- Table structure for MSG_LOG
-- ----------------------------
DROP TABLE MSG_LOG;
CREATE TABLE MSG_LOG (
LOG_ID NUMBER NOT NULL ,
REQUEST_PARAM VARCHAR2(2048 BYTE) DEFAULT NULL  NULL ,
RETURN_DATA VARCHAR2(1024 BYTE) DEFAULT NULL  NULL ,
JOB_ID VARCHAR2(96 BYTE) DEFAULT NULL  NULL ,
ORG_ID NUMBER DEFAULT NULL  NULL ,
USER_NAME VARCHAR2(96 BYTE) DEFAULT NULL  NULL ,
REQUEST_ID VARCHAR2(96 BYTE) DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE NOT NULL ,
LAST_UPDATED_BY NUMBER NOT NULL ,
CREATION_DATE DATE NOT NULL ,
CREATED_BY NUMBER NOT NULL ,
USER_ID NUMBER DEFAULT NULL  NULL ,
IS_DELETE NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN MSG_LOG.LOG_ID IS '消息配置id';
COMMENT ON COLUMN MSG_LOG.LAST_UPDATE_DATE IS '最后更新时间';
COMMENT ON COLUMN MSG_LOG.LAST_UPDATED_BY IS '最后更新用户id';
COMMENT ON COLUMN MSG_LOG.CREATION_DATE IS '创建时间';
COMMENT ON COLUMN MSG_LOG.CREATED_BY IS '创建用户id';

-- ----------------------------
-- Table structure for MSG_RECEIVE_SQL
-- ----------------------------
DROP TABLE MSG_RECEIVE_SQL;
CREATE TABLE MSG_RECEIVE_SQL (
SQL_ID NUMBER NOT NULL ,
SQL_SENTENCE VARCHAR2(2048 BYTE) DEFAULT NULL  NULL ,
PARAM VARCHAR2(512 BYTE) DEFAULT NULL  NULL ,
REMARK VARCHAR2(256 BYTE) DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE NOT NULL ,
LAST_UPDATED_BY NUMBER NOT NULL ,
CREATION_DATE DATE NOT NULL ,
CREATED_BY NUMBER NOT NULL ,
VERSION_NUM NUMBER NOT NULL ,
IS_DELETE NUMBER DEFAULT NULL  NULL ,
SQL_NAME VARCHAR2(100 BYTE) DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN MSG_RECEIVE_SQL.SQL_ID IS '消息配置id';
COMMENT ON COLUMN MSG_RECEIVE_SQL.LAST_UPDATE_DATE IS '最后更新时间';
COMMENT ON COLUMN MSG_RECEIVE_SQL.LAST_UPDATED_BY IS '最后更新用户id';
COMMENT ON COLUMN MSG_RECEIVE_SQL.CREATION_DATE IS '创建时间';
COMMENT ON COLUMN MSG_RECEIVE_SQL.CREATED_BY IS '创建用户id';
COMMENT ON COLUMN MSG_RECEIVE_SQL.SQL_NAME IS 'SQL名称';

-- ----------------------------
-- Table structure for MSG_SOURCE_CFG
-- ----------------------------
DROP TABLE MSG_SOURCE_CFG;
CREATE TABLE MSG_SOURCE_CFG (
MSG_SOURCE_ID NUMBER NOT NULL ,
ORG_ID NUMBER NOT NULL ,
MSG_TYPE_CODE VARCHAR2(20 BYTE) NOT NULL ,
PARAM_CFG VARCHAR2(4000 BYTE) DEFAULT NULL  NULL ,
SOURCE_USER VARCHAR2(255 BYTE) DEFAULT NULL  NULL ,
SOURCE_PWD VARCHAR2(255 BYTE) DEFAULT NULL  NULL ,
SOURCE_NAME VARCHAR2(40 BYTE) NOT NULL ,
SOURCE_DESC VARCHAR2(100 BYTE) DEFAULT NULL  NULL ,
ENABLED_FLAG VARCHAR2(2 BYTE) NOT NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE NOT NULL ,
LAST_UPDATED_BY NUMBER NOT NULL ,
CREATION_DATE DATE NOT NULL ,
CREATED_BY NUMBER NOT NULL ,
IS_DELETE NUMBER NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN MSG_SOURCE_CFG.MSG_SOURCE_ID IS '消息配置id';
COMMENT ON COLUMN MSG_SOURCE_CFG.ORG_ID IS 'ou';
COMMENT ON COLUMN MSG_SOURCE_CFG.MSG_TYPE_CODE IS '消息类型code';
COMMENT ON COLUMN MSG_SOURCE_CFG.PARAM_CFG IS '接口配置参数';
COMMENT ON COLUMN MSG_SOURCE_CFG.SOURCE_USER IS '接口用户名';
COMMENT ON COLUMN MSG_SOURCE_CFG.SOURCE_PWD IS '接口密码,des加密存放';
COMMENT ON COLUMN MSG_SOURCE_CFG.SOURCE_NAME IS '消息接口名称';
COMMENT ON COLUMN MSG_SOURCE_CFG.SOURCE_DESC IS '接口描述';
COMMENT ON COLUMN MSG_SOURCE_CFG.ENABLED_FLAG IS '启用状态:0.已停用 1.启用';
COMMENT ON COLUMN MSG_SOURCE_CFG.LAST_UPDATE_DATE IS '最后更新时间';
COMMENT ON COLUMN MSG_SOURCE_CFG.LAST_UPDATED_BY IS '最后更新用户id';
COMMENT ON COLUMN MSG_SOURCE_CFG.CREATION_DATE IS '创建时间';
COMMENT ON COLUMN MSG_SOURCE_CFG.CREATED_BY IS '创建用户id';
COMMENT ON COLUMN MSG_SOURCE_CFG.IS_DELETE IS '是否已删除';

-- ----------------------------
-- Table structure for MSG_TD
-- ----------------------------
DROP TABLE MSG_TD;
CREATE TABLE MSG_TD (
TD_ID NUMBER NOT NULL ,
PHONE VARCHAR2(36 BYTE) NULL ,
SEND_TIME DATE DEFAULT NULL  NULL ,
PASS VARCHAR2(36 BYTE) NULL ,
CONTENT VARCHAR2(500 BYTE) NULL ,
ORG_ID NUMBER DEFAULT NULL  NULL ,
REMARK VARCHAR2(36 BYTE) NULL ,
LAST_UPDATE_DATE DATE NOT NULL ,
LAST_UPDATED_BY NUMBER NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE NOT NULL ,
CREATED_BY NUMBER NOT NULL ,
VERSION_NUM NUMBER NOT NULL ,
MSG_SOURCE_ID NUMBER DEFAULT NULL  NULL ,
IS_DELETE NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN MSG_TD.TD_ID IS '消息配置id';
COMMENT ON COLUMN MSG_TD.LAST_UPDATE_DATE IS '最后更新时间';
COMMENT ON COLUMN MSG_TD.LAST_UPDATED_BY IS '最后更新用户id';
COMMENT ON COLUMN MSG_TD.CREATION_DATE IS '创建时间';
COMMENT ON COLUMN MSG_TD.CREATED_BY IS '创建用户id';
COMMENT ON COLUMN MSG_TD.IS_DELETE IS '是否删除';

-- ----------------------------
-- Table structure for MSG_TEMPLE_CFG
-- ----------------------------
DROP TABLE MSG_TEMPLE_CFG;
CREATE TABLE MSG_TEMPLE_CFG (
TEMPLE_ID NUMBER NOT NULL ,
TEMPLE_NAME VARCHAR2(50 BYTE) DEFAULT NULL  NULL ,
TEMPLE_CONTENT CLOB NOT NULL ,
PROVIDER_SIGN_NAME VARCHAR2(100 BYTE) DEFAULT NULL  NULL ,
PROVIDER_TEMPLATE_CODE VARCHAR2(100 BYTE) DEFAULT NULL  NULL ,
IS_HTML NUMBER DEFAULT NULL  NULL ,
ORG_ID NUMBER DEFAULT NULL  NULL ,
MSG_TYPE VARCHAR2(20 BYTE) DEFAULT NULL  NULL ,
CHANNEL VARCHAR2(20 BYTE) DEFAULT NULL  NULL ,
COMPANY_TYPE VARCHAR2(10 BYTE) DEFAULT NULL  NULL ,
BUSINESS VARCHAR2(20 BYTE) DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER NOT NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE NOT NULL ,
CREATED_BY NUMBER NOT NULL ,
TEMPLE_SUBJECT VARCHAR2(255 BYTE) DEFAULT NULL  NULL ,
IS_DELETE NUMBER NOT NULL ,
MSG_URL VARCHAR2(255 BYTE) DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN MSG_TEMPLE_CFG.TEMPLE_ID IS '消息配置id';
COMMENT ON COLUMN MSG_TEMPLE_CFG.TEMPLE_CONTENT IS '最后更新时间';
COMMENT ON COLUMN MSG_TEMPLE_CFG.PROVIDER_SIGN_NAME IS '供应商短信签名';
COMMENT ON COLUMN MSG_TEMPLE_CFG.PROVIDER_TEMPLATE_CODE IS '供应商的模板编码';
COMMENT ON COLUMN MSG_TEMPLE_CFG.MSG_TYPE IS 'ou';
COMMENT ON COLUMN MSG_TEMPLE_CFG.COMPANY_TYPE IS '公司类型，用于微信接口对接微信公众号';
COMMENT ON COLUMN MSG_TEMPLE_CFG.LAST_UPDATED_BY IS '最后更新用户id';
COMMENT ON COLUMN MSG_TEMPLE_CFG.CREATION_DATE IS '创建时间';
COMMENT ON COLUMN MSG_TEMPLE_CFG.CREATED_BY IS '创建用户id';
COMMENT ON COLUMN MSG_TEMPLE_CFG.TEMPLE_SUBJECT IS '主题';
COMMENT ON COLUMN MSG_TEMPLE_CFG.IS_DELETE IS '是否删除';
COMMENT ON COLUMN MSG_TEMPLE_CFG.MSG_URL IS '消息URL';

-- ----------------------------
-- Table structure for MSG_USER
-- ----------------------------
DROP TABLE MSG_USER;
CREATE TABLE MSG_USER (
MSG_USER_ID NUMBER NOT NULL ,
ORG_ID NUMBER DEFAULT NULL  NULL ,
MSG_USER_NAME VARCHAR2(96 BYTE) DEFAULT NULL  NULL ,
MSG_USER_PWD VARCHAR2(128 BYTE) DEFAULT NULL  NULL ,
NO_LOG VARCHAR2(2 BYTE) DEFAULT '1'  NULL ,
REMARK VARCHAR2(255 BYTE) DEFAULT NULL  NULL ,
ENABLED_FLAG VARCHAR2(2 BYTE) NOT NULL ,
LAST_UPDATE_DATE DATE NOT NULL ,
LAST_UPDATED_BY NUMBER NOT NULL ,
CREATION_DATE DATE NOT NULL ,
CREATED_BY NUMBER NOT NULL ,
VERSION_NUM NUMBER NOT NULL ,
IS_DELETE NUMBER NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN MSG_USER.MSG_USER_ID IS '消息配置id';
COMMENT ON COLUMN MSG_USER.MSG_USER_NAME IS '消息服务用户名';
COMMENT ON COLUMN MSG_USER.MSG_USER_PWD IS '消息服务用户密码,不可逆加密存放';
COMMENT ON COLUMN MSG_USER.NO_LOG IS '0 不需要日志 1需要日志';
COMMENT ON COLUMN MSG_USER.ENABLED_FLAG IS '启用状态:0.已停用 1.启用';
COMMENT ON COLUMN MSG_USER.LAST_UPDATE_DATE IS '最后更新时间';
COMMENT ON COLUMN MSG_USER.LAST_UPDATED_BY IS '最后更新用户id';
COMMENT ON COLUMN MSG_USER.CREATION_DATE IS '创建时间';
COMMENT ON COLUMN MSG_USER.CREATED_BY IS '创建用户id';
COMMENT ON COLUMN MSG_USER.IS_DELETE IS '是否删除';

-- ----------------------------
-- Table structure for PAGE_MODEL_GROUP_DETAIL
-- ----------------------------
DROP TABLE PAGE_MODEL_GROUP_DETAIL;
CREATE TABLE PAGE_MODEL_GROUP_DETAIL (
GROUP_DET_ID NUMBER NOT NULL ,
GROUP_CODE VARCHAR2(100 BYTE) NULL ,
GROUP_DET_DIM_CODE VARCHAR2(30 BYTE) NULL ,
GROUP_DET_DIM_TYPE VARCHAR2(30 BYTE) NULL ,
GROUP_DET_DIM_ACTION_VIEW_TYPE VARCHAR2(30 BYTE) NULL ,
GROUP_DET_DIM_NAME_EN VARCHAR2(100 BYTE) NULL ,
GROUP_DET_DIM_NAME_CN VARCHAR2(100 BYTE) NULL ,
GROUP_DET_DIM_OPT_CODE VARCHAR2(20 BYTE) NULL ,
GROUP_DET_DIM_OPT_NAME VARCHAR2(30 BYTE) NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE NOT NULL ,
CREATED_BY NUMBER DEFAULT 0  NOT NULL ,
LAST_UPDATED_BY NUMBER DEFAULT 0  NOT NULL ,
LAST_UPDATE_DATE DATE NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for PAGE_MODEL_GROUP_INFO
-- ----------------------------
DROP TABLE PAGE_MODEL_GROUP_INFO;
CREATE TABLE PAGE_MODEL_GROUP_INFO (
GROUP_ID NUMBER NOT NULL ,
GROUP_CODE VARCHAR2(100 BYTE) NULL ,
MODEL_CODE VARCHAR2(100 BYTE) NULL ,
GROUP_NAME_EN VARCHAR2(100 BYTE) NULL ,
GROUP_NAME_CN VARCHAR2(100 BYTE) NULL ,
GROUP_LEVEL NUMBER DEFAULT 0  NULL ,
GROUP_PARENT_CODE VARCHAR2(100 BYTE) NULL ,
GROUP_NAME_VIEW_FLAG VARCHAR2(10 BYTE) NULL ,
GROUP_NAME_VIEW_TYPE VARCHAR2(45 BYTE) NULL ,
GROUP_ORDER NUMBER DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE NOT NULL ,
CREATED_BY NUMBER DEFAULT 0  NOT NULL ,
LAST_UPDATED_BY NUMBER DEFAULT 0  NOT NULL ,
LAST_UPDATE_DATE DATE NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN PAGE_MODEL_GROUP_INFO.GROUP_LEVEL IS '层次';

-- ----------------------------
-- Table structure for PAGE_MODEL_INFO
-- ----------------------------
DROP TABLE PAGE_MODEL_INFO;
CREATE TABLE PAGE_MODEL_INFO (
MODEL_ID NUMBER NOT NULL ,
RULE_BUSINESS_LINE_CODE VARCHAR2(100 BYTE) NULL ,
MODEL_CODE VARCHAR2(100 BYTE) NULL ,
MODEL_NAME VARCHAR2(100 BYTE) NULL ,
MODEL_DESC VARCHAR2(400 BYTE) NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE NOT NULL ,
CREATED_BY NUMBER DEFAULT 0  NOT NULL ,
LAST_UPDATED_BY NUMBER DEFAULT 0  NOT NULL ,
LAST_UPDATE_DATE DATE NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for PER_ALL_ASSIGNMENTS_F
-- ----------------------------
DROP TABLE PER_ALL_ASSIGNMENTS_F;
CREATE TABLE PER_ALL_ASSIGNMENTS_F (
ASSIGNMENT_ID NUMBER NOT NULL ,
APPLICANT_RANK NUMBER DEFAULT NULL  NULL ,
APPLICATION_ID NUMBER DEFAULT NULL  NULL ,
ASS_ATTRIBUTE1 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ASS_ATTRIBUTE10 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ASS_ATTRIBUTE11 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ASS_ATTRIBUTE12 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ASS_ATTRIBUTE13 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ASS_ATTRIBUTE14 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ASS_ATTRIBUTE15 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ASS_ATTRIBUTE16 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ASS_ATTRIBUTE17 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ASS_ATTRIBUTE18 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ASS_ATTRIBUTE19 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ASS_ATTRIBUTE2 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ASS_ATTRIBUTE20 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ASS_ATTRIBUTE21 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ASS_ATTRIBUTE22 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ASS_ATTRIBUTE23 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ASS_ATTRIBUTE24 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ASS_ATTRIBUTE25 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ASS_ATTRIBUTE26 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ASS_ATTRIBUTE27 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ASS_ATTRIBUTE28 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ASS_ATTRIBUTE29 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ASS_ATTRIBUTE3 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ASS_ATTRIBUTE30 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ASS_ATTRIBUTE4 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ASS_ATTRIBUTE5 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ASS_ATTRIBUTE6 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ASS_ATTRIBUTE7 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ASS_ATTRIBUTE8 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ASS_ATTRIBUTE9 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ASS_ATTRIBUTE_CATEGORY VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
ASSIGNMENT_CATEGORY VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
ASSIGNMENT_INT VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
ASSIGNMENT_SEQUENCE NUMBER NOT NULL ,
ASSIGNMENT_STATUS_TYPE_ID NUMBER NOT NULL ,
ASSIGNMENT_TYPE VARCHAR2(1 BYTE) NOT NULL ,
BARGAINING_UNIT_CODE VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
BUSINESS_GROUP_ID NUMBER NOT NULL ,
CAGR_GRADE_DEF_ID NUMBER DEFAULT NULL  NULL ,
CAGR_ID_FLEX_NUM NUMBER DEFAULT NULL  NULL ,
CHANGE_REASON VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
COLLECTIVE_AGREEMENT_ID NUMBER DEFAULT NULL  NULL ,
COMMENT_ID NUMBER DEFAULT NULL  NULL ,
CONTRACT_ID NUMBER DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATETIME DATE DEFAULT NULL  NULL ,
DATETIME_PROBATION_END DATE DEFAULT NULL  NULL ,
DEFAULT_CODE_COMB_ID NUMBER DEFAULT NULL  NULL ,
EFFECTIVE_END_DATETIME DATE NOT NULL ,
EFFECTIVE_START_DATETIME DATE NOT NULL ,
EMPLOYEE_CATEGORY VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
EMPLOYMENT_CATEGORY VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
ESTABLISHMENT_ID NUMBER DEFAULT NULL  NULL ,
FREQUENCY VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
GRADE_ID NUMBER DEFAULT NULL  NULL ,
GRADE_LADDER_PGM_ID NUMBER DEFAULT NULL  NULL ,
HOURLY_SALARIED_CODE VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
INTERNAL_ADDRESS_LINE VARCHAR2(80 BYTE) DEFAULT NULL  NULL ,
JOB_ID NUMBER DEFAULT NULL  NULL ,
JOB_POST_SOURCE_NAME VARCHAR2(240 BYTE) DEFAULT NULL  NULL ,
LABOUR_UNION_MEMBER_FLAG VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
LAST_UPDATETIME_DATETIME DATE DEFAULT NULL  NULL ,
LAST_UPDATETIME_LOGIN NUMBER DEFAULT NULL  NULL ,
LAST_UPDATETIMED_BY NUMBER DEFAULT NULL  NULL ,
LOCATION_ID NUMBER DEFAULT NULL  NULL ,
MANAGER_FLAG VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
NORMAL_HOURS NUMBER(22,3) DEFAULT NULL  NULL ,
NOTICE_PERIOD NUMBER DEFAULT NULL  NULL ,
NOTICE_PERIOD_UOM VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
OBJECT_VERSION_INT NUMBER DEFAULT NULL  NULL ,
ORGANIZATION_ID NUMBER NOT NULL ,
PAY_BASIS_ID NUMBER DEFAULT NULL  NULL ,
PAYROLL_ID NUMBER DEFAULT NULL  NULL ,
PEOPLE_GROUP_ID NUMBER DEFAULT NULL  NULL ,
PERF_REVIEW_PERIOD NUMBER DEFAULT NULL  NULL ,
PERF_REVIEW_PERIOD_FREQUENCY VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
PERIOD_OF_PLACEMENT_DATETIME_S DATE DEFAULT NULL  NULL ,
PERIOD_OF_SERVICE_ID NUMBER DEFAULT NULL  NULL ,
PERSON_ID NUMBER NOT NULL ,
PERSON_REFERRED_BY_ID NUMBER DEFAULT NULL  NULL ,
PO_HEADER_ID NUMBER DEFAULT NULL  NULL ,
PO_LINE_ID NUMBER DEFAULT NULL  NULL ,
POSITION_ID NUMBER DEFAULT NULL  NULL ,
POSTING_CONTENT_ID NUMBER DEFAULT NULL  NULL ,
PRIMARY_FLAG VARCHAR2(30 BYTE) NOT NULL ,
PROBATION_PERIOD NUMBER(22,2) DEFAULT NULL  NULL ,
PROBATION_UNIT VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
PROGRAM_APPLICATION_ID NUMBER DEFAULT NULL  NULL ,
PROGRAM_ID NUMBER DEFAULT NULL  NULL ,
PROGRAM_UPDATETIME_DATETIME DATE DEFAULT NULL  NULL ,
PROJECT_TITLE VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
PROJECTED_ASSIGNMENT_END DATE DEFAULT NULL  NULL ,
RECRUITER_ID NUMBER DEFAULT NULL  NULL ,
RECRUITMENT_ACTIVITY_ID NUMBER DEFAULT NULL  NULL ,
REQUEST_ID NUMBER DEFAULT NULL  NULL ,
SAL_REVIEW_PERIOD NUMBER DEFAULT NULL  NULL ,
SAL_REVIEW_PERIOD_FREQUENCY VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
SET_OF_BOOKS_ID NUMBER DEFAULT NULL  NULL ,
SOFT_CODING_KEYFLEX_ID NUMBER DEFAULT NULL  NULL ,
SOURCE_ORGANIZATION_ID NUMBER DEFAULT NULL  NULL ,
SOURCE_TYPE VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
SPECIAL_CEILING_STEP_ID NUMBER DEFAULT NULL  NULL ,
SUPERVISOR_ASSIGNMENT_ID NUMBER DEFAULT NULL  NULL ,
SUPERVISOR_ID NUMBER DEFAULT NULL  NULL ,
TIME_NORMAL_FINISH VARCHAR2(5 BYTE) DEFAULT NULL  NULL ,
TIME_NORMAL_START VARCHAR2(5 BYTE) DEFAULT NULL  NULL ,
TITLE VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
VACANCY_ID NUMBER DEFAULT NULL  NULL ,
VENDOR_ASSIGNMENT_INT VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
VENDOR_EMPLOYEE_INT VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
VENDOR_ID NUMBER DEFAULT NULL  NULL ,
VENDOR_SITE_ID NUMBER DEFAULT NULL  NULL ,
WORK_AT_HOME VARCHAR2(30 BYTE) DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for PER_ALL_PEOPLE_F
-- ----------------------------
DROP TABLE PER_ALL_PEOPLE_F;
CREATE TABLE PER_ALL_PEOPLE_F (
PERSON_ID NUMBER NOT NULL ,
APPLICANT_INT VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE1 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE10 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE11 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE12 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE13 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE14 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE15 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE16 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE17 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE18 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE19 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE2 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE20 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE21 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE22 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE23 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE24 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE25 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE26 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE27 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE28 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE29 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE3 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE30 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE4 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE5 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE6 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE7 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE8 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE9 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
ATTRIBUTE_CATEGORY VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
BACKGROUND_CHECK_STATUS VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
BACKGROUND_DATETIME_CHECK DATE DEFAULT NULL  NULL ,
BENEFIT_GROUP_ID NUMBER DEFAULT NULL  NULL ,
BLOOD_TYPE VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
BUSINESS_GROUP_ID NUMBER NOT NULL ,
COMMENT_ID NUMBER DEFAULT NULL  NULL ,
COORD_BEN_MED_CVG_END_DT DATE DEFAULT NULL  NULL ,
COORD_BEN_MED_CVG_STRT_DT DATE DEFAULT NULL  NULL ,
COORD_BEN_MED_EXT_ER VARCHAR2(80 BYTE) DEFAULT NULL  NULL ,
COORD_BEN_MED_INSR_CRR_IDENT VARCHAR2(80 BYTE) DEFAULT NULL  NULL ,
COORD_BEN_MED_INSR_CRR_NAME VARCHAR2(80 BYTE) DEFAULT NULL  NULL ,
COORD_BEN_MED_PL_NAME VARCHAR2(80 BYTE) DEFAULT NULL  NULL ,
COORD_BEN_MED_PLN_NO VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
COORD_BEN_NO_CVG_FLAG VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
CORRESPONDENCE_LANGUAGE VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
COUNTRY_OF_BIRTH VARCHAR2(90 BYTE) DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
CREATION_DATETIME DATE DEFAULT NULL  NULL ,
CURRENT_APPLICANT_FLAG VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
CURRENT_EMP_OR_APL_FLAG VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
CURRENT_EMPLOYEE_FLAG VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
CURRENT_NPW_FLAG VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
DATETIME_EMPLOYEE_DATA_VERIFIE DATE DEFAULT NULL  NULL ,
DATETIME_OF_BIRTH DATE DEFAULT NULL  NULL ,
DATETIME_OF_DEATH DATE DEFAULT NULL  NULL ,
DPDNT_ADOPTION_DATETIME DATE DEFAULT NULL  NULL ,
DPDNT_VLNTRY_SVCE_FLAG VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
EFFECTIVE_END_DATETIME DATE NOT NULL ,
EFFECTIVE_START_DATETIME DATE NOT NULL ,
EMAIL_ADDRESS VARCHAR2(240 BYTE) DEFAULT NULL  NULL ,
EMPLOYEE_INT VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
EXPENSE_CHECK_SEND_TO_ADDRESS VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
FAST_PATH_EMPLOYEE VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
FIRST_NAME VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
FTE_CAPACITY NUMBER(5,2) DEFAULT NULL  NULL ,
FULL_NAME VARCHAR2(240 BYTE) DEFAULT NULL  NULL ,
GLOBAL_NAME VARCHAR2(240 BYTE) DEFAULT NULL  NULL ,
GLOBAL_PERSON_ID VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
HOLD_APPLICANT_DATETIME_UNTIL DATE DEFAULT NULL  NULL ,
HONORS VARCHAR2(45 BYTE) DEFAULT NULL  NULL ,
INTERNAL_LOCATION VARCHAR2(45 BYTE) DEFAULT NULL  NULL ,
KNOWN_AS VARCHAR2(80 BYTE) DEFAULT NULL  NULL ,
LAST_MEDICAL_TEST_BY VARCHAR2(60 BYTE) DEFAULT NULL  NULL ,
LAST_MEDICAL_TEST_DATETIME DATE DEFAULT NULL  NULL ,
LAST_NAME VARCHAR2(150 BYTE) NOT NULL ,
LAST_UPDATETIME_DATETIME DATE DEFAULT NULL  NULL ,
LAST_UPDATETIME_LOGIN NUMBER DEFAULT NULL  NULL ,
LAST_UPDATETIMED_BY NUMBER DEFAULT NULL  NULL ,
LOCAL_NAME VARCHAR2(240 BYTE) DEFAULT NULL  NULL ,
MAILSTOP VARCHAR2(45 BYTE) DEFAULT NULL  NULL ,
MARITAL_STATUS VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
MIDDLE_NAMES VARCHAR2(60 BYTE) DEFAULT NULL  NULL ,
NATIONAL_IDENTIFIER VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
NATIONALITY VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
NPW_INT VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
OBJECT_VERSION_INT NUMBER DEFAULT NULL  NULL ,
OFFICE_INT VARCHAR2(45 BYTE) DEFAULT NULL  NULL ,
ON_MILITARY_SERVICE VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
ORDER_NAME VARCHAR2(240 BYTE) DEFAULT NULL  NULL ,
ORIGINAL_DATETIME_OF_HIRE DATE DEFAULT NULL  NULL ,
PARTY_ID NUMBER DEFAULT NULL  NULL ,
PER_INFORMATION1 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
PER_INFORMATION10 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
PER_INFORMATION11 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
PER_INFORMATION12 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
PER_INFORMATION13 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
PER_INFORMATION14 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
PER_INFORMATION15 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
PER_INFORMATION16 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
PER_INFORMATION17 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
PER_INFORMATION18 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
PER_INFORMATION19 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
PER_INFORMATION2 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
PER_INFORMATION20 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
PER_INFORMATION21 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
PER_INFORMATION22 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
PER_INFORMATION23 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
PER_INFORMATION24 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
PER_INFORMATION25 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
PER_INFORMATION26 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
PER_INFORMATION27 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
PER_INFORMATION28 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
PER_INFORMATION29 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
PER_INFORMATION3 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
PER_INFORMATION30 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
PER_INFORMATION4 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
PER_INFORMATION5 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
PER_INFORMATION6 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
PER_INFORMATION7 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
PER_INFORMATION8 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
PER_INFORMATION9 VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
PER_INFORMATION_CATEGORY VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
PERSON_TYPE_ID NUMBER NOT NULL ,
PRE_NAME_ADJUNCT VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
PREVIOUS_LAST_NAME VARCHAR2(150 BYTE) DEFAULT NULL  NULL ,
PROGRAM_APPLICATION_ID NUMBER DEFAULT NULL  NULL ,
PROGRAM_ID NUMBER DEFAULT NULL  NULL ,
PROGRAM_UPDATETIME_DATETIME DATE DEFAULT NULL  NULL ,
PROJECTED_START_DATETIME DATE DEFAULT NULL  NULL ,
RECEIPT_OF_DEATH_CERT_DATETIME DATE DEFAULT NULL  NULL ,
REGION_OF_BIRTH VARCHAR2(90 BYTE) DEFAULT NULL  NULL ,
REGISTERED_DISABLED_FLAG VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
REHIRE_AUTHORIZOR VARCHAR2(60 BYTE) DEFAULT NULL  NULL ,
REHIRE_REASON VARCHAR2(60 BYTE) DEFAULT NULL  NULL ,
REHIRE_RECOMMENDATION VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
REQUEST_ID NUMBER DEFAULT NULL  NULL ,
RESUME_EXISTS VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
RESUME_LAST_UPDATETIMED DATE DEFAULT NULL  NULL ,
SECOND_PASSPORT_EXISTS VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
SEX VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
START_DATETIME DATE NOT NULL ,
STUDENT_STATUS VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
SUFFIX VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
TITLE VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
TOWN_OF_BIRTH VARCHAR2(90 BYTE) DEFAULT NULL  NULL ,
USES_TOBACCO_FLAG VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
VENDOR_ID NUMBER DEFAULT NULL  NULL ,
WORK_SCHEDULE VARCHAR2(30 BYTE) DEFAULT NULL  NULL ,
WORK_TELEPHONE VARCHAR2(60 BYTE) DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for PUB_USERS_ORGANIZATION
-- ----------------------------
DROP TABLE PUB_USERS_ORGANIZATION;
CREATE TABLE PUB_USERS_ORGANIZATION (
USER_ORG_ID NUMBER NOT NULL ,
ORG_ID NUMBER DEFAULT NULL  NULL ,
USER_ID NUMBER DEFAULT NULL  NULL ,
START_DATE DATE DEFAULT NULL  NULL ,
END_DATE DATE DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN PUB_USERS_ORGANIZATION.USER_ORG_ID IS '主键Id';
COMMENT ON COLUMN PUB_USERS_ORGANIZATION.USER_ID IS '用户ID';
COMMENT ON COLUMN PUB_USERS_ORGANIZATION.START_DATE IS '生效日期';
COMMENT ON COLUMN PUB_USERS_ORGANIZATION.END_DATE IS '失效日期';
COMMENT ON COLUMN PUB_USERS_ORGANIZATION.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN PUB_USERS_ORGANIZATION.CREATED_BY IS '创建人';
COMMENT ON COLUMN PUB_USERS_ORGANIZATION.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN PUB_USERS_ORGANIZATION.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN PUB_USERS_ORGANIZATION.VERSION_NUM IS '版本号';

-- ----------------------------
-- Table structure for QRTZ_BLOB_TRIGGERS
-- ----------------------------
DROP TABLE QRTZ_BLOB_TRIGGERS;
CREATE TABLE QRTZ_BLOB_TRIGGERS (
SCHED_NAME VARCHAR2(120 BYTE) NOT NULL ,
TRIGGER_NAME VARCHAR2(200 BYTE) NOT NULL ,
TRIGGER_GROUP VARCHAR2(200 BYTE) NOT NULL ,
BLOB_DATA BLOB NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for QRTZ_CALENDARS
-- ----------------------------
DROP TABLE QRTZ_CALENDARS;
CREATE TABLE QRTZ_CALENDARS (
SCHED_NAME VARCHAR2(120 BYTE) NOT NULL ,
CALENDAR_NAME VARCHAR2(200 BYTE) NOT NULL ,
CALENDAR BLOB NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for QRTZ_CRON_TRIGGERS
-- ----------------------------
DROP TABLE QRTZ_CRON_TRIGGERS;
CREATE TABLE QRTZ_CRON_TRIGGERS (
SCHED_NAME VARCHAR2(120 BYTE) NOT NULL ,
TRIGGER_NAME VARCHAR2(200 BYTE) NOT NULL ,
TRIGGER_GROUP VARCHAR2(200 BYTE) NOT NULL ,
CRON_EXPRESSION VARCHAR2(120 BYTE) NULL ,
TIME_ZONE_ID VARCHAR2(80 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for QRTZ_FIRED_TRIGGERS
-- ----------------------------
DROP TABLE QRTZ_FIRED_TRIGGERS;
CREATE TABLE QRTZ_FIRED_TRIGGERS (
SCHED_NAME VARCHAR2(120 BYTE) NOT NULL ,
ENTRY_ID VARCHAR2(95 BYTE) NOT NULL ,
TRIGGER_NAME VARCHAR2(200 BYTE) NULL ,
TRIGGER_GROUP VARCHAR2(200 BYTE) NULL ,
INSTANCE_NAME VARCHAR2(200 BYTE) NULL ,
FIRED_TIME NUMBER NOT NULL ,
SCHED_TIME NUMBER NOT NULL ,
PRIORITY NUMBER NOT NULL ,
STATE VARCHAR2(16 BYTE) NULL ,
JOB_NAME VARCHAR2(200 BYTE) NULL ,
JOB_GROUP VARCHAR2(200 BYTE) NULL ,
IS_NONCONCURRENT VARCHAR2(1 BYTE) NULL ,
REQUESTS_RECOVERY VARCHAR2(1 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for QRTZ_JOB_DETAILS
-- ----------------------------
DROP TABLE QRTZ_JOB_DETAILS;
CREATE TABLE QRTZ_JOB_DETAILS (
SCHED_NAME VARCHAR2(120 BYTE) NOT NULL ,
JOB_NAME VARCHAR2(200 BYTE) NOT NULL ,
JOB_GROUP VARCHAR2(200 BYTE) NOT NULL ,
DESCRIPTION VARCHAR2(250 BYTE) NULL ,
JOB_CLASS_NAME VARCHAR2(250 BYTE) NULL ,
IS_DURABLE VARCHAR2(1 BYTE) NULL ,
IS_NONCONCURRENT VARCHAR2(1 BYTE) NULL ,
IS_UPDATE_DATA VARCHAR2(1 BYTE) NULL ,
REQUESTS_RECOVERY VARCHAR2(1 BYTE) NULL ,
JOB_DATA BLOB NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for QRTZ_LOCKS
-- ----------------------------
DROP TABLE QRTZ_LOCKS;
CREATE TABLE QRTZ_LOCKS (
SCHED_NAME VARCHAR2(120 BYTE) NOT NULL ,
LOCK_NAME VARCHAR2(40 BYTE) NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for QRTZ_PAUSED_TRIGGER_GRPS
-- ----------------------------
DROP TABLE QRTZ_PAUSED_TRIGGER_GRPS;
CREATE TABLE QRTZ_PAUSED_TRIGGER_GRPS (
SCHED_NAME VARCHAR2(120 BYTE) NOT NULL ,
TRIGGER_GROUP VARCHAR2(200 BYTE) NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for QRTZ_SCHEDULER_STATE
-- ----------------------------
DROP TABLE QRTZ_SCHEDULER_STATE;
CREATE TABLE QRTZ_SCHEDULER_STATE (
SCHED_NAME VARCHAR2(120 BYTE) NOT NULL ,
INSTANCE_NAME VARCHAR2(200 BYTE) NOT NULL ,
LAST_CHECKIN_TIME NUMBER NOT NULL ,
CHECKIN_INTERVAL NUMBER NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for QRTZ_SIMPLE_TRIGGERS
-- ----------------------------
DROP TABLE QRTZ_SIMPLE_TRIGGERS;
CREATE TABLE QRTZ_SIMPLE_TRIGGERS (
SCHED_NAME VARCHAR2(120 BYTE) NOT NULL ,
TRIGGER_NAME VARCHAR2(200 BYTE) NOT NULL ,
TRIGGER_GROUP VARCHAR2(200 BYTE) NOT NULL ,
REPEAT_COUNT NUMBER NOT NULL ,
REPEAT_INTERVAL NUMBER NOT NULL ,
TIMES_TRIGGERED NUMBER NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for QRTZ_SIMPROP_TRIGGERS
-- ----------------------------
DROP TABLE QRTZ_SIMPROP_TRIGGERS;
CREATE TABLE QRTZ_SIMPROP_TRIGGERS (
SCHED_NAME VARCHAR2(120 BYTE) NOT NULL ,
TRIGGER_NAME VARCHAR2(200 BYTE) NOT NULL ,
TRIGGER_GROUP VARCHAR2(200 BYTE) NOT NULL ,
STR_PROP_1 VARCHAR2(512 BYTE) NULL ,
STR_PROP_2 VARCHAR2(512 BYTE) NULL ,
STR_PROP_3 VARCHAR2(512 BYTE) NULL ,
INT_PROP_1 NUMBER DEFAULT NULL  NULL ,
INT_PROP_2 NUMBER DEFAULT NULL  NULL ,
LONG_PROP_1 NUMBER DEFAULT NULL  NULL ,
LONG_PROP_2 NUMBER DEFAULT NULL  NULL ,
DEC_PROP_1 NUMBER(13,4) DEFAULT NULL  NULL ,
DEC_PROP_2 NUMBER(13,4) DEFAULT NULL  NULL ,
BOOL_PROP_1 VARCHAR2(1 BYTE) NULL ,
BOOL_PROP_2 VARCHAR2(1 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for QRTZ_TRIGGERS
-- ----------------------------
DROP TABLE QRTZ_TRIGGERS;
CREATE TABLE QRTZ_TRIGGERS (
SCHED_NAME VARCHAR2(120 BYTE) NOT NULL ,
TRIGGER_NAME VARCHAR2(200 BYTE) NOT NULL ,
TRIGGER_GROUP VARCHAR2(200 BYTE) NOT NULL ,
JOB_NAME VARCHAR2(200 BYTE) NULL ,
JOB_GROUP VARCHAR2(200 BYTE) NULL ,
DESCRIPTION VARCHAR2(250 BYTE) NULL ,
NEXT_FIRE_TIME NUMBER DEFAULT NULL  NULL ,
PREV_FIRE_TIME NUMBER DEFAULT NULL  NULL ,
PRIORITY NUMBER DEFAULT NULL  NULL ,
TRIGGER_STATE VARCHAR2(16 BYTE) NULL ,
TRIGGER_TYPE VARCHAR2(8 BYTE) NULL ,
START_TIME NUMBER NOT NULL ,
END_TIME NUMBER DEFAULT NULL  NULL ,
CALENDAR_NAME VARCHAR2(200 BYTE) NULL ,
MISFIRE_INSTR NUMBER DEFAULT NULL  NULL ,
JOB_DATA BLOB NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for RULE_BUSINESS_LINE
-- ----------------------------
DROP TABLE RULE_BUSINESS_LINE;
CREATE TABLE RULE_BUSINESS_LINE (
RULE_BUSINESS_LINE_ID NUMBER NOT NULL ,
RULE_BUSINESS_LINE_CODE VARCHAR2(100 BYTE) NULL ,
RULE_BUSINESS_LINE_TYPE VARCHAR2(100 BYTE) NULL ,
RULE_BUSINESS_LINE_NAME VARCHAR2(500 BYTE) NULL ,
RULE_BUSINESS_LINE_DESC VARCHAR2(500 BYTE) NULL ,
RULE_BUSINESS_LINE_PARENT_CODE VARCHAR2(100 BYTE) NULL ,
RULE_BUSINESS_LINE_MAPPTYPE VARCHAR2(100 BYTE) NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE NOT NULL ,
CREATED_BY NUMBER DEFAULT 0  NOT NULL ,
LAST_UPDATED_BY NUMBER DEFAULT 0  NOT NULL ,
LAST_UPDATE_DATE DATE NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for RULE_DIM
-- ----------------------------
DROP TABLE RULE_DIM;
CREATE TABLE RULE_DIM (
RULE_DIM_ID NUMBER NOT NULL ,
RULE_BUSINESS_LINE_CODE VARCHAR2(100 BYTE) NULL ,
RULE_VIEW_TYPE VARCHAR2(30 BYTE) NULL ,
RULE_DIM_NAME VARCHAR2(150 BYTE) NULL ,
RULE_DIM_DATA_TYPE VARCHAR2(15 BYTE) NULL ,
RULE_DIM_DEFAULT_VALUE VARCHAR2(150 BYTE) NULL ,
RULE_DIM_CODE VARCHAR2(150 BYTE) NULL ,
RULE_DIM_DESC VARCHAR2(500 BYTE) NULL ,
RULE_DIM_VALUE_FROM VARCHAR2(100 BYTE) NULL ,
RULE_DIM_TARGET_SOURCE VARCHAR2(500 BYTE) NULL ,
EFFECT_DATE DATE DEFAULT NULL  NULL ,
EFFECT_END_DATE DATE DEFAULT NULL  NULL ,
RULE_DIM_REFERENCE_FROM VARCHAR2(100 BYTE) NULL ,
RULE_DIM_REFERENCE_CODE VARCHAR2(100 BYTE) NULL ,
PLACEHOLDER VARCHAR2(45 BYTE) NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE NOT NULL ,
CREATED_BY NUMBER DEFAULT 0  NOT NULL ,
LAST_UPDATED_BY NUMBER DEFAULT 0  NOT NULL ,
LAST_UPDATE_DATE DATE NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for RULE_EXPRESSION
-- ----------------------------
DROP TABLE RULE_EXPRESSION;
CREATE TABLE RULE_EXPRESSION (
RULE_EXP_ID NUMBER NOT NULL ,
RULE_BUSINESS_LINE_CODE VARCHAR2(100 BYTE) NULL ,
RULE_EXP_NAME VARCHAR2(400 BYTE) NULL ,
RULE_EXP_CODE VARCHAR2(150 BYTE) NULL ,
RULE_EXP_DESC VARCHAR2(500 BYTE) NULL ,
RULE_SIMPLE_EXP VARCHAR2(3900 BYTE) NULL ,
RULE_EXP VARCHAR2(1000 BYTE) NULL ,
RULE_EXP_PARAMS VARCHAR2(500 BYTE) NULL ,
RULE_EXP_WEIGHT NUMBER DEFAULT NULL  NULL ,
EFFECT_DATE DATE DEFAULT NULL  NULL ,
EFFECT_END_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE NOT NULL ,
CREATED_BY NUMBER DEFAULT 0  NOT NULL ,
LAST_UPDATED_BY NUMBER DEFAULT 0  NOT NULL ,
LAST_UPDATE_DATE DATE NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for RULE_EXPRESSIONDIM
-- ----------------------------
DROP TABLE RULE_EXPRESSIONDIM;
CREATE TABLE RULE_EXPRESSIONDIM (
RULE_EXP_DIM_ID NUMBER NOT NULL ,
RULE_BUSINESS_LINE_CODE VARCHAR2(100 BYTE) NULL ,
RULE_ORDER_ID VARCHAR2(20 BYTE) NULL ,
RULE_DIM_CODE VARCHAR2(150 BYTE) NULL ,
RULE_DIM_NAME VARCHAR2(150 BYTE) NULL ,
RULE_DIM_OPERATORS VARCHAR2(15 BYTE) NULL ,
RULE_DIM_VALUE VARCHAR2(200 BYTE) NULL ,
RULE_EXP_CODE VARCHAR2(150 BYTE) NULL ,
EFFECT_DATE DATE DEFAULT NULL  NULL ,
EFFECT_END_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE NOT NULL ,
CREATED_BY NUMBER DEFAULT 0  NOT NULL ,
LAST_UPDATED_BY NUMBER DEFAULT 0  NOT NULL ,
LAST_UPDATE_DATE DATE NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for RULE_MAPPING_BUSINESS
-- ----------------------------
DROP TABLE RULE_MAPPING_BUSINESS;
CREATE TABLE RULE_MAPPING_BUSINESS (
RULE_MAPP_BUS_ID NUMBER NOT NULL ,
RULE_BUS_DIM VARCHAR2(150 BYTE) NULL ,
RULE_BUS_DIM_OPERATOR VARCHAR2(255 BYTE) NULL ,
RULE_BUS_DIM_VALUE VARCHAR2(15 BYTE) NULL ,
RULE_BUS_TARGET_TYPE VARCHAR2(150 BYTE) NULL ,
RULE_BUS_TARGET_SOURCE VARCHAR2(150 BYTE) NULL ,
RULE_BUS_RESULT_DIM VARCHAR2(3000 BYTE) NULL ,
RULE_BUS_PARAM VARCHAR2(3000 BYTE) NULL ,
RULE_EXC_CODE VARCHAR2(100 BYTE) NULL ,
RULE_BUS_LEVEL NUMBER DEFAULT NULL  NULL ,
EFFECT_DATE DATE DEFAULT NULL  NULL ,
EFFECT_END_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE NOT NULL ,
CREATED_BY NUMBER DEFAULT 0  NOT NULL ,
LAST_UPDATED_BY NUMBER DEFAULT 0  NOT NULL ,
LAST_UPDATE_DATE DATE NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for SAAF_FILE_UPLOAD
-- ----------------------------
DROP TABLE SAAF_FILE_UPLOAD;
CREATE TABLE SAAF_FILE_UPLOAD (
UPLOAD_ID NUMBER NOT NULL ,
FILE_NAME VARCHAR2(200 BYTE) NULL ,
FILE_SIZE NUMBER(20,2) DEFAULT NULL  NULL ,
FILE_TYPE VARCHAR2(200 BYTE) NULL ,
SOURCE_CODE VARCHAR2(200 BYTE) NULL ,
SOURCE_ID NUMBER DEFAULT NULL  NULL ,
STATUS VARCHAR2(100 BYTE) NULL ,
FILE_ADDRESS VARCHAR2(500 BYTE) NULL ,
START_DATE_ACTIVE DATE NOT NULL ,
END_DATE_ACTIVE DATE DEFAULT NULL  NULL ,
DESCRIPTION VARCHAR2(500 BYTE) NULL ,
INST_ID NUMBER DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
CREATION_DATE DATE DEFAULT sysdate  NOT NULL ,
CREATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATE_DATE DATE DEFAULT sysdate  NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
ATTRIBUTE_CATEGORY VARCHAR2(30 BYTE) NULL ,
ATTRIBUTE1 VARCHAR2(240 BYTE) NULL ,
ATTRIBUTE2 VARCHAR2(240 BYTE) NULL ,
ATTRIBUTE3 VARCHAR2(240 BYTE) NULL ,
ATTRIBUTE4 VARCHAR2(240 BYTE) NULL ,
ATTRIBUTE5 VARCHAR2(240 BYTE) NULL ,
ATTRIBUTE6 VARCHAR2(240 BYTE) NULL ,
ATTRIBUTE7 VARCHAR2(240 BYTE) NULL ,
ATTRIBUTE8 VARCHAR2(240 BYTE) NULL ,
ATTRIBUTE9 VARCHAR2(240 BYTE) NULL ,
ATTRIBUTE10 VARCHAR2(240 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN SAAF_FILE_UPLOAD.UPLOAD_ID IS '表ID，主键，供其他表做外键';
COMMENT ON COLUMN SAAF_FILE_UPLOAD.FILE_SIZE IS '文件大小';
COMMENT ON COLUMN SAAF_FILE_UPLOAD.SOURCE_ID IS '来源ID';
COMMENT ON COLUMN SAAF_FILE_UPLOAD.START_DATE_ACTIVE IS '起始日期';
COMMENT ON COLUMN SAAF_FILE_UPLOAD.END_DATE_ACTIVE IS '终止日期';
COMMENT ON COLUMN SAAF_FILE_UPLOAD.INST_ID IS '所属中心ID，关联SAAF_INSTITUTION表';

-- ----------------------------
-- Table structure for SAAF_WEBSERVICE_INFO
-- ----------------------------
DROP TABLE SAAF_WEBSERVICE_INFO;
CREATE TABLE SAAF_WEBSERVICE_INFO (
WEBSERVICE_ID NUMBER NOT NULL ,
BUSINESS_LINE_CODE VARCHAR2(100 BYTE) NULL ,
WEBSERVICE_CODE VARCHAR2(100 BYTE) NULL ,
WEBSERVICE_URL VARCHAR2(3000 BYTE) NULL ,
WEBSERVICE_NAME VARCHAR2(100 BYTE) NULL ,
WEBSERVICE_DESC VARCHAR2(3000 BYTE) NULL ,
WEBSERICE_AGREEMENT VARCHAR2(10 BYTE) NULL ,
WEBSERVICE_TYPE VARCHAR2(10 BYTE) NULL ,
REQUEST_PARAM_DEMO VARCHAR2(3000 BYTE) NULL ,
RESPONSE_PARAM_DEMO VARCHAR2(3000 BYTE) NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY DATE DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN SAAF_WEBSERVICE_INFO.VERSION_NUM IS '版本';

-- ----------------------------
-- Table structure for SAAF_WEBSERVICE_PARAM_INFO
-- ----------------------------
DROP TABLE SAAF_WEBSERVICE_PARAM_INFO;
CREATE TABLE SAAF_WEBSERVICE_PARAM_INFO (
PARAM_ID NUMBER NOT NULL ,
WEBSERVICE_CODE VARCHAR2(100 BYTE) NULL ,
PARAM_CODE VARCHAR2(80 BYTE) NULL ,
PARAM_NAME VARCHAR2(100 BYTE) NULL ,
PARAM_DESC VARCHAR2(500 BYTE) NULL ,
PARAM_TYPE VARCHAR2(50 BYTE) NULL ,
REQUIRED_FLAG VARCHAR2(10 BYTE) NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE NOT NULL ,
CREATED_BY NUMBER DEFAULT 0  NOT NULL ,
LAST_UPDATED_BY NUMBER DEFAULT 0  NOT NULL ,
LAST_UPDATE_DATE DATE NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for SCHEDULE_JOB_ACCESS_ORGS
-- ----------------------------
DROP TABLE SCHEDULE_JOB_ACCESS_ORGS;
CREATE TABLE SCHEDULE_JOB_ACCESS_ORGS (
ACCESS_ORG_ID NUMBER NOT NULL ,
JOB_ID NUMBER DEFAULT NULL  NULL ,
ORG_ID NUMBER DEFAULT NULL  NULL ,
PLATFORM_CODE VARCHAR2(30 BYTE) NULL ,
START_DATE DATE DEFAULT NULL  NULL ,
END_DATE DATE DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT -1  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT -1  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for SCHEDULE_JOB_PARAMETERS
-- ----------------------------
DROP TABLE SCHEDULE_JOB_PARAMETERS;
CREATE TABLE SCHEDULE_JOB_PARAMETERS (
PARAM_ID NUMBER NOT NULL ,
JOB_ID NUMBER DEFAULT NULL  NULL ,
PARAM_SEQ_NUM NUMBER DEFAULT NULL  NULL ,
PARAM_NAME VARCHAR2(500 BYTE) NULL ,
PARAM_TYPE VARCHAR2(50 BYTE) NULL ,
DESCRIPTION CLOB NULL ,
IS_REQUIRED VARCHAR2(10 BYTE) NULL ,
IS_ENABLED VARCHAR2(10 BYTE) NULL ,
DEFAULT_VALUE CLOB NULL ,
PARAM_REGION VARCHAR2(10 BYTE) NULL ,
CREATION_DATE DATE NOT NULL ,
CREATED_BY NUMBER DEFAULT 0  NOT NULL ,
LAST_UPDATED_BY NUMBER DEFAULT 0  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN SCHEDULE_JOB_PARAMETERS.PARAM_ID IS '唯一ID';

-- ----------------------------
-- Table structure for SCHEDULE_JOB_RESP
-- ----------------------------
DROP TABLE SCHEDULE_JOB_RESP;
CREATE TABLE SCHEDULE_JOB_RESP (
JOB_RESP_ID NUMBER NOT NULL ,
JOB_ID NUMBER NOT NULL ,
JOB_RESP_NAME VARCHAR2(100 BYTE) NULL ,
RESPONSIBILITY_ID NUMBER NOT NULL ,
PLATFORM_CODE VARCHAR2(30 BYTE) NULL ,
START_DATE_ACTIVE DATE DEFAULT NULL  NULL ,
END_DATE_ACTIVE DATE DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT -1  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT -1  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for SCHEDULE_JOBS
-- ----------------------------
DROP TABLE SCHEDULE_JOBS;
CREATE TABLE SCHEDULE_JOBS (
JOB_ID NUMBER NOT NULL ,
JOB_NAME VARCHAR2(200 BYTE) NULL ,
DESCRIPTION CLOB NULL ,
EXECUTABLE_NAME VARCHAR2(500 BYTE) NULL ,
METHOD VARCHAR2(240 BYTE) NULL ,
OUTPUT_FILE_TYPE VARCHAR2(100 BYTE) NULL ,
SYSTEM VARCHAR2(240 BYTE) NULL ,
MODULE VARCHAR2(240 BYTE) NULL ,
JOB_TYPE VARCHAR2(120 BYTE) NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT 0  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT 0  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT 0  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
SINGLE_INSTANCE VARCHAR2(6 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN SCHEDULE_JOBS.JOB_ID IS '唯一ID';

-- ----------------------------
-- Table structure for SCHEDULE_LOG
-- ----------------------------
DROP TABLE SCHEDULE_LOG;
CREATE TABLE SCHEDULE_LOG (
ID_ NUMBER NOT NULL ,
SCHEDULE_ID VARCHAR2(64 BYTE) DEFAULT NULL  NULL ,
TIME_ DATE DEFAULT NULL  NULL ,
MESSAGE_ VARCHAR2(4000 BYTE) DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for SCHEDULE_SCHEDULES
-- ----------------------------
DROP TABLE SCHEDULE_SCHEDULES;
CREATE TABLE SCHEDULE_SCHEDULES (
SCHEDULE_ID NUMBER NOT NULL ,
PARENT_SCHEDULE_ID NUMBER NULL ,
PHASE_CODE VARCHAR2(240 BYTE) NULL ,
STATUS_CODE VARCHAR2(240 BYTE) NULL ,
ACTUAL_START_DATE DATE NULL ,
ACTUAL_COMPLETION_DATE DATE NULL ,
LOG_FILE_NAME VARCHAR2(240 BYTE) NULL ,
OUTPUT_FILE_NAME VARCHAR2(240 BYTE) NULL ,
OUTPUT_FILE_TYPE VARCHAR2(10 BYTE) NULL ,
SCHEDULE_EXPECT_START_DATE DATE NULL ,
SCHEDULE_EXPECT_END_DATE DATE NULL ,
JOB_ID NUMBER NULL ,
QUARTZ_JOB_NAME VARCHAR2(480 BYTE) NULL ,
CORNEXPRESS VARCHAR2(240 BYTE) NULL ,
PRIORITY NUMBER NULL ,
PREVIOUS_FIRE_TIME DATE NULL ,
NEXT_FIRE_TIME DATE NULL ,
SCHEDULE_TYPE VARCHAR2(120 BYTE) NULL ,
ARGUMENT_OBJ BLOB NULL ,
IS_DELETED VARCHAR2(10 BYTE) NULL ,
WAS_EXECUTED_TOTAL_COUNT NUMBER NULL ,
WAS_EXECUTED_SUCCESS_COUNT NUMBER NULL ,
WAS_EXECUTED_FAIL_COUNT NUMBER NULL ,
ARGUMENTS_TEXT VARCHAR2(3000 BYTE) NULL ,
FAIL_ATTEMPT_FREQUENCY NUMBER NULL ,
TIMEOUT NUMBER NULL ,
CREATION_DATE DATE NOT NULL ,
CREATED_BY NUMBER NOT NULL ,
LAST_UPDATED_BY NUMBER NULL ,
LAST_UPDATE_DATE DATE NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT 0  NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN SCHEDULE_SCHEDULES.PARENT_SCHEDULE_ID IS '父请求ID，计划请求的子请求自动产生此字段值';

-- ----------------------------
-- Table structure for SCHEDULE_SCHEDULES_ERROR
-- ----------------------------
DROP TABLE SCHEDULE_SCHEDULES_ERROR;
CREATE TABLE SCHEDULE_SCHEDULES_ERROR (
ERROR_ID NUMBER NOT NULL ,
SCHEDULE_ID NUMBER NOT NULL ,
SCHEDULE_DATA VARCHAR2(3000 BYTE) NULL ,
ERROR_STR CLOB NULL ,
STATUS VARCHAR2(30 BYTE) NULL ,
DESCRIPTION VARCHAR2(500 BYTE) NULL ,
VERSION_NUM NUMBER DEFAULT 0  NULL ,
CREATION_DATE DATE DEFAULT sysdate  NOT NULL ,
CREATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATE_DATE DATE DEFAULT sysdate  NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN SCHEDULE_SCHEDULES_ERROR.ERROR_ID IS '表ID，主键，供其他表做外键';
COMMENT ON COLUMN SCHEDULE_SCHEDULES_ERROR.SCHEDULE_ID IS '调度ID';

-- ----------------------------
-- Table structure for TTA_ACTUAL_COST_RULE
-- ----------------------------
DROP TABLE TTA_ACTUAL_COST_RULE;
CREATE TABLE TTA_ACTUAL_COST_RULE (
ID NUMBER NOT NULL ,
OI_TYPE VARCHAR2(100 BYTE) NOT NULL ,
SCENARIO VARCHAR2(100 BYTE) NULL ,
OI_BUCKET VARCHAR2(100 BYTE) NULL ,
IS_APPOINT_DETAIL VARCHAR2(2 BYTE) NULL ,
RULE_SOURCE_DATA VARCHAR2(200 BYTE) NULL ,
ALLOCATION_BASE VARCHAR2(100 BYTE) NOT NULL ,
CREATION_DATE DATE DEFAULT sysdate  NULL ,
CREATED_BY NUMBER NULL ,
LAST_UPDATED_BY NUMBER NULL ,
LAST_UPDATE_DATE DATE DEFAULT sysdate  NULL ,
LAST_UPDATE_LOGIN NUMBER NULL ,
VERSION_NUM NUMBER NULL ,
STATUS VARCHAR2(2 BYTE) DEFAULT 1  NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN TTA_ACTUAL_COST_RULE.ID IS '主键';
COMMENT ON COLUMN TTA_ACTUAL_COST_RULE.OI_TYPE IS 'beoi/sroi/aboi/other oi';
COMMENT ON COLUMN TTA_ACTUAL_COST_RULE.SCENARIO IS '供应商属性:normal supplier/express supplir';
COMMENT ON COLUMN TTA_ACTUAL_COST_RULE.OI_BUCKET IS '条款小类,aboi及other oi 必填，选择内容来自条款管理中收入方式+条款英文名称与选择的oi type 过滤取唯一性';
COMMENT ON COLUMN TTA_ACTUAL_COST_RULE.IS_APPOINT_DETAIL IS '是否费用指定物料明细, y/n';
COMMENT ON COLUMN TTA_ACTUAL_COST_RULE.RULE_SOURCE_DATA IS 'lowest level of source data，数据规则';
COMMENT ON COLUMN TTA_ACTUAL_COST_RULE.ALLOCATION_BASE IS '系统接口';
COMMENT ON COLUMN TTA_ACTUAL_COST_RULE.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN TTA_ACTUAL_COST_RULE.CREATED_BY IS '创建人';
COMMENT ON COLUMN TTA_ACTUAL_COST_RULE.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN TTA_ACTUAL_COST_RULE.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN TTA_ACTUAL_COST_RULE.LAST_UPDATE_LOGIN IS '登录人';
COMMENT ON COLUMN TTA_ACTUAL_COST_RULE.VERSION_NUM IS '版本号';
COMMENT ON COLUMN TTA_ACTUAL_COST_RULE.STATUS IS '启用状态：1启用,0禁用';

-- ----------------------------
-- Table structure for TTA_BASE_ANSWER
-- ----------------------------
DROP TABLE TTA_BASE_ANSWER;
CREATE TABLE TTA_BASE_ANSWER (
ANSWER_ID NUMBER(20) NOT NULL ,
SUBJECT_TYPE VARCHAR2(100 BYTE) NULL ,
CHINESE_NAME VARCHAR2(100 BYTE) NULL ,
ENGLISH_NAME VARCHAR2(100 BYTE) NULL ,
RULE VARCHAR2(100 BYTE) NULL ,
OPEN VARCHAR2(100 BYTE) NULL ,
SUBJECT VARCHAR2(100 BYTE) NULL ,
TEXT_ENGLISH_NAME VARCHAR2(100 BYTE) NULL ,
BRING_OUT VARCHAR2(100 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN TTA_BASE_ANSWER.ANSWER_ID IS '表id';
COMMENT ON COLUMN TTA_BASE_ANSWER.SUBJECT_TYPE IS '类型';
COMMENT ON COLUMN TTA_BASE_ANSWER.CHINESE_NAME IS '中文名称';
COMMENT ON COLUMN TTA_BASE_ANSWER.ENGLISH_NAME IS '英文名称';
COMMENT ON COLUMN TTA_BASE_ANSWER.RULE IS '规则';
COMMENT ON COLUMN TTA_BASE_ANSWER.OPEN IS '是否生效';
COMMENT ON COLUMN TTA_BASE_ANSWER.SUBJECT IS '题目	';
COMMENT ON COLUMN TTA_BASE_ANSWER.TEXT_ENGLISH_NAME IS '手工录入';
COMMENT ON COLUMN TTA_BASE_ANSWER.BRING_OUT IS '选择带出';

-- ----------------------------
-- Table structure for TTA_BASE_RULE
-- ----------------------------
DROP TABLE TTA_BASE_RULE;
CREATE TABLE TTA_BASE_RULE (
RULE_ID NUMBER NOT NULL ,
RULE_NAME VARCHAR2(100 BYTE) NULL ,
SQL_VALUES VARCHAR2(1000 BYTE) NULL ,
BUSINESS_TYPE VARCHAR2(5 BYTE) NULL ,
REMARKS VARCHAR2(500 BYTE) NULL ,
VERSION_NUM NUMBER NULL ,
CREATION_DATE DATE DEFAULT sysdate  NOT NULL ,
CREATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATE_DATE DATE DEFAULT sysdate  NOT NULL ,
LAST_UPDATE_LOGIN NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN TTA_BASE_RULE.RULE_ID IS '主键';
COMMENT ON COLUMN TTA_BASE_RULE.RULE_NAME IS '规则名称';
COMMENT ON COLUMN TTA_BASE_RULE.SQL_VALUES IS '自动计算sql';
COMMENT ON COLUMN TTA_BASE_RULE.BUSINESS_TYPE IS '业务类型 1:问卷,2:条款框架';
COMMENT ON COLUMN TTA_BASE_RULE.REMARKS IS '说明、备注';

-- ----------------------------
-- Table structure for TTA_BASE_RULE_HEADER
-- ----------------------------
DROP TABLE TTA_BASE_RULE_HEADER;
CREATE TABLE TTA_BASE_RULE_HEADER (
RULE_ID NUMBER NOT NULL ,
RULE_NAME VARCHAR2(100 BYTE) NULL ,
OPEN VARCHAR2(100 BYTE) NULL ,
VERSION_NUM NUMBER NULL ,
CREATION_DATE DATE DEFAULT null  NULL ,
CREATED_BY NUMBER NULL ,
LAST_UPDATED_BY NUMBER NULL ,
LAST_UPDATE_DATE DATE NULL ,
LAST_UPDATE_LOGIN NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN TTA_BASE_RULE_HEADER.RULE_ID IS '规则id';
COMMENT ON COLUMN TTA_BASE_RULE_HEADER.RULE_NAME IS '规则名称';
COMMENT ON COLUMN TTA_BASE_RULE_HEADER.OPEN IS '是否有效:Y有效,N无效';
COMMENT ON COLUMN TTA_BASE_RULE_HEADER.VERSION_NUM IS '版本号';
COMMENT ON COLUMN TTA_BASE_RULE_HEADER.CREATION_DATE IS '创建时间';
COMMENT ON COLUMN TTA_BASE_RULE_HEADER.CREATED_BY IS '创建者';

-- ----------------------------
-- Table structure for TTA_BASE_RULE_LINE
-- ----------------------------
DROP TABLE TTA_BASE_RULE_LINE;
CREATE TABLE TTA_BASE_RULE_LINE (
RULE_LINE_ID NUMBER NOT NULL ,
QN_HEAD_ID NUMBER NULL ,
QN_TITLE VARCHAR2(100 BYTE) NULL ,
OPTION_VALUS VARCHAR2(100 BYTE) NULL ,
RULE_ID NUMBER NULL ,
CREATION_DATE DATE NULL ,
CREATED_BY NUMBER NULL ,
LAST_UPDATED_BY NUMBER NULL ,
LAST_UPDATE_DATE DATE NULL ,
LAST_UPDATE_LOGIN NUMBER NULL ,
VERSION_NUM NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN TTA_BASE_RULE_LINE.RULE_LINE_ID IS '主键';
COMMENT ON COLUMN TTA_BASE_RULE_LINE.QN_HEAD_ID IS '题目id';
COMMENT ON COLUMN TTA_BASE_RULE_LINE.QN_TITLE IS '题目名称';
COMMENT ON COLUMN TTA_BASE_RULE_LINE.OPTION_VALUS IS '值';
COMMENT ON COLUMN TTA_BASE_RULE_LINE.RULE_ID IS '规则定义头表ID';

-- ----------------------------
-- Table structure for TTA_BASE_SUBJECT
-- ----------------------------
DROP TABLE TTA_BASE_SUBJECT;
CREATE TABLE TTA_BASE_SUBJECT (
SUBJECT_ID NUMBER NOT NULL ,
QN_HEAD_ID NUMBER NULL ,
RULE_ID NUMBER NULL ,
CREATION_DATE DATE NULL ,
CREATED_BY NUMBER NULL ,
LAST_UPDATE_DATE DATE NULL ,
LAST_UPDATE_LOGIN NUMBER NULL ,
LAST_UPDATED_BY NUMBER NULL ,
VERSION_NUM NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN TTA_BASE_SUBJECT.QN_HEAD_ID IS '规则头ID';
COMMENT ON COLUMN TTA_BASE_SUBJECT.RULE_ID IS '题目行ID';

-- ----------------------------
-- Table structure for TTA_BRAND
-- ----------------------------
DROP TABLE TTA_BRAND;
CREATE TABLE TTA_BRAND (
BRAND_ID NUMBER NOT NULL ,
BRAND VARCHAR2(50 BYTE) NOT NULL ,
BRAND_EN VARCHAR2(230 BYTE) NOT NULL ,
BRAND_CN VARCHAR2(230 BYTE) NOT NULL ,
REMARK VARCHAR2(2030 BYTE) NULL ,
SOURCE_CODE VARCHAR2(50 BYTE) NULL ,
CREATION_DATE DATE DEFAULT SYSDATE  NULL ,
CREATED_BY NUMBER NULL ,
LAST_UPDATED_BY NUMBER NULL ,
LAST_UPDATE_DATE DATE DEFAULT SYSDATE  NULL ,
LAST_UPDATE_LOGIN NUMBER NULL ,
VERSION_NUM NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for TTA_BRANDPLN_HEADER
-- ----------------------------
DROP TABLE TTA_BRANDPLN_HEADER;
CREATE TABLE TTA_BRANDPLN_HEADER (
BRANDPLN_H_ID NUMBER NOT NULL ,
NEW_OR_EXISTING VARCHAR2(50 BYTE) NOT NULL ,
VENDOR_NBR VARCHAR2(30 BYTE) NOT NULL ,
VENDOR_NAME VARCHAR2(230 BYTE) NOT NULL ,
PO_RECORD_SUM NUMBER NULL ,
SALES_SUM NUMBER NULL ,
ACTUAL_GP NUMBER NULL ,
FCS_PURCHASE NUMBER NULL ,
PURCHASE_GROWTH NUMBER NULL ,
FCS_SALES NUMBER NULL ,
SALES_GROWTH NUMBER NULL ,
GP NUMBER NULL ,
REMARK VARCHAR2(2030 BYTE) NULL ,
CREATION_DATE DATE DEFAULT SYSDATE  NULL ,
CREATED_BY NUMBER NULL ,
LAST_UPDATED_BY NUMBER NULL ,
LAST_UPDATE_DATE DATE DEFAULT SYSDATE  NULL ,
LAST_UPDATE_LOGIN NUMBER NULL ,
VERSION_NUM NUMBER NULL ,
PROPOSAL_ID NUMBER NULL ,
PO_RECORD_SUM2 NUMBER NULL ,
SALES_SUM2 NUMBER NULL ,
ACTUAL_GP2 NUMBER NULL ,
YEAR_CODE VARCHAR2(30 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE TTA_BRANDPLN_HEADER IS '品牌计划明细信息';
COMMENT ON COLUMN TTA_BRANDPLN_HEADER.NEW_OR_EXISTING IS 'Existing_Vendor 与New_Vendor';
COMMENT ON COLUMN TTA_BRANDPLN_HEADER.VENDOR_NBR IS '供应商编号';
COMMENT ON COLUMN TTA_BRANDPLN_HEADER.VENDOR_NAME IS '供应商名称';
COMMENT ON COLUMN TTA_BRANDPLN_HEADER.PO_RECORD_SUM IS 'Purchase（PO Record）';
COMMENT ON COLUMN TTA_BRANDPLN_HEADER.SALES_SUM IS 'Sales';
COMMENT ON COLUMN TTA_BRANDPLN_HEADER.ACTUAL_GP IS 'Actual GP%';
COMMENT ON COLUMN TTA_BRANDPLN_HEADER.YEAR_CODE IS '年度';

-- ----------------------------
-- Table structure for TTA_BRANDPLN_LINE
-- ----------------------------
DROP TABLE TTA_BRANDPLN_LINE;
CREATE TABLE TTA_BRANDPLN_LINE (
BRANDPLN_L_ID NUMBER NOT NULL ,
BRAND_DETAILS VARCHAR2(50 BYTE) NOT NULL ,
GROUP_CODE VARCHAR2(30 BYTE) NOT NULL ,
GROUP_DESC VARCHAR2(230 BYTE) NOT NULL ,
DEPT_CODE VARCHAR2(30 BYTE) NOT NULL ,
DEPT_DESC VARCHAR2(230 BYTE) NOT NULL ,
BRAND_CODE VARCHAR2(30 BYTE) NULL ,
BRAND_CN VARCHAR2(230 BYTE) NOT NULL ,
PO_RECORD NUMBER NULL ,
SALES NUMBER NULL ,
ACTUAL_GP NUMBER NULL ,
FCS_PURCHASE NUMBER NULL ,
PURCHASE_GROWTH NUMBER NULL ,
FCS_SALES NUMBER NULL ,
SALES_GROWTH NUMBER NULL ,
GP NUMBER NULL ,
REMARK VARCHAR2(2030 BYTE) NULL ,
CREATION_DATE DATE DEFAULT SYSDATE  NULL ,
CREATED_BY NUMBER NULL ,
LAST_UPDATED_BY NUMBER NULL ,
LAST_UPDATE_DATE DATE DEFAULT SYSDATE  NULL ,
LAST_UPDATE_LOGIN NUMBER NULL ,
VERSION_NUM NUMBER NULL ,
BRANDPLN_H_ID NUMBER NULL ,
PROPOSAL_ID NUMBER NULL ,
PO_RECORD2 NUMBER NULL ,
SALES2 NUMBER NULL ,
ACTUAL_GP2 NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE TTA_BRANDPLN_LINE IS '品牌计划明细信息';
COMMENT ON COLUMN TTA_BRANDPLN_LINE.BRAND_DETAILS IS 'Existing_Brand 与New_Brand区分';
COMMENT ON COLUMN TTA_BRANDPLN_LINE.BRAND_CN IS '品牌';

-- ----------------------------
-- Table structure for TTA_CLAUSE_TREE
-- ----------------------------
DROP TABLE TTA_CLAUSE_TREE;
CREATE TABLE TTA_CLAUSE_TREE (
CLAUSE_ID NUMBER NOT NULL ,
TEAM_FRAMEWORK_ID NUMBER NULL ,
CLAUSE_CODE VARCHAR2(50 BYTE) NULL ,
CLAUSE_CN VARCHAR2(200 BYTE) NOT NULL ,
CLAUSE_EN VARCHAR2(200 BYTE) NULL ,
STATUS NUMBER NOT NULL ,
PARENT_ID NUMBER NULL ,
PASS_DATE DATE NULL ,
EFFECTIVE_DATE DATE NULL ,
IS_LEAF NUMBER NULL ,
IS_HIERARCHY_SHOW NUMBER NOT NULL ,
PAYMENT_METHOD VARCHAR2(100 BYTE) NOT NULL ,
BUSINESS_TYPE VARCHAR2(100 BYTE) NOT NULL ,
EXPRESSION_VALUE VARCHAR2(800 BYTE) NULL ,
BUSINESS_VERSION NUMBER NOT NULL ,
ORDER_NO VARCHAR2(100 BYTE) NOT NULL ,
CREATED_BY NUMBER NULL ,
LAST_UPDATED_BY NUMBER NULL ,
LAST_UPDATE_DATE DATE NULL ,
CREATION_DATE DATE NULL ,
LAST_UPDATE_LOGIN NUMBER NULL ,
VERSION_NUM NUMBER NULL ,
DELETE_FLAG NUMBER NULL ,
CODE VARCHAR2(100 BYTE) NULL ,
P_CODE VARCHAR2(100 BYTE) NULL ,
IS_GLOBAL_VARIABLE VARCHAR2(1 BYTE) NULL ,
OLD_CLAUSE_ID NUMBER NULL ,
OLD_ORDER_NO VARCHAR2(100 BYTE) NULL ,
IS_GLOBAL_TTA VARCHAR2(1 BYTE) NULL ,
IS_GLOBAL_FEE VARCHAR2(1 BYTE) NULL ,
EXPRESSION_VALUE_FEE VARCHAR2(800 BYTE) NULL ,
EXPRESSION_VALUE_TTA VARCHAR2(800 BYTE) NULL ,
TERM_CATEGORY VARCHAR2(2 BYTE) NOT NULL ,
GLOBAL_VALUE VARCHAR2(200 BYTE) NULL ,
GLOBAL_VALUE_TTA VARCHAR2(200 BYTE) NULL ,
GLOBAL_VALUE_FEE VARCHAR2(200 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN TTA_CLAUSE_TREE.CLAUSE_ID IS '主键';
COMMENT ON COLUMN TTA_CLAUSE_TREE.TEAM_FRAMEWORK_ID IS '外键，引用att_taerms_framework_head表id';
COMMENT ON COLUMN TTA_CLAUSE_TREE.CLAUSE_CODE IS '框架编码，暂时采用年度';
COMMENT ON COLUMN TTA_CLAUSE_TREE.CLAUSE_CN IS '条款中文名称';
COMMENT ON COLUMN TTA_CLAUSE_TREE.CLAUSE_EN IS '条款英文名称';
COMMENT ON COLUMN TTA_CLAUSE_TREE.STATUS IS '是否生效:1有效，0无效';
COMMENT ON COLUMN TTA_CLAUSE_TREE.PARENT_ID IS '上层条款id';
COMMENT ON COLUMN TTA_CLAUSE_TREE.PASS_DATE IS '审批通过时间';
COMMENT ON COLUMN TTA_CLAUSE_TREE.EFFECTIVE_DATE IS '版本生效日期';
COMMENT ON COLUMN TTA_CLAUSE_TREE.IS_LEAF IS '是否底层节点';
COMMENT ON COLUMN TTA_CLAUSE_TREE.IS_HIERARCHY_SHOW IS '是否同层级显示';
COMMENT ON COLUMN TTA_CLAUSE_TREE.PAYMENT_METHOD IS '收入方式';
COMMENT ON COLUMN TTA_CLAUSE_TREE.BUSINESS_TYPE IS '业务类型  01条款名目，02收取方式';
COMMENT ON COLUMN TTA_CLAUSE_TREE.EXPRESSION_VALUE IS '表达式结果值,#{code1}*#{code2}';
COMMENT ON COLUMN TTA_CLAUSE_TREE.BUSINESS_VERSION IS '条款版本号';
COMMENT ON COLUMN TTA_CLAUSE_TREE.ORDER_NO IS '排版序号';
COMMENT ON COLUMN TTA_CLAUSE_TREE.CREATED_BY IS '创建人';
COMMENT ON COLUMN TTA_CLAUSE_TREE.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN TTA_CLAUSE_TREE.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN TTA_CLAUSE_TREE.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN TTA_CLAUSE_TREE.LAST_UPDATE_LOGIN IS '登录人';
COMMENT ON COLUMN TTA_CLAUSE_TREE.VERSION_NUM IS '版本号';
COMMENT ON COLUMN TTA_CLAUSE_TREE.DELETE_FLAG IS '是否删除（0：未删除；1：已删除）';
COMMENT ON COLUMN TTA_CLAUSE_TREE.CODE IS '当前CODE';
COMMENT ON COLUMN TTA_CLAUSE_TREE.P_CODE IS '父级CODE';
COMMENT ON COLUMN TTA_CLAUSE_TREE.IS_GLOBAL_VARIABLE IS '是否全局0 否 1是(参考)';
COMMENT ON COLUMN TTA_CLAUSE_TREE.OLD_CLAUSE_ID IS '是否是复制来的ID';
COMMENT ON COLUMN TTA_CLAUSE_TREE.OLD_ORDER_NO IS '历史序号';
COMMENT ON COLUMN TTA_CLAUSE_TREE.IS_GLOBAL_TTA IS '是否全局0 否 1是(TTA)';
COMMENT ON COLUMN TTA_CLAUSE_TREE.IS_GLOBAL_FEE IS '是否全局0 否 1是(费用)';
COMMENT ON COLUMN TTA_CLAUSE_TREE.EXPRESSION_VALUE_FEE IS '表达式结果值 FEE';
COMMENT ON COLUMN TTA_CLAUSE_TREE.EXPRESSION_VALUE_TTA IS '表达式结果值,TTA';
COMMENT ON COLUMN TTA_CLAUSE_TREE.TERM_CATEGORY IS '类别 1.折扣则让项目 2.目标退佣已经免费货品，3.屈臣氏供应商服务费';
COMMENT ON COLUMN TTA_CLAUSE_TREE.GLOBAL_VALUE IS '全局值';
COMMENT ON COLUMN TTA_CLAUSE_TREE.GLOBAL_VALUE_TTA IS '全局值 TTA';
COMMENT ON COLUMN TTA_CLAUSE_TREE.GLOBAL_VALUE_FEE IS '全局值 FEE';

-- ----------------------------
-- Table structure for TTA_CLAUSE_TREE_H
-- ----------------------------
DROP TABLE TTA_CLAUSE_TREE_H;
CREATE TABLE TTA_CLAUSE_TREE_H (
CLAUSE_ID NUMBER NOT NULL ,
TEAM_FRAMEWORK_ID NUMBER NULL ,
CLAUSE_CODE VARCHAR2(50 BYTE) NULL ,
CLAUSE_CN VARCHAR2(200 BYTE) NOT NULL ,
CLAUSE_EN VARCHAR2(200 BYTE) NULL ,
STATUS NUMBER NOT NULL ,
PARENT_ID NUMBER NULL ,
PASS_DATE DATE NULL ,
EFFECTIVE_DATE DATE NULL ,
IS_LEAF NUMBER NULL ,
IS_HIERARCHY_SHOW NUMBER NOT NULL ,
PAYMENT_METHOD VARCHAR2(100 BYTE) NOT NULL ,
BUSINESS_TYPE VARCHAR2(100 BYTE) NOT NULL ,
EXPRESSION_VALUE VARCHAR2(800 BYTE) NULL ,
BUSINESS_VERSION NUMBER NOT NULL ,
RESOUCE_ID NUMBER NULL ,
RESOUCE_BUSINESS_VERSION NUMBER NULL ,
ORDER_NO VARCHAR2(100 BYTE) NOT NULL ,
CREATED_BY NUMBER NULL ,
LAST_UPDATED_BY NUMBER NULL ,
LAST_UPDATE_DATE DATE NULL ,
CREATION_DATE DATE NULL ,
LAST_UPDATE_LOGIN NUMBER NULL ,
VERSION_NUM NUMBER NULL ,
DELETE_FLAG NUMBER NULL ,
CODE VARCHAR2(100 BYTE) NULL ,
P_CODE VARCHAR2(100 BYTE) NULL ,
IS_GLOBAL_VARIABLE VARCHAR2(1 BYTE) NULL ,
IS_CHANGE NUMBER DEFAULT 0  NOT NULL ,
IS_GLOBAL_TTA VARCHAR2(1 BYTE) NULL ,
IS_GLOBAL_FEE VARCHAR2(1 BYTE) NULL ,
EXPRESSION_VALUE_FEE VARCHAR2(800 BYTE) NULL ,
EXPRESSION_VALUE_TTA VARCHAR2(800 BYTE) NULL ,
TERM_CATEGORY VARCHAR2(2 BYTE) NOT NULL ,
GLOBAL_VALUE VARCHAR2(200 BYTE) NULL ,
GLOBAL_VALUE_TTA VARCHAR2(200 BYTE) NULL ,
GLOBAL_VALUE_FEE VARCHAR2(200 BYTE) NULL ,
OLD_ORDER_NO VARCHAR2(100 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN TTA_CLAUSE_TREE_H.CLAUSE_ID IS '主键';
COMMENT ON COLUMN TTA_CLAUSE_TREE_H.TEAM_FRAMEWORK_ID IS '外键，引用att_taerms_framework_head表id';
COMMENT ON COLUMN TTA_CLAUSE_TREE_H.CLAUSE_CODE IS '框架编码，暂时采用年度';
COMMENT ON COLUMN TTA_CLAUSE_TREE_H.CLAUSE_CN IS '年度';
COMMENT ON COLUMN TTA_CLAUSE_TREE_H.CLAUSE_EN IS '条款英文名称';
COMMENT ON COLUMN TTA_CLAUSE_TREE_H.STATUS IS '是否生效:1有效，0无效';
COMMENT ON COLUMN TTA_CLAUSE_TREE_H.PARENT_ID IS '上层条款id';
COMMENT ON COLUMN TTA_CLAUSE_TREE_H.PASS_DATE IS '审批通过时间';
COMMENT ON COLUMN TTA_CLAUSE_TREE_H.EFFECTIVE_DATE IS '版本生效日期';
COMMENT ON COLUMN TTA_CLAUSE_TREE_H.IS_LEAF IS '是否底层节点';
COMMENT ON COLUMN TTA_CLAUSE_TREE_H.IS_HIERARCHY_SHOW IS '是否同层级显示';
COMMENT ON COLUMN TTA_CLAUSE_TREE_H.PAYMENT_METHOD IS '收入方式';
COMMENT ON COLUMN TTA_CLAUSE_TREE_H.BUSINESS_TYPE IS '业务类型';
COMMENT ON COLUMN TTA_CLAUSE_TREE_H.EXPRESSION_VALUE IS '表达式结果值,#{code1}*#{code2}';
COMMENT ON COLUMN TTA_CLAUSE_TREE_H.BUSINESS_VERSION IS '条款版本号';
COMMENT ON COLUMN TTA_CLAUSE_TREE_H.RESOUCE_ID IS '来源版本Id，对应复制原纪录id';
COMMENT ON COLUMN TTA_CLAUSE_TREE_H.RESOUCE_BUSINESS_VERSION IS '来源版本号，对应复制原纪录版本号';
COMMENT ON COLUMN TTA_CLAUSE_TREE_H.ORDER_NO IS '排版序号';
COMMENT ON COLUMN TTA_CLAUSE_TREE_H.CREATED_BY IS '创建人';
COMMENT ON COLUMN TTA_CLAUSE_TREE_H.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN TTA_CLAUSE_TREE_H.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN TTA_CLAUSE_TREE_H.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN TTA_CLAUSE_TREE_H.LAST_UPDATE_LOGIN IS '登录人';
COMMENT ON COLUMN TTA_CLAUSE_TREE_H.VERSION_NUM IS '版本号';
COMMENT ON COLUMN TTA_CLAUSE_TREE_H.DELETE_FLAG IS '是否删除（0：未删除；1：已删除）';
COMMENT ON COLUMN TTA_CLAUSE_TREE_H.CODE IS '当前CODE';
COMMENT ON COLUMN TTA_CLAUSE_TREE_H.P_CODE IS '父级CODE';
COMMENT ON COLUMN TTA_CLAUSE_TREE_H.IS_GLOBAL_VARIABLE IS '是否全局0 否 1是(参考)';
COMMENT ON COLUMN TTA_CLAUSE_TREE_H.IS_CHANGE IS '是否有改动 1删除，2修改,3新增';
COMMENT ON COLUMN TTA_CLAUSE_TREE_H.IS_GLOBAL_TTA IS '是否全局0 否 1是(TTA)';
COMMENT ON COLUMN TTA_CLAUSE_TREE_H.IS_GLOBAL_FEE IS '是否全局0 否 1是(费用)';
COMMENT ON COLUMN TTA_CLAUSE_TREE_H.EXPRESSION_VALUE_FEE IS '表达式结果值 FEE';
COMMENT ON COLUMN TTA_CLAUSE_TREE_H.EXPRESSION_VALUE_TTA IS '表达式结果值,TTA';
COMMENT ON COLUMN TTA_CLAUSE_TREE_H.TERM_CATEGORY IS '类别 1.折扣则让项目 2.目标退佣已经免费货品，3.屈臣氏供应商服务费';
COMMENT ON COLUMN TTA_CLAUSE_TREE_H.GLOBAL_VALUE IS '全局值';
COMMENT ON COLUMN TTA_CLAUSE_TREE_H.GLOBAL_VALUE_TTA IS '全局值 TTA';
COMMENT ON COLUMN TTA_CLAUSE_TREE_H.GLOBAL_VALUE_FEE IS '全局值 FEE';
COMMENT ON COLUMN TTA_CLAUSE_TREE_H.OLD_ORDER_NO IS '历史序号';

-- ----------------------------
-- Table structure for TTA_COLLECT_TYPE_LINE
-- ----------------------------
DROP TABLE TTA_COLLECT_TYPE_LINE;
CREATE TABLE TTA_COLLECT_TYPE_LINE (
COLLECT_TYPE_ID NUMBER NOT NULL ,
CLAUSE_ID NUMBER NOT NULL ,
COLLECT_TYPE VARCHAR2(50 BYTE) NULL ,
STANDARD_VALUE CHAR(50 BYTE) NOT NULL ,
UNIT_VALUE VARCHAR2(50 BYTE) NOT NULL ,
IS_ENABLE VARCHAR2(2 BYTE) NOT NULL ,
IS_DEFAULT_VALUE VARCHAR2(2 BYTE) NOT NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT sysdate  NOT NULL ,
CREATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATE_DATE DATE DEFAULT sysdate  NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
TEAM_FRAMEWORK_ID NUMBER NOT NULL ,
DELETE_FLAG NUMBER NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE TTA_COLLECT_TYPE_LINE IS '收取方式行信息表';
COMMENT ON COLUMN TTA_COLLECT_TYPE_LINE.COLLECT_TYPE_ID IS '主键';
COMMENT ON COLUMN TTA_COLLECT_TYPE_LINE.CLAUSE_ID IS '引用tta_clause_tree_h 主键 id';
COMMENT ON COLUMN TTA_COLLECT_TYPE_LINE.COLLECT_TYPE IS '收取方式';
COMMENT ON COLUMN TTA_COLLECT_TYPE_LINE.STANDARD_VALUE IS '标准值';
COMMENT ON COLUMN TTA_COLLECT_TYPE_LINE.UNIT_VALUE IS '单位值';
COMMENT ON COLUMN TTA_COLLECT_TYPE_LINE.IS_ENABLE IS '1：启用，0：禁用';
COMMENT ON COLUMN TTA_COLLECT_TYPE_LINE.IS_DEFAULT_VALUE IS '是否默认值,1：是，0：否';
COMMENT ON COLUMN TTA_COLLECT_TYPE_LINE.TEAM_FRAMEWORK_ID IS '条款框架头ID';
COMMENT ON COLUMN TTA_COLLECT_TYPE_LINE.DELETE_FLAG IS '是否删除（0：未删除；1：已删除）';

-- ----------------------------
-- Table structure for TTA_COLLECT_TYPE_LINE_H
-- ----------------------------
DROP TABLE TTA_COLLECT_TYPE_LINE_H;
CREATE TABLE TTA_COLLECT_TYPE_LINE_H (
COLLECT_TYPE_ID NUMBER NOT NULL ,
CLAUSE_ID NUMBER NOT NULL ,
COLLECT_TYPE VARCHAR2(50 BYTE) NULL ,
STANDARD_VALUE CHAR(50 BYTE) NOT NULL ,
UNIT_VALUE VARCHAR2(50 BYTE) NOT NULL ,
IS_ENABLE VARCHAR2(2 BYTE) NOT NULL ,
IS_DEFAULT_VALUE VARCHAR2(2 BYTE) NOT NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT sysdate  NOT NULL ,
CREATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATE_DATE DATE DEFAULT sysdate  NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
TEAM_FRAMEWORK_ID NUMBER NOT NULL ,
RESOUCE_ID NUMBER NULL ,
DELETE_FLAG NUMBER NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN TTA_COLLECT_TYPE_LINE_H.TEAM_FRAMEWORK_ID IS '条款框架头ID';
COMMENT ON COLUMN TTA_COLLECT_TYPE_LINE_H.RESOUCE_ID IS '来源ID';
COMMENT ON COLUMN TTA_COLLECT_TYPE_LINE_H.DELETE_FLAG IS '是否删除（0：未删除；1：已删除）';

-- ----------------------------
-- Table structure for TTA_CONTRACT_DETAIL
-- ----------------------------
DROP TABLE TTA_CONTRACT_DETAIL;
CREATE TABLE TTA_CONTRACT_DETAIL (
CONTRACT_D_ID NUMBER NOT NULL ,
CONTRACT_L_ID NUMBER NULL ,
CONTRACT_H_ID NUMBER NULL ,
VENDOR_NBR VARCHAR2(50 BYTE) NULL ,
VENDOR_NAME VARCHAR2(200 BYTE) NULL ,
DEPT_CODE VARCHAR2(50 BYTE) NULL ,
BRAND_CN VARCHAR2(260 BYTE) NULL ,
PURCHASE NUMBER(8,2) NULL ,
SALES NUMBER(8,2) NULL ,
SALES_AREA VARCHAR2(200 BYTE) NULL ,
DELIVERY_GRANARY VARCHAR2(200 BYTE) NULL ,
OI_TYPE VARCHAR2(50 BYTE) NULL ,
TERMS_NAME VARCHAR2(100 BYTE) NULL ,
COLLECTION_METHOD VARCHAR2(100 BYTE) NULL ,
TTA_VALUE VARCHAR2(50 BYTE) NULL ,
UNIT VARCHAR2(50 BYTE) NULL ,
TERMS VARCHAR2(200 BYTE) NULL ,
FEE_INTAS NUMBER(8,2) NULL ,
FEE_NOTAX NUMBER(8,2) NULL ,
STATUS VARCHAR2(2 BYTE) NULL ,
VERSION_NUM NUMBER NULL ,
CREATION_DATE DATE DEFAULT sysdate  NOT NULL ,
CREATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATE_DATE DATE DEFAULT sysdate  NOT NULL ,
LAST_UPDATE_LOGIN NUMBER NULL ,
DEPT_DESC VARCHAR2(350 BYTE) NULL ,
BRAND VARCHAR2(50 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for TTA_CONTRACT_HEADER
-- ----------------------------
DROP TABLE TTA_CONTRACT_HEADER;
CREATE TABLE TTA_CONTRACT_HEADER (
CONTRACT_H_ID NUMBER NOT NULL ,
CONTRACT_CODE VARCHAR2(50 BYTE) NULL ,
VENDOR_NBR VARCHAR2(50 BYTE) NULL ,
VENDOR_NAME VARCHAR2(200 BYTE) NULL ,
BILL_STATUS VARCHAR2(10 BYTE) NULL ,
PROPOSAL_CODE VARCHAR2(200 BYTE) NULL ,
PROPOSAL_YEAR NUMBER NULL ,
PROPOSAL_VERSION NUMBER NULL ,
IS_SPLIT VARCHAR2(2 BYTE) NULL ,
CONFIRM_DATE DATE NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT sysdate  NOT NULL ,
CREATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATE_DATE DATE DEFAULT sysdate  NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
SUBMIT_DATE DATE NULL ,
IS_MULTIPLE_VENDOR VARCHAR2(2 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE TTA_CONTRACT_HEADER IS ' 合同头信息';
COMMENT ON COLUMN TTA_CONTRACT_HEADER.CONTRACT_H_ID IS '主键';
COMMENT ON COLUMN TTA_CONTRACT_HEADER.CONTRACT_CODE IS '合同编号';
COMMENT ON COLUMN TTA_CONTRACT_HEADER.VENDOR_NBR IS '供应商编码';
COMMENT ON COLUMN TTA_CONTRACT_HEADER.VENDOR_NAME IS '供应商名称';
COMMENT ON COLUMN TTA_CONTRACT_HEADER.BILL_STATUS IS '单据状态';
COMMENT ON COLUMN TTA_CONTRACT_HEADER.PROPOSAL_CODE IS 'proposal合同号';
COMMENT ON COLUMN TTA_CONTRACT_HEADER.PROPOSAL_YEAR IS 'proposal年度';
COMMENT ON COLUMN TTA_CONTRACT_HEADER.PROPOSAL_VERSION IS 'proposal版本号';
COMMENT ON COLUMN TTA_CONTRACT_HEADER.IS_SPLIT IS '是否合同拆分,Y/N';
COMMENT ON COLUMN TTA_CONTRACT_HEADER.CONFIRM_DATE IS '确认日期';
COMMENT ON COLUMN TTA_CONTRACT_HEADER.SUBMIT_DATE IS '提交日期';
COMMENT ON COLUMN TTA_CONTRACT_HEADER.IS_MULTIPLE_VENDOR IS '是否指定多个供应商';

-- ----------------------------
-- Table structure for TTA_CONTRACT_LINE
-- ----------------------------
DROP TABLE TTA_CONTRACT_LINE;
CREATE TABLE TTA_CONTRACT_LINE (
CONTRACT_L_ID NUMBER NOT NULL ,
CONTRACT_H_ID NUMBER NULL ,
VENDOR_CODE VARCHAR2(50 BYTE) NULL ,
VENDOR_NAME VARCHAR2(200 BYTE) NULL ,
ORG_CODE VARCHAR2(50 BYTE) NULL ,
TRADE_MARK VARCHAR2(2000 BYTE) NULL ,
PURCHASE NUMBER(8,2) NULL ,
SALES NUMBER(8,2) NULL ,
SALES_AREA VARCHAR2(200 BYTE) NULL ,
DELIVERY_GRANARY VARCHAR2(200 BYTE) NULL ,
OI_TYPE VARCHAR2(50 BYTE) NULL ,
TERMS_CN VARCHAR2(200 BYTE) NULL ,
TERMS_EN VARCHAR2(200 BYTE) NULL ,
TTA_VALUE VARCHAR2(50 BYTE) NULL ,
FEE_INTAS NUMBER(8,2) NULL ,
FEE_NOTAX NUMBER(8,2) NULL ,
STATUS VARCHAR2(2 BYTE) NULL ,
PROPOSAL_ID NUMBER NULL ,
CLAUSE_ID NUMBER NULL ,
INCOME_TYPE VARCHAR2(200 BYTE) NULL ,
Y_TERMS VARCHAR2(200 BYTE) NULL ,
COLLECT_TYPE VARCHAR2(20 BYTE) NULL ,
REFERENCE_STANDARD NUMBER NULL ,
UNIT VARCHAR2(50 BYTE) NULL ,
TERMS_SYSTEM VARCHAR2(500 BYTE) NULL ,
PROPOSAL_YEAR VARCHAR2(50 BYTE) NULL ,
ORDER_NO VARCHAR2(500 BYTE) NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT sysdate  NOT NULL ,
CREATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATE_DATE DATE DEFAULT sysdate  NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
TERM_CATEGORY VARCHAR2(2 BYTE) NULL ,
REMARK VARCHAR2(500 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE TTA_CONTRACT_LINE IS '合同行数据';
COMMENT ON COLUMN TTA_CONTRACT_LINE.CONTRACT_L_ID IS '主键';
COMMENT ON COLUMN TTA_CONTRACT_LINE.CONTRACT_H_ID IS '合同头id，为空标识原始数据，否则表示拆分后数据';
COMMENT ON COLUMN TTA_CONTRACT_LINE.VENDOR_CODE IS '供应商编码';
COMMENT ON COLUMN TTA_CONTRACT_LINE.VENDOR_NAME IS '供应商名称';
COMMENT ON COLUMN TTA_CONTRACT_LINE.ORG_CODE IS '部门编码';
COMMENT ON COLUMN TTA_CONTRACT_LINE.TRADE_MARK IS '商标';
COMMENT ON COLUMN TTA_CONTRACT_LINE.PURCHASE IS 'PURCHASE';
COMMENT ON COLUMN TTA_CONTRACT_LINE.SALES IS 'SALES';
COMMENT ON COLUMN TTA_CONTRACT_LINE.SALES_AREA IS '销售区域';
COMMENT ON COLUMN TTA_CONTRACT_LINE.DELIVERY_GRANARY IS '配送仓库';
COMMENT ON COLUMN TTA_CONTRACT_LINE.OI_TYPE IS 'OI_TYPE';
COMMENT ON COLUMN TTA_CONTRACT_LINE.TERMS_CN IS '条款中文名称';
COMMENT ON COLUMN TTA_CONTRACT_LINE.TERMS_EN IS '条款英文名称';
COMMENT ON COLUMN TTA_CONTRACT_LINE.TTA_VALUE IS 'TTA值(Y_YEAR)';
COMMENT ON COLUMN TTA_CONTRACT_LINE.FEE_INTAS IS '费用预估（含税）';
COMMENT ON COLUMN TTA_CONTRACT_LINE.FEE_NOTAX IS '费用预估（不含税）';
COMMENT ON COLUMN TTA_CONTRACT_LINE.STATUS IS '状态: 0 初始化状态，0取消，1生效';
COMMENT ON COLUMN TTA_CONTRACT_LINE.PROPOSAL_ID IS 'PROPOSAL ID';
COMMENT ON COLUMN TTA_CONTRACT_LINE.CLAUSE_ID IS 'CLAUSE_ID';
COMMENT ON COLUMN TTA_CONTRACT_LINE.INCOME_TYPE IS '收入类型';
COMMENT ON COLUMN TTA_CONTRACT_LINE.Y_TERMS IS 'Y年度条款';
COMMENT ON COLUMN TTA_CONTRACT_LINE.COLLECT_TYPE IS '收取方式';
COMMENT ON COLUMN TTA_CONTRACT_LINE.REFERENCE_STANDARD IS '参考标准';
COMMENT ON COLUMN TTA_CONTRACT_LINE.UNIT IS '单位';
COMMENT ON COLUMN TTA_CONTRACT_LINE.TERMS_SYSTEM IS 'Y年度条款（System）';
COMMENT ON COLUMN TTA_CONTRACT_LINE.PROPOSAL_YEAR IS 'PROPOSAL 制作年度';
COMMENT ON COLUMN TTA_CONTRACT_LINE.ORDER_NO IS '排序号';
COMMENT ON COLUMN TTA_CONTRACT_LINE.TERM_CATEGORY IS '条款类别 1：折扣折让项目 2.目标退佣及免费货品 3.屈臣氏为供应商提供服务而收取的业务服务费用';
COMMENT ON COLUMN TTA_CONTRACT_LINE.REMARK IS '备注';

-- ----------------------------
-- Table structure for TTA_CONTRACT_LINE_H
-- ----------------------------
DROP TABLE TTA_CONTRACT_LINE_H;
CREATE TABLE TTA_CONTRACT_LINE_H (
CONTRACT_L_ID NUMBER NULL ,
CONTRACT_H_ID NUMBER NULL ,
VENDOR_CODE VARCHAR2(50 BYTE) NULL ,
VENDOR_NAME VARCHAR2(200 BYTE) NULL ,
ORG_CODE VARCHAR2(50 BYTE) NULL ,
TRADE_MARK VARCHAR2(2000 BYTE) NULL ,
PURCHASE NUMBER(8,2) NULL ,
SALES NUMBER(8,2) NULL ,
SALES_AREA VARCHAR2(200 BYTE) NULL ,
DELIVERY_GRANARY VARCHAR2(200 BYTE) NULL ,
OI_TYPE VARCHAR2(50 BYTE) NULL ,
TERMS_CN VARCHAR2(200 BYTE) NULL ,
TERMS_EN VARCHAR2(200 BYTE) NULL ,
TTA_VALUE VARCHAR2(50 BYTE) NULL ,
FEE_INTAS NUMBER(8,2) NULL ,
FEE_NOTAX NUMBER(8,2) NULL ,
STATUS VARCHAR2(2 BYTE) NULL ,
PROPOSAL_ID NUMBER NULL ,
CLAUSE_ID NUMBER NULL ,
INCOME_TYPE VARCHAR2(200 BYTE) NULL ,
Y_TERMS VARCHAR2(200 BYTE) NULL ,
COLLECT_TYPE VARCHAR2(20 BYTE) NULL ,
REFERENCE_STANDARD NUMBER NULL ,
UNIT VARCHAR2(50 BYTE) NULL ,
TERMS_SYSTEM VARCHAR2(500 BYTE) NULL ,
PROPOSAL_YEAR VARCHAR2(50 BYTE) NULL ,
ORDER_NO VARCHAR2(500 BYTE) NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT sysdate  NOT NULL ,
CREATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATE_DATE DATE DEFAULT sysdate  NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NOT NULL ,
CONTRACT_LH_ID NUMBER NOT NULL ,
TERM_CATEGORY VARCHAR2(2 BYTE) NULL ,
REMARK VARCHAR2(500 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE TTA_CONTRACT_LINE_H IS '合同行数据';
COMMENT ON COLUMN TTA_CONTRACT_LINE_H.CONTRACT_L_ID IS '主键';
COMMENT ON COLUMN TTA_CONTRACT_LINE_H.CONTRACT_H_ID IS '合同头id，为空标识原始数据，否则表示拆分后数据';
COMMENT ON COLUMN TTA_CONTRACT_LINE_H.VENDOR_CODE IS '供应商编码';
COMMENT ON COLUMN TTA_CONTRACT_LINE_H.VENDOR_NAME IS '供应商名称';
COMMENT ON COLUMN TTA_CONTRACT_LINE_H.ORG_CODE IS '部门编码';
COMMENT ON COLUMN TTA_CONTRACT_LINE_H.TRADE_MARK IS '商标';
COMMENT ON COLUMN TTA_CONTRACT_LINE_H.PURCHASE IS 'PURCHASE';
COMMENT ON COLUMN TTA_CONTRACT_LINE_H.SALES IS 'SALES';
COMMENT ON COLUMN TTA_CONTRACT_LINE_H.SALES_AREA IS '销售区域';
COMMENT ON COLUMN TTA_CONTRACT_LINE_H.DELIVERY_GRANARY IS '配送仓库';
COMMENT ON COLUMN TTA_CONTRACT_LINE_H.OI_TYPE IS 'OI_TYPE';
COMMENT ON COLUMN TTA_CONTRACT_LINE_H.TERMS_CN IS '条款中文名称';
COMMENT ON COLUMN TTA_CONTRACT_LINE_H.TERMS_EN IS '条款英文名称';
COMMENT ON COLUMN TTA_CONTRACT_LINE_H.TTA_VALUE IS 'TTA值(Y_YEAR)';
COMMENT ON COLUMN TTA_CONTRACT_LINE_H.FEE_INTAS IS '费用预估（含税）';
COMMENT ON COLUMN TTA_CONTRACT_LINE_H.FEE_NOTAX IS '费用预估（不含税）';
COMMENT ON COLUMN TTA_CONTRACT_LINE_H.STATUS IS '状态: 0 取消，1有效';
COMMENT ON COLUMN TTA_CONTRACT_LINE_H.PROPOSAL_ID IS 'PROPOSAL ID';
COMMENT ON COLUMN TTA_CONTRACT_LINE_H.CLAUSE_ID IS 'CLAUSE_ID';
COMMENT ON COLUMN TTA_CONTRACT_LINE_H.INCOME_TYPE IS '收入类型';
COMMENT ON COLUMN TTA_CONTRACT_LINE_H.Y_TERMS IS 'Y年度条款';
COMMENT ON COLUMN TTA_CONTRACT_LINE_H.COLLECT_TYPE IS '收取方式';
COMMENT ON COLUMN TTA_CONTRACT_LINE_H.REFERENCE_STANDARD IS '参考标准';
COMMENT ON COLUMN TTA_CONTRACT_LINE_H.UNIT IS '单位';
COMMENT ON COLUMN TTA_CONTRACT_LINE_H.TERMS_SYSTEM IS 'Y年度条款（System）';
COMMENT ON COLUMN TTA_CONTRACT_LINE_H.PROPOSAL_YEAR IS 'PROPOSAL 制作年度';
COMMENT ON COLUMN TTA_CONTRACT_LINE_H.ORDER_NO IS '排序号';
COMMENT ON COLUMN TTA_CONTRACT_LINE_H.CONTRACT_LH_ID IS '外键';
COMMENT ON COLUMN TTA_CONTRACT_LINE_H.TERM_CATEGORY IS '条款类别 1：折扣折让项目 2.目标退佣及免费货品 3.屈臣氏为供应商提供服务而收取的业务服务费用';
COMMENT ON COLUMN TTA_CONTRACT_LINE_H.REMARK IS '备注';

-- ----------------------------
-- Table structure for TTA_DEPT_FEE
-- ----------------------------
DROP TABLE TTA_DEPT_FEE;
CREATE TABLE TTA_DEPT_FEE (
DEPTFEE_LINE_ID NUMBER NOT NULL ,
DEPT_FEE_ID NUMBER NOT NULL ,
LINE_CODE VARCHAR2(50 BYTE) NOT NULL ,
PARENT_LINE_CODE VARCHAR2(50 BYTE) NULL ,
SORT_ID NUMBER NULL ,
ITEM_NBR VARCHAR2(50 BYTE) NULL ,
CREATION_DATE DATE DEFAULT SYSDATE  NULL ,
CREATED_BY NUMBER NULL ,
LAST_UPDATED_BY NUMBER NULL ,
LAST_UPDATE_DATE DATE DEFAULT SYSDATE  NULL ,
LAST_UPDATE_LOGIN NUMBER NULL ,
VERSION_NUM NUMBER NULL ,
REMARK VARCHAR2(1500 BYTE) NULL ,
PROPOSAL_ID NUMBER NULL ,
ITEM_DESC_CN VARCHAR2(260 BYTE) NULL ,
ITEM_DESC_EN VARCHAR2(260 BYTE) NULL ,
UNIT1 VARCHAR2(50 BYTE) NULL ,
STANDARD_VALUE1 NUMBER NULL ,
UNIT2 VARCHAR2(50 BYTE) NULL ,
STANDARD_VALUE2 NUMBER NULL ,
UNIT3 VARCHAR2(50 BYTE) NULL ,
STANDARD_VALUE3 NUMBER NULL ,
UNIT4 VARCHAR2(50 BYTE) NULL ,
STANDARD_VALUE4 NUMBER NULL ,
UNIT5 VARCHAR2(50 BYTE) NULL ,
STANDARD_VALUE5 NUMBER NULL ,
UNIT VARCHAR2(50 BYTE) NULL ,
ACCORD_TYPE VARCHAR2(50 BYTE) NULL ,
DIRECTORY_LEVEL VARCHAR2(5 BYTE) NULL ,
UNIT_VALUE NUMBER(8,2) NULL ,
STANDARD_UNIT_VALUE VARCHAR2(255 BYTE) DEFAULT '[{value:20, unit:xxx},{value:23, unit:xxx}]'  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE TTA_DEPT_FEE IS '部门协定行信息';
COMMENT ON COLUMN TTA_DEPT_FEE.LINE_CODE IS '序号';
COMMENT ON COLUMN TTA_DEPT_FEE.PARENT_LINE_CODE IS '上级序号';
COMMENT ON COLUMN TTA_DEPT_FEE.ITEM_DESC_CN IS 'item中文名';
COMMENT ON COLUMN TTA_DEPT_FEE.ITEM_DESC_EN IS 'item英文名';
COMMENT ON COLUMN TTA_DEPT_FEE.UNIT1 IS '单位';
COMMENT ON COLUMN TTA_DEPT_FEE.STANDARD_VALUE1 IS '协定标准1';
COMMENT ON COLUMN TTA_DEPT_FEE.UNIT2 IS '单位';
COMMENT ON COLUMN TTA_DEPT_FEE.STANDARD_VALUE2 IS '协定标准2';
COMMENT ON COLUMN TTA_DEPT_FEE.UNIT3 IS '单位';
COMMENT ON COLUMN TTA_DEPT_FEE.STANDARD_VALUE3 IS '协定标准3';
COMMENT ON COLUMN TTA_DEPT_FEE.UNIT IS '公司标准（单位）';
COMMENT ON COLUMN TTA_DEPT_FEE.ACCORD_TYPE IS '费用类型';
COMMENT ON COLUMN TTA_DEPT_FEE.DIRECTORY_LEVEL IS '目录级别';
COMMENT ON COLUMN TTA_DEPT_FEE.UNIT_VALUE IS '公司标准值';
COMMENT ON COLUMN TTA_DEPT_FEE.STANDARD_UNIT_VALUE IS '协定标准设置的 标准值 和单位';

-- ----------------------------
-- Table structure for TTA_DEPT_FEE_HEADER
-- ----------------------------
DROP TABLE TTA_DEPT_FEE_HEADER;
CREATE TABLE TTA_DEPT_FEE_HEADER (
DEPT_FEE_ID NUMBER NOT NULL ,
YEAR_CODE VARCHAR2(50 BYTE) NOT NULL ,
ACCORD_TYPE VARCHAR2(10 BYTE) NULL ,
FEE_ITEM VARCHAR2(320 BYTE) NULL ,
COMPANY_UNIT VARCHAR2(50 BYTE) NULL ,
DEPT_CODE1 NUMBER NULL ,
DEPT_CODE2 NUMBER NULL ,
DEPT_CODE3 NUMBER NULL ,
DEPT_CODE4 NUMBER NULL ,
DEPT_CODE5 NUMBER NULL ,
REMARK VARCHAR2(2030 BYTE) NULL ,
CREATION_DATE DATE DEFAULT SYSDATE  NULL ,
CREATED_BY NUMBER NULL ,
LAST_UPDATED_BY NUMBER NULL ,
LAST_UPDATE_DATE DATE DEFAULT SYSDATE  NULL ,
LAST_UPDATE_LOGIN NUMBER NULL ,
VERSION_NUM NUMBER NULL ,
PROPOSAL_ID NUMBER NULL ,
IS_CONF CHAR(1 BYTE) NULL ,
IS_TRANS_DEPT CHAR(1 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE TTA_DEPT_FEE_HEADER IS '协定收费标准';
COMMENT ON COLUMN TTA_DEPT_FEE_HEADER.YEAR_CODE IS '年度';
COMMENT ON COLUMN TTA_DEPT_FEE_HEADER.ACCORD_TYPE IS '费用类型';
COMMENT ON COLUMN TTA_DEPT_FEE_HEADER.FEE_ITEM IS 'ITEM项目';
COMMENT ON COLUMN TTA_DEPT_FEE_HEADER.COMPANY_UNIT IS '公司标准';
COMMENT ON COLUMN TTA_DEPT_FEE_HEADER.DEPT_CODE1 IS '协定标准1(Skincare)';
COMMENT ON COLUMN TTA_DEPT_FEE_HEADER.DEPT_CODE2 IS '协定标准2(Person Care)';
COMMENT ON COLUMN TTA_DEPT_FEE_HEADER.IS_CONF IS '是否确认';
COMMENT ON COLUMN TTA_DEPT_FEE_HEADER.IS_TRANS_DEPT IS '是否跨部门';

-- ----------------------------
-- Table structure for TTA_DEPT_IN
-- ----------------------------
DROP TABLE TTA_DEPT_IN;
CREATE TABLE TTA_DEPT_IN (
CODE VARCHAR2(100 BYTE) NOT NULL ,
NAME_CN VARCHAR2(100 BYTE) NOT NULL ,
NAME_EN VARCHAR2(100 BYTE) NOT NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT sysdate  NULL ,
CREATED_BY NUMBER DEFAULT -1  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT -1  NULL ,
LAST_UPDATE_DATE DATE DEFAULT sysdate  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT -1  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE TTA_DEPT_IN IS '部门表';
COMMENT ON COLUMN TTA_DEPT_IN.CODE IS '部门编码';
COMMENT ON COLUMN TTA_DEPT_IN.NAME_CN IS '部门 中文名称';
COMMENT ON COLUMN TTA_DEPT_IN.NAME_EN IS '部门 英文名称';

-- ----------------------------
-- Table structure for TTA_FEE_DEPT_DETAIL
-- ----------------------------
DROP TABLE TTA_FEE_DEPT_DETAIL;
-- Create table
-- Create table
create table TTA_FEE_DEPT_DETAIL
(
  feedept_detail_id INTEGER not null,
  feedept_id        INTEGER not null,
  feedept_line_id   INTEGER not null,
  dept_code         VARCHAR2(50) not null,
  dept_desc         VARCHAR2(200) not null,
  creation_date     DATE default SYSDATE,
  created_by        INTEGER,
  last_updated_by   INTEGER,
  last_update_date  DATE default SYSDATE,
  last_update_login INTEGER,
  version_num       INTEGER,
  unit              VARCHAR2(100),
  standard_value    NUMBER,
  remark            VARCHAR2(1500)
)
tablespace TTA_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
-- Add comments to the table
comment on table TTA_FEE_DEPT_DETAIL
  is '单位（明细）';
-- Add comments to the columns
comment on column TTA_FEE_DEPT_DETAIL.feedept_detail_id
  is '明细ID';
comment on column TTA_FEE_DEPT_DETAIL.feedept_id
  is '头表ID';
comment on column TTA_FEE_DEPT_DETAIL.feedept_line_id
  is '行表ID';
comment on column TTA_FEE_DEPT_DETAIL.dept_code
  is '部门编码';
comment on column TTA_FEE_DEPT_DETAIL.dept_desc
  is '部门名称';
comment on column TTA_FEE_DEPT_DETAIL.unit
  is '单位';
comment on column TTA_FEE_DEPT_DETAIL.standard_value
  is '标准值';
-- Create/Recreate indexes
create unique index FEEDEPT_DETAIL_U1 on TTA_FEE_DEPT_DETAIL (FEEDEPT_LINE_ID, DEPT_CODE, UNIT)
  tablespace TTA_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
-- Create/Recreate primary, unique and foreign key constraints
alter table TTA_FEE_DEPT_DETAIL
  add constraint PK_FEEDEPT_DETAIL_ID primary key (FEEDEPT_DETAIL_ID)
  using index
  tablespace TTA_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );


-- ----------------------------
-- Table structure for TTA_FEE_DEPT_HEADER
-- ----------------------------
DROP TABLE TTA_FEE_DEPT_HEADER;
-- Create table
-- Create table
-- Create table
create table TTA_FEE_DEPT_HEADER
(
  feedept_id        INTEGER not null,
  year_code         VARCHAR2(50) not null,
  accord_type       VARCHAR2(10) not null,
  status            VARCHAR2(10) not null,
  creation_date     DATE default SYSDATE,
  created_by        INTEGER,
  last_updated_by   INTEGER,
  last_update_date  DATE default SYSDATE,
  last_update_login INTEGER,
  version_num       INTEGER,
  approve_date      DATE,
  source_fee_id     INTEGER,
  is_alert          VARCHAR2(10),
  version_code      VARCHAR2(20),
  remark            VARCHAR2(1500),
  dept_code         VARCHAR2(50) not null,
  dept_desc         VARCHAR2(200) not null,
  dept_id           INTEGER not null
)
tablespace TTA_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
-- Add comments to the table
comment on table TTA_FEE_DEPT_HEADER
  is '部门协定标准（头）';
-- Add comments to the columns
comment on column TTA_FEE_DEPT_HEADER.year_code
  is '年度';
comment on column TTA_FEE_DEPT_HEADER.accord_type
  is '协定标准类型';
comment on column TTA_FEE_DEPT_HEADER.status
  is '状态';
comment on column TTA_FEE_DEPT_HEADER.approve_date
  is '审批时间';
comment on column TTA_FEE_DEPT_HEADER.source_fee_id
  is '来源ID';
comment on column TTA_FEE_DEPT_HEADER.is_alert
  is '是否变更';
comment on column TTA_FEE_DEPT_HEADER.version_code
  is '版本号';
comment on column TTA_FEE_DEPT_HEADER.remark
  is '备注';
comment on column TTA_FEE_DEPT_HEADER.dept_code
  is '部门编码';
comment on column TTA_FEE_DEPT_HEADER.dept_desc
  is '部门名称';
comment on column TTA_FEE_DEPT_HEADER.dept_id
  is '部门ID';
-- Create/Recreate indexes
create index FEEDEPT_ID_U1 on TTA_FEE_DEPT_HEADER (YEAR_CODE, DEPT_CODE)
  tablespace TTA_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
-- Create/Recreate primary, unique and foreign key constraints
alter table TTA_FEE_DEPT_HEADER
  add constraint PK_FEEDEPT_ID primary key (FEEDEPT_ID)
  using index
  tablespace TTA_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );




-- ----------------------------
-- Table structure for TTA_FEE_DEPT_LINE
-- ----------------------------
DROP TABLE TTA_FEE_DEPT_LINE;
CREATE TABLE TTA_FEE_DEPT_LINE (
FEEDEPT_LINE_ID NUMBER NOT NULL ,
LINE_CODE VARCHAR2(50 BYTE) NULL ,
PARENT_LINE_ID NUMBER NULL ,
SORT_ID NUMBER NULL ,
ITEM_NBR VARCHAR2(50 BYTE) NULL ,
CREATION_DATE DATE DEFAULT SYSDATE  NULL ,
CREATED_BY NUMBER NULL ,
LAST_UPDATED_BY NUMBER NULL ,
LAST_UPDATE_DATE DATE DEFAULT SYSDATE  NULL ,
LAST_UPDATE_LOGIN NUMBER NULL ,
VERSION_NUM NUMBER NULL ,
IF_EFFECT CHAR(1 BYTE) NULL ,
REMARK VARCHAR2(1500 BYTE) NULL ,
FEEDEPT_ID NUMBER NOT NULL ,
SOURCE_LINE_ID NUMBER NULL ,
ITEM_DESC_CN VARCHAR2(260 BYTE) NULL ,
ITEM_DESC_EN VARCHAR2(260 BYTE) NULL ,
UNIT VARCHAR2(50 BYTE) NULL ,
STANDARD_VALUE NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE TTA_FEE_DEPT_LINE IS '协定标准明细（行）';
COMMENT ON COLUMN TTA_FEE_DEPT_LINE.FEEDEPT_LINE_ID IS '行ID';
COMMENT ON COLUMN TTA_FEE_DEPT_LINE.LINE_CODE IS '编号';
COMMENT ON COLUMN TTA_FEE_DEPT_LINE.PARENT_LINE_ID IS '上级ID';
COMMENT ON COLUMN TTA_FEE_DEPT_LINE.SORT_ID IS '排序号';
COMMENT ON COLUMN TTA_FEE_DEPT_LINE.ITEM_NBR IS '物料编码';
COMMENT ON COLUMN TTA_FEE_DEPT_LINE.IF_EFFECT IS '是否生效';
COMMENT ON COLUMN TTA_FEE_DEPT_LINE.REMARK IS '备注';
COMMENT ON COLUMN TTA_FEE_DEPT_LINE.FEEDEPT_ID IS '头表ID';
COMMENT ON COLUMN TTA_FEE_DEPT_LINE.SOURCE_LINE_ID IS '来源行ID';

-- ----------------------------
-- Table structure for TTA_GROUP
-- ----------------------------
DROP TABLE TTA_GROUP;
CREATE TABLE TTA_GROUP (
GROUP_ID NUMBER NOT NULL ,
GROUP_CODE VARCHAR2(50 BYTE) NOT NULL ,
GROUP_DESC VARCHAR2(230 BYTE) NOT NULL ,
REMARK VARCHAR2(2030 BYTE) NULL ,
SOURCE_CODE VARCHAR2(50 BYTE) NULL ,
CREATION_DATE DATE DEFAULT SYSDATE  NULL ,
CREATED_BY NUMBER NULL ,
LAST_UPDATED_BY NUMBER NULL ,
LAST_UPDATE_DATE DATE DEFAULT SYSDATE  NULL ,
LAST_UPDATE_LOGIN NUMBER NULL ,
VERSION_NUM NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE;



-- ----------------------------
-- Table structure for TTA_MARKET_IN
-- ----------------------------
DROP TABLE TTA_MARKET_IN;
CREATE TABLE TTA_MARKET_IN (
MARKET_CODE VARCHAR2(100 BYTE) NOT NULL ,
MARKET_NAME VARCHAR2(100 BYTE) NOT NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT sysdate  NULL ,
CREATED_BY NUMBER DEFAULT -1  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT -1  NULL ,
LAST_UPDATE_DATE DATE DEFAULT sysdate  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE TTA_MARKET_IN IS '市场表';
COMMENT ON COLUMN TTA_MARKET_IN.MARKET_CODE IS '市场编号';
COMMENT ON COLUMN TTA_MARKET_IN.MARKET_NAME IS '市场名称';

-- ----------------------------
-- Table structure for TTA_NEW_FEE
-- ----------------------------
DROP TABLE TTA_NEW_FEE;
CREATE TABLE TTA_NEW_FEE (
NEW_FEE_ID NUMBER NOT NULL ,
NEW_ITEM VARCHAR2(20 BYTE) NULL ,
COMPANY_FEE NUMBER NULL ,
MTC VARCHAR2(20 BYTE) NULL ,
CHARGES NUMBER NULL ,
NEW_QTY NUMBER NULL ,
OUT_MTC VARCHAR2(20 BYTE) NULL ,
OUT_CHARGES NUMBER NULL ,
OUT_UNIT VARCHAR2(20 BYTE) NULL ,
YN_TERMS VARCHAR2(100 BYTE) NULL ,
WN_TERMS VARCHAR2(100 BYTE) NULL ,
YN_FEE_NOTAX NUMBER NULL ,
YN_FEE_TAX NUMBER NULL ,
REMARK VARCHAR2(2030 BYTE) NULL ,
CREATION_DATE DATE DEFAULT SYSDATE  NULL ,
CREATED_BY NUMBER NULL ,
LAST_UPDATED_BY NUMBER NULL ,
LAST_UPDATE_DATE DATE DEFAULT SYSDATE  NULL ,
LAST_UPDATE_LOGIN NUMBER NULL ,
VERSION_NUM NUMBER NULL ,
PROPOSAL_ID NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for TTA_NEWBREED_EXTEND_HEADER
-- ----------------------------
DROP TABLE TTA_NEWBREED_EXTEND_HEADER;
CREATE TABLE TTA_NEWBREED_EXTEND_HEADER (
NEWBREED_EXTEND_H_ID NUMBER NOT NULL ,
PROPOSAL_ID NUMBER NULL ,
CURRENT_YEAR_TERM VARCHAR2(500 BYTE) NULL ,
LAST_YEAR_TERM VARCHAR2(500 BYTE) NULL ,
INCLUDE_TAX NUMBER(8,2) NULL ,
EXCLUDE_TAX NUMBER(8,2) NULL ,
COLLECT_RANGE VARCHAR2(50 BYTE) NULL ,
STORE_STYLE VARCHAR2(100 BYTE) NULL ,
STATUS VARCHAR2(50 BYTE) NULL ,
REMARK VARCHAR2(500 BYTE) NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT SYSDATE  NOT NULL ,
CREATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATE_DATE DATE DEFAULT SYSDATE  NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
NEW_PAYMENT VARCHAR2(1 BYTE) NULL ,
NEW_SHOP_NUM NUMBER NULL ,
YEAR VARCHAR2(30 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE TTA_NEWBREED_EXTEND_HEADER IS '新品种宣传推广服务费用头表';
COMMENT ON COLUMN TTA_NEWBREED_EXTEND_HEADER.NEWBREED_EXTEND_H_ID IS '主键';
COMMENT ON COLUMN TTA_NEWBREED_EXTEND_HEADER.PROPOSAL_ID IS '关联proposal头表ID ';
COMMENT ON COLUMN TTA_NEWBREED_EXTEND_HEADER.CURRENT_YEAR_TERM IS '当年条款';
COMMENT ON COLUMN TTA_NEWBREED_EXTEND_HEADER.LAST_YEAR_TERM IS '往年条款';
COMMENT ON COLUMN TTA_NEWBREED_EXTEND_HEADER.INCLUDE_TAX IS '当年费用预估(含税)';
COMMENT ON COLUMN TTA_NEWBREED_EXTEND_HEADER.EXCLUDE_TAX IS '当年费用预估(不含税)';
COMMENT ON COLUMN TTA_NEWBREED_EXTEND_HEADER.COLLECT_RANGE IS '收取范围';
COMMENT ON COLUMN TTA_NEWBREED_EXTEND_HEADER.STORE_STYLE IS '店铺风格';
COMMENT ON COLUMN TTA_NEWBREED_EXTEND_HEADER.STATUS IS '状态';
COMMENT ON COLUMN TTA_NEWBREED_EXTEND_HEADER.REMARK IS '描述字段';
COMMENT ON COLUMN TTA_NEWBREED_EXTEND_HEADER.NEW_PAYMENT IS '新品种收款方式';
COMMENT ON COLUMN TTA_NEWBREED_EXTEND_HEADER.NEW_SHOP_NUM IS '新品种店铺数量';
COMMENT ON COLUMN TTA_NEWBREED_EXTEND_HEADER.YEAR IS '年度';

-- ----------------------------
-- Table structure for TTA_NEWBREED_EXTEND_LINE
-- ----------------------------
DROP TABLE TTA_NEWBREED_EXTEND_LINE;
CREATE TABLE TTA_NEWBREED_EXTEND_LINE (
NEWBREED_EXTEND_L_ID NUMBER NOT NULL ,
NEWBREED_EXTEND_H_ID NUMBER NULL ,
BREAD_NAME VARCHAR2(100 BYTE) NULL ,
STANDARD NUMBER(8,2) NULL ,
CHARGE_METHOD VARCHAR2(5 BYTE) NULL ,
FEE_STANDARD VARCHAR2(100 BYTE) NULL ,
UNIT VARCHAR2(100 BYTE) NULL ,
BREAD_QTY NUMBER NULL ,
BEYOND_CHARGE_METHOD VARCHAR2(5 BYTE) NULL ,
BEYOND_FEE_STANDARD VARCHAR2(100 BYTE) NULL ,
BEYOND_UNIT VARCHAR2(100 BYTE) NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT SYSDATE  NOT NULL ,
CREATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATE_DATE DATE DEFAULT SYSDATE  NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE TTA_NEWBREED_EXTEND_LINE IS '新品种宣传推广服务费用行表';
COMMENT ON COLUMN TTA_NEWBREED_EXTEND_LINE.NEWBREED_EXTEND_L_ID IS '主键';
COMMENT ON COLUMN TTA_NEWBREED_EXTEND_LINE.NEWBREED_EXTEND_H_ID IS '外键';
COMMENT ON COLUMN TTA_NEWBREED_EXTEND_LINE.BREAD_NAME IS '新品属性';
COMMENT ON COLUMN TTA_NEWBREED_EXTEND_LINE.STANDARD IS '公司收费标准（供参考）（元/SKU/店铺）';
COMMENT ON COLUMN TTA_NEWBREED_EXTEND_LINE.CHARGE_METHOD IS '收费方式';
COMMENT ON COLUMN TTA_NEWBREED_EXTEND_LINE.FEE_STANDARD IS '收费标准';
COMMENT ON COLUMN TTA_NEWBREED_EXTEND_LINE.UNIT IS '单位';
COMMENT ON COLUMN TTA_NEWBREED_EXTEND_LINE.BREAD_QTY IS '新品数量（个SKU）';
COMMENT ON COLUMN TTA_NEWBREED_EXTEND_LINE.BEYOND_CHARGE_METHOD IS '超出部分收费方式';
COMMENT ON COLUMN TTA_NEWBREED_EXTEND_LINE.BEYOND_FEE_STANDARD IS '超出部分收费标准';
COMMENT ON COLUMN TTA_NEWBREED_EXTEND_LINE.BEYOND_UNIT IS '超出部分单位';

-- ----------------------------
-- Table structure for TTA_NEWBREED_SET_HEADER
-- ----------------------------
DROP TABLE TTA_NEWBREED_SET_HEADER;
-- Create table
create table TTA_NEWBREED_SET_HEADER
(
  newbreed_set_id   INTEGER not null,
  breed_name        VARCHAR2(100),
  is_effective      VARCHAR2(2),
  creation_date     DATE,
  created_by        INTEGER,
  last_update_date  DATE,
  last_updated_by   INTEGER,
  last_update_login INTEGER,
  delete_flag       INTEGER default 0,
  version_num       INTEGER default 0,
  dept_code         VARCHAR2(50) not null,
  dept_name         VARCHAR2(200) not null,
  dept_id           INTEGER not null
)
tablespace TTA_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
-- Add comments to the columns
comment on column TTA_NEWBREED_SET_HEADER.newbreed_set_id
  is '新品种项目设置ID';
comment on column TTA_NEWBREED_SET_HEADER.breed_name
  is '名称 NB_NAME 0.所有新品 1.进口新品 2.非独家新品 3.独家新品';
comment on column TTA_NEWBREED_SET_HEADER.is_effective
  is '是否生效';
comment on column TTA_NEWBREED_SET_HEADER.creation_date
  is '创建时间';
comment on column TTA_NEWBREED_SET_HEADER.created_by
  is '创建人';
comment on column TTA_NEWBREED_SET_HEADER.last_update_date
  is '更新时间';
comment on column TTA_NEWBREED_SET_HEADER.last_updated_by
  is '更新人';
comment on column TTA_NEWBREED_SET_HEADER.last_update_login
  is '最后登录ID';
comment on column TTA_NEWBREED_SET_HEADER.delete_flag
  is '删除标识';
comment on column TTA_NEWBREED_SET_HEADER.version_num
  is '版本号';
comment on column TTA_NEWBREED_SET_HEADER.dept_code
  is '部门code';
comment on column TTA_NEWBREED_SET_HEADER.dept_name
  is '部门NAME';
comment on column TTA_NEWBREED_SET_HEADER.dept_id
  is '部门ID';
-- Create/Recreate indexes
create unique index NEWBREED_U1 on TTA_NEWBREED_SET_HEADER (DEPT_CODE, BREED_NAME)
  tablespace TTA_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
create index NEWBREED_U2 on TTA_NEWBREED_SET_HEADER (DEPT_ID)
  tablespace TTA_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
-- Create/Recreate primary, unique and foreign key constraints
alter table TTA_NEWBREED_SET_HEADER
  add constraint PK_NEWBREED_ID primary key (NEWBREED_SET_ID)
  using index
  tablespace TTA_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );


-- ----------------------------
-- Table structure for TTA_NEWBREED_SET_LINE
-- ----------------------------
DROP TABLE TTA_NEWBREED_SET_LINE;
-- Create table
create table TTA_NEWBREED_SET_LINE
(
  newbreed_set_line_id INTEGER not null,
  range                VARCHAR2(100),
  unit                 VARCHAR2(100),
  standard             NUMBER,
  is_enable            VARCHAR2(2),
  creation_date        DATE,
  created_by           INTEGER,
  last_update_date     DATE,
  last_updated_by      INTEGER,
  last_update_login    INTEGER,
  delete_flag          INTEGER default 0,
  version_num          INTEGER default 0,
  newbreed_set_id      INTEGER,
  purchase_type        VARCHAR2(100),
  store_type           VARCHAR2(100),
  dept_code            VARCHAR2(50) not null,
  dept_name            VARCHAR2(200) not null
)
tablespace TTA_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
-- Add comments to the columns
comment on column TTA_NEWBREED_SET_LINE.newbreed_set_line_id
  is '新品种项目设置ID';
comment on column TTA_NEWBREED_SET_LINE.range
  is '收取范围  NB_RANGE 1. 按全国 2.按地区 3.按店铺类型';
comment on column TTA_NEWBREED_SET_LINE.unit
  is '单位';
comment on column TTA_NEWBREED_SET_LINE.standard
  is '标准值';
comment on column TTA_NEWBREED_SET_LINE.is_enable
  is '是否启用';
comment on column TTA_NEWBREED_SET_LINE.creation_date
  is '创建时间';
comment on column TTA_NEWBREED_SET_LINE.created_by
  is '创建人';
comment on column TTA_NEWBREED_SET_LINE.last_update_date
  is '更新时间';
comment on column TTA_NEWBREED_SET_LINE.last_updated_by
  is '更新人';
comment on column TTA_NEWBREED_SET_LINE.last_update_login
  is '最后登录ID';
comment on column TTA_NEWBREED_SET_LINE.delete_flag
  is '删除标识';
comment on column TTA_NEWBREED_SET_LINE.version_num
  is '版本号';
comment on column TTA_NEWBREED_SET_LINE.newbreed_set_id
  is '头ID';
comment on column TTA_NEWBREED_SET_LINE.purchase_type
  is '采购类型 1、寄售经仓（CVM）2、非寄售经仓（NON-CVM）';
comment on column TTA_NEWBREED_SET_LINE.store_type
  is '店铺类型 1、Super Star 2、Star 3、Anchor 4、Basic 5、Baby 6、Emryo';
comment on column TTA_NEWBREED_SET_LINE.dept_code
  is '部门code';
comment on column TTA_NEWBREED_SET_LINE.dept_name
  is '部门NAME';
-- Create/Recreate indexes
create unique index NEWBREED_SET_LINE_U1 on TTA_NEWBREED_SET_LINE (NEWBREED_SET_ID, RANGE, UNIT, PURCHASE_TYPE, STORE_TYPE, IS_ENABLE, DEPT_CODE)
  tablespace TTA_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
create index NEWBREED_SET_LINE_U2 on TTA_NEWBREED_SET_LINE (DEPT_CODE)
  tablespace TTA_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
create index NEWBREED_SET_LINE_U3 on TTA_NEWBREED_SET_LINE (NEWBREED_SET_ID)
  tablespace TTA_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
-- Create/Recreate primary, unique and foreign key constraints
alter table TTA_NEWBREED_SET_LINE
  add constraint PK_NEWBREED_SET_LINE_ID primary key (NEWBREED_SET_LINE_ID)
  using index
  tablespace TTA_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

-- ----------------------------
-- Table structure for TTA_OI_BILL_LINE
-- ----------------------------
DROP TABLE TTA_OI_BILL_LINE;
CREATE TABLE TTA_OI_BILL_LINE (
ACCOUNT_MONTH DATE NULL ,
TTA_OI_BILL_IMPORT_ID NUMBER NOT NULL ,
RMS_CODE VARCHAR2(500 BYTE) NULL ,
VENDER_NAME VARCHAR2(500 BYTE) NULL ,
IMPORTJV VARCHAR2(200 BYTE) NULL ,
INVOICENAME VARCHAR2(200 BYTE) NULL ,
BUYER VARCHAR2(200 BYTE) NULL ,
TC VARCHAR2(200 BYTE) NULL ,
DEPARTMENT VARCHAR2(200 BYTE) NULL ,
BRAND VARCHAR2(200 BYTE) NULL ,
VENDERAB VARCHAR2(2 BYTE) NULL ,
USER_CONTRACT_ID VARCHAR2(200 BYTE) NULL ,
COOPERATE_STATUS VARCHAR2(100 BYTE) NULL ,
VENDER_TYPE VARCHAR2(100 BYTE) NULL ,
FAMILY_PLANING_FLAG VARCHAR2(10 BYTE) NULL ,
VALID_BEGIN_DATE DATE NULL ,
PURCHASE VARCHAR2(500 BYTE) NULL ,
GOODS_RETURN VARCHAR2(500 BYTE) NULL ,
NET_PURCHASE VARCHAR2(500 BYTE) NULL ,
DSD VARCHAR2(500 BYTE) NULL ,
PURCHASE_ORIGIN VARCHAR2(500 BYTE) NULL ,
GOODS_RETURN_ORIGIN VARCHAR2(500 BYTE) NULL ,
NET_PURCHASE_ORIGIN VARCHAR2(500 BYTE) NULL ,
ADRB_CONTRACT_TEXT VARCHAR2(500 BYTE) NULL ,
ADRB_SUM_MONEY VARCHAR2(500 BYTE) NULL ,
EP_CONTRACT_TEXT VARCHAR2(500 BYTE) NULL ,
EP_SUM_MONEY VARCHAR2(500 BYTE) NULL ,
ADPF_CONTRACT_TEXT VARCHAR2(500 BYTE) NULL ,
ADPF_SUM_MONEY VARCHAR2(500 BYTE) NULL ,
ADDA_CONTRACT_TEXT VARCHAR2(500 BYTE) NULL ,
ADDA_SUM_MONEY VARCHAR2(500 BYTE) NULL ,
VIR002_CONTRACT_TEXT VARCHAR2(500 BYTE) NULL ,
VIR002_SUM_MONEY VARCHAR2(500 BYTE) NULL ,
VIR001_CONTRACT_TEXT VARCHAR2(500 BYTE) NULL ,
VIR001_SUM_MONEY VARCHAR2(500 BYTE) NULL ,
ADDG_CONTRACT_TEXT VARCHAR2(500 BYTE) NULL ,
ADDG_SUM_MONEY VARCHAR2(500 BYTE) NULL ,
ADTR_CONTRACT_TEXT VARCHAR2(500 BYTE) NULL ,
ADTR_SUM_MONEY VARCHAR2(500 BYTE) NULL ,
BDF_CONTRACT_TEXT VARCHAR2(500 BYTE) NULL ,
BDF_SUM_MONEY VARCHAR2(500 BYTE) NULL ,
NSS001_CONTRACT_TEXT VARCHAR2(500 BYTE) NULL ,
NSS001_CONTRACT_NUM VARCHAR2(500 BYTE) NULL ,
NSS001_CONTRACT_DATA VARCHAR2(500 BYTE) NULL ,
NSS001_SUM_MONEY VARCHAR2(500 BYTE) NULL ,
RSS001_CONTRACT_TEXT VARCHAR2(500 BYTE) NULL ,
RSS001_CONTRACT_NUM VARCHAR2(500 BYTE) NULL ,
RSS001_CONTRACT_DATA VARCHAR2(500 BYTE) NULL ,
RSS001_SUM_MONEY VARCHAR2(500 BYTE) NULL ,
ASS001_CONTRACT_TEXT VARCHAR2(500 BYTE) NULL ,
ASS001_CONTRACT_NUM VARCHAR2(500 BYTE) NULL ,
ASS001_SUM_MONEY VARCHAR2(500 BYTE) NULL ,
WDP001_CONTRACT_TEXT VARCHAR2(500 BYTE) NULL ,
WDP001_SUM_MONEY VARCHAR2(500 BYTE) NULL ,
NPM001_CONTRACT_TEXT VARCHAR2(500 BYTE) NULL ,
NPM001_CONTRACT_NUM VARCHAR2(500 BYTE) NULL ,
NPM001_CONTRACT_DATA VARCHAR2(500 BYTE) NULL ,
NPM001_SUM_MONEY VARCHAR2(500 BYTE) NULL ,
DRG001_CONTRACT_TEXT VARCHAR2(500 BYTE) NULL ,
DRG001_SUM_MONEY VARCHAR2(500 BYTE) NULL ,
DRH001_CONTRACT_TEXT VARCHAR2(500 BYTE) NULL ,
DRH001SUMMONEY VARCHAR2(500 BYTE) NULL ,
DRB001_CONTRACT_TEXT VARCHAR2(500 BYTE) NULL ,
DRB001_SUM_MONEY VARCHAR2(500 BYTE) NULL ,
DRO001_CONTRACT_TEXT VARCHAR2(500 BYTE) NULL ,
DRO001_SUM_MONEY VARCHAR2(500 BYTE) NULL ,
CRI001_CONTRACT_TEXT VARCHAR2(500 BYTE) NULL ,
CRI001_SUM_MONEY VARCHAR2(500 BYTE) NULL ,
DMI001_CONTRACT_TEXT VARCHAR2(500 BYTE) NULL ,
DMI001_SUM_MONEY VARCHAR2(500 BYTE) NULL ,
HBI001_CONTRACT_TEXT VARCHAR2(500 BYTE) NULL ,
HBI001_SUM_MONEY VARCHAR2(500 BYTE) NULL ,
NPD001_CONTRACT_TEXT VARCHAR2(500 BYTE) NULL ,
NPD001_SUM_MONEY VARCHAR2(500 BYTE) NULL ,
BDF001_CONTRACT_TEXT VARCHAR2(500 BYTE) NULL ,
BDF001_SUM_MONEY VARCHAR2(500 BYTE) NULL ,
COS001_CONTRACT_TEXT VARCHAR2(500 BYTE) NULL ,
COS001_SUM_MONEY VARCHAR2(500 BYTE) NULL ,
OTH001_CONTRACT_TEXT VARCHAR2(500 BYTE) NULL ,
OTH001_SUM_MONEY VARCHAR2(500 BYTE) NULL ,
NTI001_CONTRACT_TEXT VARCHAR2(500 BYTE) NULL ,
NTI001_SUM_MONEY VARCHAR2(500 BYTE) NULL ,
LDP001_SUM_MONEY VARCHAR2(500 BYTE) NULL ,
LDP001_CONTRACT_TEXT VARCHAR2(500 BYTE) NULL ,
NFP001_CONTRACT_TEXT VARCHAR2(500 BYTE) NULL ,
NFP001_SUM_MONEY VARCHAR2(500 BYTE) NULL ,
COU001_CONTRACT_TEXT VARCHAR2(500 BYTE) NULL ,
COU001_SUM_MONEY VARCHAR2(500 BYTE) NULL ,
VIP001_CONTRACT_TEXT VARCHAR2(500 BYTE) NULL ,
VIP001_SUM_MONEY VARCHAR2(500 BYTE) NULL ,
LPU001_CONTRACT_TEXT VARCHAR2(500 BYTE) NULL ,
LPU001_SUM_MONEY VARCHAR2(500 BYTE) NULL ,
BAC001_CONTRACT_TEXT VARCHAR2(500 BYTE) NULL ,
BAC001_SUM_MONEY VARCHAR2(500 BYTE) NULL ,
UEP001_CONTRACT_TEXT VARCHAR2(500 BYTE) NULL ,
UEP001_SUM_MONEY VARCHAR2(500 BYTE) NULL ,
OTF001_CONTRACT_TEXT VARCHAR2(500 BYTE) NULL ,
OTF001_SUM_MONEY VARCHAR2(500 BYTE) NULL ,
PSF001_CONTRACT_TEXT VARCHAR2(500 BYTE) NULL ,
PSF001_SUM_MONEY VARCHAR2(500 BYTE) NULL ,
CPS001_CONTRACT_TEXT VARCHAR2(500 BYTE) NULL ,
CPS001_SUM_MONEY VARCHAR2(500 BYTE) NULL ,
AP_SUM_MONEY VARCHAR2(500 BYTE) NULL ,
REMARK VARCHAR2(500 BYTE) NULL ,
CREATION_DATE DATE DEFAULT SYSDATE  NULL ,
CREATED_BY NUMBER NULL ,
LAST_UPDATED_BY NUMBER NULL ,
LAST_UPDATE_DATE DATE DEFAULT SYSDATE  NULL ,
LAST_UPDATE_LOGIN NUMBER NULL ,
VERSION_NUM NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN TTA_OI_BILL_LINE.ACCOUNT_MONTH IS '导入月份';
COMMENT ON COLUMN TTA_OI_BILL_LINE.TTA_OI_BILL_IMPORT_ID IS 'ID';
COMMENT ON COLUMN TTA_OI_BILL_LINE.RMS_CODE IS '供应商编号';
COMMENT ON COLUMN TTA_OI_BILL_LINE.VENDER_NAME IS '供应商名称';
COMMENT ON COLUMN TTA_OI_BILL_LINE.IMPORTJV IS 'JV';
COMMENT ON COLUMN TTA_OI_BILL_LINE.INVOICENAME IS '开票抬头';
COMMENT ON COLUMN TTA_OI_BILL_LINE.BUYER IS 'Buyer';
COMMENT ON COLUMN TTA_OI_BILL_LINE.TC IS 'TC';
COMMENT ON COLUMN TTA_OI_BILL_LINE.DEPARTMENT IS '部门';
COMMENT ON COLUMN TTA_OI_BILL_LINE.BRAND IS '品牌';
COMMENT ON COLUMN TTA_OI_BILL_LINE.VENDERAB IS '供应商属性';
COMMENT ON COLUMN TTA_OI_BILL_LINE.USER_CONTRACT_ID IS '合同编号';
COMMENT ON COLUMN TTA_OI_BILL_LINE.COOPERATE_STATUS IS '合作状态';
COMMENT ON COLUMN TTA_OI_BILL_LINE.VENDER_TYPE IS '供应商类型';
COMMENT ON COLUMN TTA_OI_BILL_LINE.FAMILY_PLANING_FLAG IS '计生供应商';
COMMENT ON COLUMN TTA_OI_BILL_LINE.VALID_BEGIN_DATE IS '合同开始日期';
COMMENT ON COLUMN TTA_OI_BILL_LINE.PURCHASE IS '采购额
（折扣前）';
COMMENT ON COLUMN TTA_OI_BILL_LINE.GOODS_RETURN IS '退货额
（折扣前）';
COMMENT ON COLUMN TTA_OI_BILL_LINE.NET_PURCHASE IS '净采购额
（折扣前）';
COMMENT ON COLUMN TTA_OI_BILL_LINE.DSD IS '免送额
（折扣前）';
COMMENT ON COLUMN TTA_OI_BILL_LINE.PURCHASE_ORIGIN IS '采购额
（折扣后）';
COMMENT ON COLUMN TTA_OI_BILL_LINE.GOODS_RETURN_ORIGIN IS '退货额
（折扣后）';
COMMENT ON COLUMN TTA_OI_BILL_LINE.NET_PURCHASE_ORIGIN IS '净采购额（折扣后）';
COMMENT ON COLUMN TTA_OI_BILL_LINE.ADRB_CONTRACT_TEXT IS '条款
一般购货折扣';
COMMENT ON COLUMN TTA_OI_BILL_LINE.ADRB_SUM_MONEY IS '一般购货折扣 Total';
COMMENT ON COLUMN TTA_OI_BILL_LINE.EP_CONTRACT_TEXT IS '条款
（提前付款）购货折扣';
COMMENT ON COLUMN TTA_OI_BILL_LINE.EP_SUM_MONEY IS '（提前付款）购货折扣 Total';
COMMENT ON COLUMN TTA_OI_BILL_LINE.ADPF_CONTRACT_TEXT IS '条款宣传牌及促销用品制作费';
COMMENT ON COLUMN TTA_OI_BILL_LINE.ADPF_SUM_MONEY IS '宣传牌及促销用品制作费';
COMMENT ON COLUMN TTA_OI_BILL_LINE.ADDA_CONTRACT_TEXT IS '条款
（集中收退货）购货折扣';
COMMENT ON COLUMN TTA_OI_BILL_LINE.ADDA_SUM_MONEY IS '（集中收退货）购货折扣 Total';
COMMENT ON COLUMN TTA_OI_BILL_LINE.VIR002_CONTRACT_TEXT IS '条款
(集中收货)购货折扣';
COMMENT ON COLUMN TTA_OI_BILL_LINE.VIR002_SUM_MONEY IS '(集中收货)购货折扣 Total';
COMMENT ON COLUMN TTA_OI_BILL_LINE.VIR001_CONTRACT_TEXT IS '条款
退货运输费';
COMMENT ON COLUMN TTA_OI_BILL_LINE.VIR001_SUM_MONEY IS '退货运输费 Total';
COMMENT ON COLUMN TTA_OI_BILL_LINE.ADDG_CONTRACT_TEXT IS '条款
（残损）购货折扣';
COMMENT ON COLUMN TTA_OI_BILL_LINE.ADDG_SUM_MONEY IS '（残损）购货折扣 Total';
COMMENT ON COLUMN TTA_OI_BILL_LINE.ADTR_CONTRACT_TEXT IS '达到目标条款相应的点数
目标退佣';
COMMENT ON COLUMN TTA_OI_BILL_LINE.ADTR_SUM_MONEY IS '目标退佣Total';
COMMENT ON COLUMN TTA_OI_BILL_LINE.BDF_CONTRACT_TEXT IS '条款
%商业发展基金';
COMMENT ON COLUMN TTA_OI_BILL_LINE.BDF_SUM_MONEY IS '%商业发展基金 Total';
COMMENT ON COLUMN TTA_OI_BILL_LINE.NSS001_CONTRACT_TEXT IS '条款
新店宣传推广服务费';
COMMENT ON COLUMN TTA_OI_BILL_LINE.NSS001_CONTRACT_NUM IS '店铺数量新店宣传推广服务费';
COMMENT ON COLUMN TTA_OI_BILL_LINE.NSS001_CONTRACT_DATA IS '店铺资料新店宣传推广服务费';
COMMENT ON COLUMN TTA_OI_BILL_LINE.NSS001_SUM_MONEY IS '新店宣传推广服务费 total';
COMMENT ON COLUMN TTA_OI_BILL_LINE.RSS001_CONTRACT_TEXT IS '条款
陈列区域装修费';
COMMENT ON COLUMN TTA_OI_BILL_LINE.RSS001_CONTRACT_NUM IS '店铺数量陈列区域装修费';
COMMENT ON COLUMN TTA_OI_BILL_LINE.RSS001_CONTRACT_DATA IS '店铺资料陈列区域装修费';
COMMENT ON COLUMN TTA_OI_BILL_LINE.RSS001_SUM_MONEY IS '陈列区域装修Total';
COMMENT ON COLUMN TTA_OI_BILL_LINE.ASS001_CONTRACT_TEXT IS '条款
节庆促销服务费（周年庆、春节、劳动节、国庆节、圣诞节）';
COMMENT ON COLUMN TTA_OI_BILL_LINE.ASS001_CONTRACT_NUM IS '店铺数量节庆促销服务促销费（周年庆、春节、劳动节、国庆节、圣诞节）';
COMMENT ON COLUMN TTA_OI_BILL_LINE.ASS001_SUM_MONEY IS '节庆促销服务费（周年庆、春节、劳动节、国庆节、圣诞节） Total';
COMMENT ON COLUMN TTA_OI_BILL_LINE.WDP001_CONTRACT_TEXT IS '条款
节庆促销服务费（38妇女节）';
COMMENT ON COLUMN TTA_OI_BILL_LINE.WDP001_SUM_MONEY IS '节庆促销服务费（38妇女节） Total';
COMMENT ON COLUMN TTA_OI_BILL_LINE.NPM001_CONTRACT_TEXT IS '条款
新城市宣传推广服务费';
COMMENT ON COLUMN TTA_OI_BILL_LINE.NPM001_CONTRACT_NUM IS '店铺数量新城市宣传推广服务费';
COMMENT ON COLUMN TTA_OI_BILL_LINE.NPM001_CONTRACT_DATA IS '店铺资料新城市宣传推广服务费';
COMMENT ON COLUMN TTA_OI_BILL_LINE.NPM001_SUM_MONEY IS '新城市宣传推广服务费 Total';
COMMENT ON COLUMN TTA_OI_BILL_LINE.DRG001_CONTRACT_TEXT IS '条款
促销陈列服务费（端架）';
COMMENT ON COLUMN TTA_OI_BILL_LINE.DRG001_SUM_MONEY IS '促销陈列服务费（端架） Total';
COMMENT ON COLUMN TTA_OI_BILL_LINE.DRH001_CONTRACT_TEXT IS '条款
促销陈列服务费（焦点货架）';
COMMENT ON COLUMN TTA_OI_BILL_LINE.DRH001SUMMONEY IS '促销陈列服务费（焦点货架）Total';
COMMENT ON COLUMN TTA_OI_BILL_LINE.DRB001_CONTRACT_TEXT IS '条款
促销陈列服务费（促销助理管理费）';
COMMENT ON COLUMN TTA_OI_BILL_LINE.DRB001_SUM_MONEY IS '促销陈列服务费（促销助理管理费）Total';
COMMENT ON COLUMN TTA_OI_BILL_LINE.DRO001_CONTRACT_TEXT IS '条款
促销陈列服务费（其他）';
COMMENT ON COLUMN TTA_OI_BILL_LINE.DRO001_SUM_MONEY IS '促销陈列服务费（其他）Total';
COMMENT ON COLUMN TTA_OI_BILL_LINE.CRI001_CONTRACT_TEXT IS '条款
专柜促销陈列服务费';
COMMENT ON COLUMN TTA_OI_BILL_LINE.CRI001_SUM_MONEY IS '专柜促销陈列服务费Total';
COMMENT ON COLUMN TTA_OI_BILL_LINE.DMI001_CONTRACT_TEXT IS '条款
宣传单张制作费（快讯及传单）';
COMMENT ON COLUMN TTA_OI_BILL_LINE.DMI001_SUM_MONEY IS '宣传单张制作费（快讯及传单） Total';
COMMENT ON COLUMN TTA_OI_BILL_LINE.HBI001_CONTRACT_TEXT IS '条款
H & B
健与美';
COMMENT ON COLUMN TTA_OI_BILL_LINE.HBI001_SUM_MONEY IS 'H & B
健与美
Total';
COMMENT ON COLUMN TTA_OI_BILL_LINE.NPD001_CONTRACT_TEXT IS '条款
新品种宣传推广服务费';
COMMENT ON COLUMN TTA_OI_BILL_LINE.NPD001_SUM_MONEY IS '新品种宣传推广服务费Total';
COMMENT ON COLUMN TTA_OI_BILL_LINE.BDF001_CONTRACT_TEXT IS '条款
商业发展基金';
COMMENT ON COLUMN TTA_OI_BILL_LINE.BDF001_SUM_MONEY IS '商业发展基金 Total';
COMMENT ON COLUMN TTA_OI_BILL_LINE.COS001_CONTRACT_TEXT IS '条款
成本补差';
COMMENT ON COLUMN TTA_OI_BILL_LINE.COS001_SUM_MONEY IS '成本补差 Total';
COMMENT ON COLUMN TTA_OI_BILL_LINE.OTH001_CONTRACT_TEXT IS '条款
其他';
COMMENT ON COLUMN TTA_OI_BILL_LINE.OTH001_SUM_MONEY IS '其他Total';
COMMENT ON COLUMN TTA_OI_BILL_LINE.NTI001_CONTRACT_TEXT IS '条款
其他业务费用 ';
COMMENT ON COLUMN TTA_OI_BILL_LINE.NTI001_SUM_MONEY IS '其他业务费用 Total';
COMMENT ON COLUMN TTA_OI_BILL_LINE.LDP001_SUM_MONEY IS '延误送货罚款 Total';
COMMENT ON COLUMN TTA_OI_BILL_LINE.LDP001_CONTRACT_TEXT IS '条款
延误送货罚款';
COMMENT ON COLUMN TTA_OI_BILL_LINE.NFP001_CONTRACT_TEXT IS '条款
送货满足率低于95%罚款';
COMMENT ON COLUMN TTA_OI_BILL_LINE.NFP001_SUM_MONEY IS '送货满足率低于95%罚款 Total';
COMMENT ON COLUMN TTA_OI_BILL_LINE.COU001_CONTRACT_TEXT IS '条款
优惠券 ';
COMMENT ON COLUMN TTA_OI_BILL_LINE.COU001_SUM_MONEY IS '优惠券 Total';
COMMENT ON COLUMN TTA_OI_BILL_LINE.VIP001_CONTRACT_TEXT IS '条款
会员优惠 ';
COMMENT ON COLUMN TTA_OI_BILL_LINE.VIP001_SUM_MONEY IS '会员优惠 Total';
COMMENT ON COLUMN TTA_OI_BILL_LINE.LPU001_CONTRACT_TEXT IS '条款
延误退货罚款';
COMMENT ON COLUMN TTA_OI_BILL_LINE.LPU001_SUM_MONEY IS '延误退货罚款 Total';
COMMENT ON COLUMN TTA_OI_BILL_LINE.BAC001_CONTRACT_TEXT IS '条款
促销服务费';
COMMENT ON COLUMN TTA_OI_BILL_LINE.BAC001_SUM_MONEY IS '促销服务费 Total';
COMMENT ON COLUMN TTA_OI_BILL_LINE.UEP001_CONTRACT_TEXT IS '条款
未在合同上的提早付款折扣 ';
COMMENT ON COLUMN TTA_OI_BILL_LINE.UEP001_SUM_MONEY IS '未在合同上的提早付款折扣 Total';
COMMENT ON COLUMN TTA_OI_BILL_LINE.OTF001_CONTRACT_TEXT IS '条款
差旅费(供应商承担部份)';
COMMENT ON COLUMN TTA_OI_BILL_LINE.OTF001_SUM_MONEY IS '差旅费(供应商承担部份) Total';
COMMENT ON COLUMN TTA_OI_BILL_LINE.PSF001_CONTRACT_TEXT IS '条款
促销服务费(VAT项目)';
COMMENT ON COLUMN TTA_OI_BILL_LINE.PSF001_SUM_MONEY IS '促销服务费(VAT项目)
Total';
COMMENT ON COLUMN TTA_OI_BILL_LINE.CPS001_CONTRACT_TEXT IS '条款
其他业务收入-赔偿(补偿)收入';
COMMENT ON COLUMN TTA_OI_BILL_LINE.CPS001_SUM_MONEY IS '其他业务收入-赔偿(补偿)收入
Total';
COMMENT ON COLUMN TTA_OI_BILL_LINE.AP_SUM_MONEY IS 'AP OI Total';

-- ----------------------------
-- Table structure for TTA_ORG_IN
-- ----------------------------
DROP TABLE TTA_ORG_IN;
CREATE TABLE TTA_ORG_IN (
ORG_CODE VARCHAR2(100 BYTE) NOT NULL ,
ORG_NAME VARCHAR2(100 BYTE) NOT NULL ,
PARENT_ORG_CODE VARCHAR2(100 BYTE) NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT sysdate  NULL ,
CREATED_BY NUMBER DEFAULT -1  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT -1  NULL ,
LAST_UPDATE_DATE DATE DEFAULT sysdate  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT -1  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE TTA_ORG_IN IS '组织表';
COMMENT ON COLUMN TTA_ORG_IN.ORG_CODE IS '员工编号';
COMMENT ON COLUMN TTA_ORG_IN.ORG_NAME IS '组织名称';
COMMENT ON COLUMN TTA_ORG_IN.PARENT_ORG_CODE IS '上级组织编号';

-- ----------------------------
-- Table structure for TTA_OSD_MONTHLY_CHECKING
-- ----------------------------
DROP TABLE TTA_OSD_MONTHLY_CHECKING;
CREATE TABLE TTA_OSD_MONTHLY_CHECKING (
ID NUMBER NOT NULL ,
PROMNUMBER VARCHAR2(50 BYTE) NULL ,
OSD VARCHAR2(50 BYTE) NULL ,
PROMOTION_GUIDELINE VARCHAR2(50 BYTE) NULL ,
STORE_NUM VARCHAR2(50 BYTE) NULL ,
DEPT_CODE VARCHAR2(50 BYTE) NULL ,
GROUP_DESC VARCHAR2(100 BYTE) NULL ,
DEPT_DESC VARCHAR2(100 BYTE) NULL ,
SALES_SITE2 VARCHAR2(100 BYTE) NULL ,
PRODUCT_CODE VARCHAR2(50 BYTE) NULL ,
CN_NAME VARCHAR2(100 BYTE) NULL ,
TRADE_REMARK VARCHAR2(255 BYTE) NULL ,
CONTENT VARCHAR2(500 BYTE) NULL ,
PRIOR_VENDOR_CODE VARCHAR2(80 BYTE) NULL ,
PRIOR_VENDOR_NAME VARCHAR2(250 BYTE) NULL ,
CONTRACT_OWNER_DEPT VARCHAR2(255 BYTE) NULL ,
CONTRACT_YEAR VARCHAR2(50 BYTE) NULL ,
CONTRACT_STATUS VARCHAR2(50 BYTE) NULL ,
CONTRACT_MASTER VARCHAR2(455 BYTE) NULL ,
AGREEMENT_STANDARDS VARCHAR2(255 BYTE) NULL ,
AGREEMENT_UNIT VARCHAR2(50 BYTE) NULL ,
DEPT_STANDARDS VARCHAR2(255 BYTE) NULL ,
DEPT_UNIT VARCHAR2(50 BYTE) NULL ,
CHARGE_STANDARDS VARCHAR2(50 BYTE) NULL ,
UNCONFIRM_VENDOR_CODE VARCHAR2(80 BYTE) NULL ,
UNCONFIRM_VENDOR_NAME VARCHAR2(255 BYTE) NULL ,
RECEIVE_AMOUNT VARCHAR2(50 BYTE) NULL ,
ORIGINAL_AMOUNT VARCHAR2(50 BYTE) NULL ,
UNCONFIRM_AMOUNT VARCHAR2(50 BYTE) NULL ,
DIFFERENCE VARCHAR2(50 BYTE) NULL ,
SPILT_VENODR VARCHAR2(50 BYTE) NULL ,
PURCHASE VARCHAR2(50 BYTE) NULL ,
COLLECT VARCHAR2(50 BYTE) NULL ,
EXEMPTION_REASON VARCHAR2(255 BYTE) NULL ,
EXEMPTION_REASON2 VARCHAR2(255 BYTE) NULL ,
DEBIT_ORDER_CODE VARCHAR2(50 BYTE) NULL ,
REMARK VARCHAR2(455 BYTE) NULL ,
CREATION_DATE DATE DEFAULT SYSDATE  NULL ,
CREATED_BY NUMBER NULL ,
LAST_UPDATED_BY NUMBER NULL ,
LAST_UPDATE_DATE DATE DEFAULT SYSDATE  NULL ,
LAST_UPDATE_LOGIN NUMBER NULL ,
SALES_SITE_ID NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE TTA_OSD_MONTHLY_CHECKING IS ' 促销位置基础数据维护';
COMMENT ON COLUMN TTA_OSD_MONTHLY_CHECKING.ID IS 'ID';
COMMENT ON COLUMN TTA_OSD_MONTHLY_CHECKING.PROMNUMBER IS '促销期间';
COMMENT ON COLUMN TTA_OSD_MONTHLY_CHECKING.OSD IS 'OSD';
COMMENT ON COLUMN TTA_OSD_MONTHLY_CHECKING.PROMOTION_GUIDELINE IS '促销陈列位置';
COMMENT ON COLUMN TTA_OSD_MONTHLY_CHECKING.STORE_NUM IS '生效区域店铺计数';
COMMENT ON COLUMN TTA_OSD_MONTHLY_CHECKING.DEPT_CODE IS 'category code';
COMMENT ON COLUMN TTA_OSD_MONTHLY_CHECKING.GROUP_DESC IS '部门';
COMMENT ON COLUMN TTA_OSD_MONTHLY_CHECKING.DEPT_DESC IS 'Category（品类）';
COMMENT ON COLUMN TTA_OSD_MONTHLY_CHECKING.SALES_SITE2 IS '促销位置-2';
COMMENT ON COLUMN TTA_OSD_MONTHLY_CHECKING.PRODUCT_CODE IS '产品编号';
COMMENT ON COLUMN TTA_OSD_MONTHLY_CHECKING.CN_NAME IS '中文名称';
COMMENT ON COLUMN TTA_OSD_MONTHLY_CHECKING.TRADE_REMARK IS '品牌';
COMMENT ON COLUMN TTA_OSD_MONTHLY_CHECKING.CONTENT IS '活动内容';
COMMENT ON COLUMN TTA_OSD_MONTHLY_CHECKING.PRIOR_VENDOR_CODE IS '优先供应商编号';
COMMENT ON COLUMN TTA_OSD_MONTHLY_CHECKING.PRIOR_VENDOR_NAME IS '优先供应商名称';
COMMENT ON COLUMN TTA_OSD_MONTHLY_CHECKING.CONTRACT_OWNER_DEPT IS 'Contract Owner Dept';
COMMENT ON COLUMN TTA_OSD_MONTHLY_CHECKING.CONTRACT_YEAR IS '合同年份';
COMMENT ON COLUMN TTA_OSD_MONTHLY_CHECKING.CONTRACT_STATUS IS '合作状态';
COMMENT ON COLUMN TTA_OSD_MONTHLY_CHECKING.CONTRACT_MASTER IS '合同条款';
COMMENT ON COLUMN TTA_OSD_MONTHLY_CHECKING.AGREEMENT_STANDARDS IS '协定标准';
COMMENT ON COLUMN TTA_OSD_MONTHLY_CHECKING.AGREEMENT_UNIT IS '单位';
COMMENT ON COLUMN TTA_OSD_MONTHLY_CHECKING.DEPT_STANDARDS IS '部门标准';
COMMENT ON COLUMN TTA_OSD_MONTHLY_CHECKING.DEPT_UNIT IS '单位';
COMMENT ON COLUMN TTA_OSD_MONTHLY_CHECKING.CHARGE_STANDARDS IS '计收标准';
COMMENT ON COLUMN TTA_OSD_MONTHLY_CHECKING.UNCONFIRM_VENDOR_CODE IS '需采购确认供应商编号';
COMMENT ON COLUMN TTA_OSD_MONTHLY_CHECKING.UNCONFIRM_VENDOR_NAME IS '需采购确认供应商名称';
COMMENT ON COLUMN TTA_OSD_MONTHLY_CHECKING.RECEIVE_AMOUNT IS '应收金额';
COMMENT ON COLUMN TTA_OSD_MONTHLY_CHECKING.ORIGINAL_AMOUNT IS '原应收金额';
COMMENT ON COLUMN TTA_OSD_MONTHLY_CHECKING.UNCONFIRM_AMOUNT IS '需采购确认收取金额';
COMMENT ON COLUMN TTA_OSD_MONTHLY_CHECKING.DIFFERENCE IS '差异';
COMMENT ON COLUMN TTA_OSD_MONTHLY_CHECKING.SPILT_VENODR IS '是否拆分供应商';
COMMENT ON COLUMN TTA_OSD_MONTHLY_CHECKING.PURCHASE IS '采购行动';
COMMENT ON COLUMN TTA_OSD_MONTHLY_CHECKING.COLLECT IS '收取方式';
COMMENT ON COLUMN TTA_OSD_MONTHLY_CHECKING.EXEMPTION_REASON IS '如采购行动选择确认不收取或者折扣收取需在下拉菜单选择豁免原因';
COMMENT ON COLUMN TTA_OSD_MONTHLY_CHECKING.EXEMPTION_REASON2 IS '如采购行动选择确认不收取或者折扣收取需在下拉菜单选择豁免原因（二级）';
COMMENT ON COLUMN TTA_OSD_MONTHLY_CHECKING.DEBIT_ORDER_CODE IS '借记单编号';
COMMENT ON COLUMN TTA_OSD_MONTHLY_CHECKING.REMARK IS '备注';
COMMENT ON COLUMN TTA_OSD_MONTHLY_CHECKING.LAST_UPDATE_LOGIN IS '促销位置ID';

-- ----------------------------
-- Table structure for TTA_OSD_SALES_SITE
-- ----------------------------
DROP TABLE TTA_OSD_SALES_SITE;
CREATE TABLE TTA_OSD_SALES_SITE (
SALES_SITE_ID NUMBER NOT NULL ,
SALES_SITE VARCHAR2(100 BYTE) NULL ,
PROMOTION_GUIDELINE VARCHAR2(100 BYTE) NULL ,
WORKING VARCHAR2(100 BYTE) NULL ,
STATUS VARCHAR2(10 BYTE) NULL ,
CREATION_DATE DATE DEFAULT SYSDATE  NULL ,
CREATED_BY NUMBER NULL ,
LAST_UPDATED_BY NUMBER NULL ,
LAST_UPDATE_DATE DATE DEFAULT SYSDATE  NULL ,
LAST_UPDATE_LOGIN NUMBER NULL ,
SALES_SITE2 VARCHAR2(255 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE TTA_OSD_SALES_SITE IS ' 促销位置基础数据维护';
COMMENT ON COLUMN TTA_OSD_SALES_SITE.SALES_SITE_ID IS 'OSD_ID';
COMMENT ON COLUMN TTA_OSD_SALES_SITE.SALES_SITE IS '促销位置';
COMMENT ON COLUMN TTA_OSD_SALES_SITE.PROMOTION_GUIDELINE IS '促销陈列位置';
COMMENT ON COLUMN TTA_OSD_SALES_SITE.WORKING IS 'WORKING';
COMMENT ON COLUMN TTA_OSD_SALES_SITE.STATUS IS '失效标识';
COMMENT ON COLUMN TTA_OSD_SALES_SITE.SALES_SITE2 IS '促销位置2';

-- ----------------------------
-- Table structure for TTA_PERSON_IN
-- ----------------------------
DROP TABLE TTA_PERSON_IN;
CREATE TABLE TTA_PERSON_IN (
CODE VARCHAR2(50 BYTE) NOT NULL ,
NAME VARCHAR2(50 BYTE) NULL ,
NAME_EN VARCHAR2(50 BYTE) NULL ,
DEPT_NO VARCHAR2(100 BYTE) NULL ,
POST_NAME VARCHAR2(150 BYTE) NULL ,
GRAND NUMBER NULL ,
MAIL VARCHAR2(100 BYTE) NULL ,
AREA VARCHAR2(100 BYTE) NULL ,
MARKET VARCHAR2(100 BYTE) NULL ,
ORG_CODE VARCHAR2(100 BYTE) NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT sysdate  NULL ,
CREATED_BY NUMBER DEFAULT 1  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT 1  NULL ,
LAST_UPDATE_DATE DATE DEFAULT sysdate  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE TTA_PERSON_IN IS '人员表';
COMMENT ON COLUMN TTA_PERSON_IN.CODE IS '员工编号';
COMMENT ON COLUMN TTA_PERSON_IN.NAME IS '姓名';
COMMENT ON COLUMN TTA_PERSON_IN.NAME_EN IS '姓名(英文)';
COMMENT ON COLUMN TTA_PERSON_IN.DEPT_NO IS '部门编码';
COMMENT ON COLUMN TTA_PERSON_IN.POST_NAME IS '职位名称';
COMMENT ON COLUMN TTA_PERSON_IN.GRAND IS '级别';
COMMENT ON COLUMN TTA_PERSON_IN.MAIL IS '电子邮件';
COMMENT ON COLUMN TTA_PERSON_IN.AREA IS '区域';
COMMENT ON COLUMN TTA_PERSON_IN.MARKET IS '市场';
COMMENT ON COLUMN TTA_PERSON_IN.ORG_CODE IS '组织编码';

-- ----------------------------
-- Table structure for TTA_PRINT_RECORD
-- ----------------------------
DROP TABLE TTA_PRINT_RECORD;
CREATE TABLE TTA_PRINT_RECORD (
PRINT_RECORD_ID NUMBER NOT NULL ,
PRINT_TYPE VARCHAR2(50 BYTE) NOT NULL ,
PRINT_COUNT NUMBER NOT NULL ,
REMARK VARCHAR2(150 BYTE) NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT SYSDATE  NOT NULL ,
CREATED_BY NUMBER DEFAULT -1  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT -1  NULL ,
LAST_UPDATE_DATE DATE DEFAULT SYSDATE  NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE TTA_PRINT_RECORD IS '打印记录表';
COMMENT ON COLUMN TTA_PRINT_RECORD.PRINT_RECORD_ID IS '主键';
COMMENT ON COLUMN TTA_PRINT_RECORD.PRINT_TYPE IS '打印类别';
COMMENT ON COLUMN TTA_PRINT_RECORD.PRINT_COUNT IS '累计打印次数';
COMMENT ON COLUMN TTA_PRINT_RECORD.REMARK IS '描述信息';

-- ----------------------------
-- Table structure for TTA_PROMOTION_GUIDELINE
-- ----------------------------
DROP TABLE TTA_PROMOTION_GUIDELINE;
CREATE TABLE TTA_PROMOTION_GUIDELINE (
OSD_ID NUMBER NOT NULL ,
OSD VARCHAR2(50 BYTE) NULL ,
OFFERCODE VARCHAR2(50 BYTE) NULL ,
STEP VARCHAR2(50 BYTE) NULL ,
EFFECTAREA VARCHAR2(50 BYTE) NULL ,
EFFECTCITYTIER VARCHAR2(50 BYTE) NULL ,
EFFECTSTORETYPE VARCHAR2(50 BYTE) NULL ,
STORELICENSESTATUS VARCHAR2(50 BYTE) NULL ,
DEPT VARCHAR2(50 BYTE) NULL ,
ITEMCODE VARCHAR2(50 BYTE) NULL ,
CHINESEDESCRIPTION VARCHAR2(50 BYTE) NULL ,
ENGLISHDESCRIPTION VARCHAR2(50 BYTE) NULL ,
DISPLAY VARCHAR2(50 BYTE) NULL ,
BUYERNOTE VARCHAR2(50 BYTE) NULL ,
POG VARCHAR2(50 BYTE) NULL ,
POGSTORECOUNT VARCHAR2(50 BYTE) NULL ,
STOCKWKCOVERAGE13 VARCHAR2(50 BYTE) NULL ,
PROMPACK VARCHAR2(50 BYTE) NULL ,
RETAILPRICE VARCHAR2(50 BYTE) NULL ,
PROMOPRICE VARCHAR2(50 BYTE) NULL ,
PROMOMECH VARCHAR2(50 BYTE) NULL ,
MEMBEROFFER VARCHAR2(50 BYTE) NULL ,
UNITCOST VARCHAR2(50 BYTE) NULL ,
NEWCOST VARCHAR2(50 BYTE) NULL ,
ORDERDISCOUNT VARCHAR2(50 BYTE) NULL ,
COSTCHANGEPERIOD VARCHAR2(50 BYTE) NULL ,
GPPER VARCHAR2(50 BYTE) NULL ,
RTV VARCHAR2(50 BYTE) NULL ,
RETURNDATE VARCHAR2(50 BYTE) NULL ,
PROMOTYPE VARCHAR2(50 BYTE) NULL ,
MDQ VARCHAR2(50 BYTE) NULL ,
MAXDQ VARCHAR2(50 BYTE) NULL ,
INER VARCHAR2(50 BYTE) NULL ,
STORECOUNT VARCHAR2(50 BYTE) NULL ,
FORCTDISCREPANCY VARCHAR2(50 BYTE) NULL ,
TRADINGFORCTQTY VARCHAR2(50 BYTE) NULL ,
TRADINGFORCTSALES VARCHAR2(50 BYTE) NULL ,
PERCENTAGE VARCHAR2(50 BYTE) NULL ,
REASON VARCHAR2(50 BYTE) NULL ,
SUPPLYFORCTQTY VARCHAR2(50 BYTE) NULL ,
WH998 VARCHAR2(50 BYTE) NULL ,
WH998FREEGOODS VARCHAR2(50 BYTE) NULL ,
WH997 VARCHAR2(50 BYTE) NULL ,
WH997FREEGOODS VARCHAR2(50 BYTE) NULL ,
WH999 VARCHAR2(50 BYTE) NULL ,
WH999FREEGOODS VARCHAR2(50 BYTE) NULL ,
WH992 VARCHAR2(50 BYTE) NULL ,
WH992FREEGOODS VARCHAR2(50 BYTE) NULL ,
WH995 VARCHAR2(50 BYTE) NULL ,
WH995FREEGOODS VARCHAR2(50 BYTE) NULL ,
WH991 VARCHAR2(50 BYTE) NULL ,
WH991FREEGOODS VARCHAR2(50 BYTE) NULL ,
WH996 VARCHAR2(50 BYTE) NULL ,
WH996FREEGOODS VARCHAR2(50 BYTE) NULL ,
WH9901 VARCHAR2(50 BYTE) NULL ,
WH9901FREEGOODS VARCHAR2(50 BYTE) NULL ,
WH9902 VARCHAR2(50 BYTE) NULL ,
WH9902FREEGOODS VARCHAR2(50 BYTE) NULL ,
WH9903 VARCHAR2(50 BYTE) NULL ,
WH9903FREEGOODS VARCHAR2(50 BYTE) NULL ,
WH9906 VARCHAR2(50 BYTE) NULL ,
WH9906FREEGOODS VARCHAR2(50 BYTE) NULL ,
WH9907 VARCHAR2(50 BYTE) NULL ,
WH9907FREEGOODS VARCHAR2(50 BYTE) NULL ,
WH998PER VARCHAR2(50 BYTE) NULL ,
WH997PER VARCHAR2(50 BYTE) NULL ,
WH999PER VARCHAR2(50 BYTE) NULL ,
WH992PER VARCHAR2(50 BYTE) NULL ,
WH995PER VARCHAR2(50 BYTE) NULL ,
WH991PER VARCHAR2(50 BYTE) NULL ,
WH996PER VARCHAR2(50 BYTE) NULL ,
WH9901PER VARCHAR2(50 BYTE) NULL ,
WH9902PER VARCHAR2(50 BYTE) NULL ,
WH9903PER VARCHAR2(50 BYTE) NULL ,
WH9906PER VARCHAR2(50 BYTE) NULL ,
WH9907PER VARCHAR2(50 BYTE) NULL ,
SUPPLIERCODE998 VARCHAR2(50 BYTE) NULL ,
SUPPLIERNAME998 VARCHAR2(50 BYTE) NULL ,
SUPPLIERCODE997 VARCHAR2(50 BYTE) NULL ,
SUPPLIERNAME997 VARCHAR2(50 BYTE) NULL ,
SUPPLIERCODE999 VARCHAR2(50 BYTE) NULL ,
SUPPLIERNAME999 VARCHAR2(50 BYTE) NULL ,
SUPPLIERCODE992 VARCHAR2(50 BYTE) NULL ,
SUPPLIERNAME992 VARCHAR2(50 BYTE) NULL ,
SUPPLIERCODE995 VARCHAR2(50 BYTE) NULL ,
SUPPLIERNAME995 VARCHAR2(50 BYTE) NULL ,
SUPPLIERCODE991 VARCHAR2(50 BYTE) NULL ,
SUPPLIERNAME991 VARCHAR2(50 BYTE) NULL ,
SUPPLIERCODE996 VARCHAR2(50 BYTE) NULL ,
SUPPLIERNAME996 VARCHAR2(50 BYTE) NULL ,
SUPPLIERCODE9901 VARCHAR2(50 BYTE) NULL ,
SUPPLIERNAME9901 VARCHAR2(50 BYTE) NULL ,
SUPPLIERCODE9902 VARCHAR2(50 BYTE) NULL ,
SUPPLIERNAME9902 VARCHAR2(50 BYTE) NULL ,
SUPPLIERCODE9903 VARCHAR2(50 BYTE) NULL ,
SUPPLIERNAME9903 VARCHAR2(50 BYTE) NULL ,
SUPPLIERCODE9906 VARCHAR2(50 BYTE) NULL ,
SUPPLIERNAME9906 VARCHAR2(50 BYTE) NULL ,
SUPPLIERCODE9907 VARCHAR2(50 BYTE) NULL ,
SUPPLIERNAME9907 VARCHAR2(50 BYTE) NULL ,
LOCATIONLIST998 VARCHAR2(50 BYTE) NULL ,
LOCATIONLIST997 VARCHAR2(50 BYTE) NULL ,
LOCATIONLIST999 VARCHAR2(50 BYTE) NULL ,
LOCATIONLIST992 VARCHAR2(50 BYTE) NULL ,
LOCATIONLIST995 VARCHAR2(50 BYTE) NULL ,
LOCATIONLIST991 VARCHAR2(50 BYTE) NULL ,
LOCATIONLIST996 VARCHAR2(50 BYTE) NULL ,
LOCATIONLIST9901 VARCHAR2(50 BYTE) NULL ,
LOCATIONLIST9902 VARCHAR2(50 BYTE) NULL ,
LOCATIONLIST9903 VARCHAR2(50 BYTE) NULL ,
LOCATIONLIST9906 VARCHAR2(50 BYTE) NULL ,
LOCATIONLIST9907 VARCHAR2(50 BYTE) NULL ,
FREESUPPLIERCODE998 VARCHAR2(50 BYTE) NULL ,
FREESUPPLIERNAME998 VARCHAR2(50 BYTE) NULL ,
FREESUPPLIERCODE997 VARCHAR2(50 BYTE) NULL ,
FREESUPPLIERNAME997 VARCHAR2(50 BYTE) NULL ,
FREESUPPLIERCODE999 VARCHAR2(50 BYTE) NULL ,
FREESUPPLIERNAME999 VARCHAR2(50 BYTE) NULL ,
FREESUPPLIERCODE992 VARCHAR2(50 BYTE) NULL ,
FREESUPPLIERNAME992 VARCHAR2(50 BYTE) NULL ,
FREESUPPLIERCODE995 VARCHAR2(50 BYTE) NULL ,
FREESUPPLIERNAME995 VARCHAR2(50 BYTE) NULL ,
FREESUPPLIERCODE991 VARCHAR2(50 BYTE) NULL ,
FREESUPPLIERNAME991 VARCHAR2(50 BYTE) NULL ,
FREESUPPLIERCODE996 VARCHAR2(50 BYTE) NULL ,
FREESUPPLIERNAME996 VARCHAR2(50 BYTE) NULL ,
FREESUPPLIERCODE9901 VARCHAR2(50 BYTE) NULL ,
FREESUPPLIERNAME9901 VARCHAR2(50 BYTE) NULL ,
FREESUPPLIERCODE9902 VARCHAR2(50 BYTE) NULL ,
FREESUPPLIERNAME9902 VARCHAR2(50 BYTE) NULL ,
FREESUPPLIERCODE9903 VARCHAR2(50 BYTE) NULL ,
FREESUPPLIERNAME9903 VARCHAR2(50 BYTE) NULL ,
FREESUPPLIERCODE9906 VARCHAR2(50 BYTE) NULL ,
FREESUPPLIERNAME9906 VARCHAR2(50 BYTE) NULL ,
FREESUPPLIERCODE9907 VARCHAR2(50 BYTE) NULL ,
FREESUPPLIERNAME9907 VARCHAR2(50 BYTE) NULL ,
REFSALESPERIOD VARCHAR2(50 BYTE) NULL ,
REFAREA VARCHAR2(50 BYTE) NULL ,
REFOSDTYPE VARCHAR2(50 BYTE) NULL ,
REFITEM VARCHAR2(50 BYTE) NULL ,
REFDESC VARCHAR2(50 BYTE) NULL ,
HISTORICSALESQTY VARCHAR2(50 BYTE) NULL ,
HISTORICSALESAMT VARCHAR2(50 BYTE) NULL ,
HISTORICAVGUNITPRICE VARCHAR2(50 BYTE) NULL ,
DISPLAYONDM VARCHAR2(50 BYTE) NULL ,
MATCHTHEME VARCHAR2(50 BYTE) NULL ,
CONSIGNMENT VARCHAR2(50 BYTE) NULL ,
NEWITEM VARCHAR2(50 BYTE) NULL ,
OWNBRAND VARCHAR2(50 BYTE) NULL ,
LIMITEDITEM VARCHAR2(50 BYTE) NULL ,
EXCLUSIVEITEM VARCHAR2(50 BYTE) NULL ,
ONSHELFPROMITEM VARCHAR2(50 BYTE) NULL ,
CLEARANCEITEM VARCHAR2(50 BYTE) NULL ,
FREEGOODS VARCHAR2(50 BYTE) NULL ,
PROMOCOMPENSATION VARCHAR2(50 BYTE) NULL ,
COMPENSATIONDETAIL VARCHAR2(50 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for TTA_PROPOSAL_HEADER
-- ----------------------------
DROP TABLE TTA_PROPOSAL_HEADER;
-- Create table
create table TTA_PROPOSAL_HEADER
(
  proposal_id        INTEGER not null,
  order_nbr          VARCHAR2(50) not null,
  proposal_nbr       VARCHAR2(50),
  vendor_nbr         VARCHAR2(30) not null,
  vendor_name        VARCHAR2(230) not null,
  proposal_year      VARCHAR2(30) not null,
  approve_date       DATE,
  status             VARCHAR2(30) not null,
  version_code       NUMBER default '1',
  is_transdepart     CHAR(1) not null,
  new_payment_method VARCHAR2(30),
  new_store_qty      NUMBER,
  pln_adjust_scale   NUMBER,
  is_pln_confirm     CHAR(1),
  is_terms_confirm   CHAR(1),
  is_depart_confirm  CHAR(1),
  is_new_confirm     CHAR(1),
  is_quest_confirm   CHAR(1),
  is_cross_year      CHAR(1) not null,
  begin_date         DATE,
  end_date           DATE,
  remark             VARCHAR2(2030),
  creation_date      DATE default SYSDATE,
  created_by         INTEGER,
  last_updated_by    INTEGER,
  last_update_date   DATE default SYSDATE,
  last_update_login  INTEGER,
  version_num        INTEGER,
  is_change          CHAR(1),
  source_id          INTEGER,
  source_code        VARCHAR2(50),
  new_or_existing    VARCHAR2(50) default 'New_Vendor',
  alert_by           INTEGER,
  alert_date         DATE,
  dept_code1         VARCHAR2(30),
  dept_code2         VARCHAR2(30),
  dept_code3         VARCHAR2(30),
  dept_code4         VARCHAR2(30),
  dept_code5         VARCHAR2(30),
  dept_desc1         VARCHAR2(230),
  dept_desc2         VARCHAR2(230),
  dept_desc3         VARCHAR2(230),
  dept_desc4         VARCHAR2(230),
  dept_desc5         VARCHAR2(230),
  version_status     VARCHAR2(2),
  origin_proposal_id INTEGER
)
tablespace TTA_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
-- Add comments to the columns
comment on column TTA_PROPOSAL_HEADER.proposal_id
  is 'ID';
comment on column TTA_PROPOSAL_HEADER.order_nbr
  is '单据号';
comment on column TTA_PROPOSAL_HEADER.proposal_nbr
  is 'Proposal编号';
comment on column TTA_PROPOSAL_HEADER.vendor_nbr
  is '供应商编号';
comment on column TTA_PROPOSAL_HEADER.vendor_name
  is '供应商名称';
comment on column TTA_PROPOSAL_HEADER.proposal_year
  is 'PROPOSAL制作年度';
comment on column TTA_PROPOSAL_HEADER.approve_date
  is '审批通过日期';
comment on column TTA_PROPOSAL_HEADER.status
  is '单据状态';
comment on column TTA_PROPOSAL_HEADER.version_code
  is 'PROPOSAL版本号';
comment on column TTA_PROPOSAL_HEADER.is_transdepart
  is '是否有跨部门标识';
comment on column TTA_PROPOSAL_HEADER.new_payment_method
  is '新品收款方式';
comment on column TTA_PROPOSAL_HEADER.new_store_qty
  is '新品店铺数量';
comment on column TTA_PROPOSAL_HEADER.pln_adjust_scale
  is '品牌计划调整比例';
comment on column TTA_PROPOSAL_HEADER.is_pln_confirm
  is '品牌计划表是否确认';
comment on column TTA_PROPOSAL_HEADER.is_terms_confirm
  is 'TTA  Terms是否确认';
comment on column TTA_PROPOSAL_HEADER.is_depart_confirm
  is '部门协定标准是否确认';
comment on column TTA_PROPOSAL_HEADER.is_new_confirm
  is '新品种推广服务费是否确认';
comment on column TTA_PROPOSAL_HEADER.is_quest_confirm
  is '问卷是否确认';
comment on column TTA_PROPOSAL_HEADER.is_cross_year
  is 'Cross-year是否跨年';
comment on column TTA_PROPOSAL_HEADER.begin_date
  is '开始日期';
comment on column TTA_PROPOSAL_HEADER.end_date
  is '结束日期';
comment on column TTA_PROPOSAL_HEADER.remark
  is '备注';
comment on column TTA_PROPOSAL_HEADER.creation_date
  is '制单日期';
comment on column TTA_PROPOSAL_HEADER.created_by
  is '制单人';
comment on column TTA_PROPOSAL_HEADER.is_change
  is '是否变更';
comment on column TTA_PROPOSAL_HEADER.source_id
  is '来源ID';
comment on column TTA_PROPOSAL_HEADER.source_code
  is '来源编号';
comment on column TTA_PROPOSAL_HEADER.alert_by
  is '变更人';
comment on column TTA_PROPOSAL_HEADER.alert_date
  is '变更时间';
comment on column TTA_PROPOSAL_HEADER.dept_code1
  is '部门1';
comment on column TTA_PROPOSAL_HEADER.dept_code2
  is '部门2';
comment on column TTA_PROPOSAL_HEADER.dept_code3
  is '部门3';
comment on column TTA_PROPOSAL_HEADER.dept_code4
  is '部门4';
comment on column TTA_PROPOSAL_HEADER.dept_code5
  is '部门5';
comment on column TTA_PROPOSAL_HEADER.dept_desc1
  is '部门1';
comment on column TTA_PROPOSAL_HEADER.dept_desc2
  is '部门2';
comment on column TTA_PROPOSAL_HEADER.dept_desc3
  is '部门3';
comment on column TTA_PROPOSAL_HEADER.dept_desc4
  is '部门4';
comment on column TTA_PROPOSAL_HEADER.dept_desc5
  is '部门5';
comment on column TTA_PROPOSAL_HEADER.version_status
  is '版本变更状态：1.生效，0失效';
comment on column TTA_PROPOSAL_HEADER.origin_proposal_id
  is '变更后原有proposal_id';
-- Create/Recreate indexes
create index PK_VENDOR_NBR on TTA_PROPOSAL_HEADER (VENDOR_NBR)
  tablespace TTA_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
-- Create/Recreate primary, unique and foreign key constraints
alter table TTA_PROPOSAL_HEADER
  add constraint PK_PROPOSAL_ID primary key (PROPOSAL_ID)
  using index
  tablespace TTA_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );


-- ----------------------------
-- Table structure for TTA_PROPOSAL_TERMS_HEADER
-- ----------------------------
DROP TABLE TTA_PROPOSAL_TERMS_HEADER;
CREATE TABLE TTA_PROPOSAL_TERMS_HEADER (
TERMS_H_ID NUMBER NOT NULL ,
AGREEMENT_EDITION VARCHAR2(50 BYTE) NOT NULL ,
VENDOR_NBR VARCHAR2(30 BYTE) NOT NULL ,
VENDOR_DESC VARCHAR2(230 BYTE) NOT NULL ,
DEPT_CODE VARCHAR2(30 BYTE) NOT NULL ,
DEPT_DESC VARCHAR2(230 BYTE) NOT NULL ,
BRAND_CODE VARCHAR2(30 BYTE) NULL ,
BRAND_CN VARCHAR2(230 BYTE) NOT NULL ,
BRAND_EN VARCHAR2(230 BYTE) NOT NULL ,
SALES_TYPE VARCHAR2(10 BYTE) NULL ,
CONSIGNMENT_DISCOUNT NUMBER NULL ,
FCS_PURCHSE NUMBER NULL ,
GP NUMBER NULL ,
WAREHOUSE_CODE VARCHAR2(30 BYTE) NOT NULL ,
WAREHOUSE_DESC VARCHAR2(230 BYTE) NOT NULL ,
PAY_DAYS NUMBER NULL ,
SALES_UP_SCALE NUMBER NULL ,
BUYER_CODE VARCHAR2(30 BYTE) NULL ,
INVOICE_TYPE VARCHAR2(30 BYTE) NULL ,
RED_TICKET_SCALE NUMBER NULL ,
FCS_SALES NUMBER NULL ,
IS_RETURN CHAR(1 BYTE) NULL ,
BEOI_TAX VARCHAR2(30 BYTE) NULL ,
SOURCE_PROPOSAL VARCHAR2(50 BYTE) NULL ,
TERMS_VERSION VARCHAR2(20 BYTE) NULL ,
REMARK VARCHAR2(2030 BYTE) NULL ,
CREATION_DATE DATE DEFAULT SYSDATE  NULL ,
CREATED_BY NUMBER NULL ,
LAST_UPDATED_BY NUMBER NULL ,
LAST_UPDATE_DATE DATE DEFAULT SYSDATE  NULL ,
LAST_UPDATE_LOGIN NUMBER NULL ,
VERSION_NUM NUMBER NULL ,
TERMS_CLASS VARCHAR2(130 BYTE) NULL ,
PROPOSAL_ID NUMBER NULL ,
SALES_AREA VARCHAR2(200 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN TTA_PROPOSAL_TERMS_HEADER.AGREEMENT_EDITION IS '合同版本';
COMMENT ON COLUMN TTA_PROPOSAL_TERMS_HEADER.VENDOR_NBR IS '供应商编号';
COMMENT ON COLUMN TTA_PROPOSAL_TERMS_HEADER.VENDOR_DESC IS '供应商';
COMMENT ON COLUMN TTA_PROPOSAL_TERMS_HEADER.DEPT_DESC IS '部门';
COMMENT ON COLUMN TTA_PROPOSAL_TERMS_HEADER.BRAND_CODE IS '品牌';
COMMENT ON COLUMN TTA_PROPOSAL_TERMS_HEADER.SALES_TYPE IS '销售方式';
COMMENT ON COLUMN TTA_PROPOSAL_TERMS_HEADER.CONSIGNMENT_DISCOUNT IS '寄售折扣';
COMMENT ON COLUMN TTA_PROPOSAL_TERMS_HEADER.WAREHOUSE_CODE IS '仓库编码';
COMMENT ON COLUMN TTA_PROPOSAL_TERMS_HEADER.WAREHOUSE_DESC IS '仓库描述';
COMMENT ON COLUMN TTA_PROPOSAL_TERMS_HEADER.PAY_DAYS IS '付款期（天数）';
COMMENT ON COLUMN TTA_PROPOSAL_TERMS_HEADER.SALES_UP_SCALE IS '营改增加成比例';
COMMENT ON COLUMN TTA_PROPOSAL_TERMS_HEADER.BUYER_CODE IS 'Buyer Code（工号）';
COMMENT ON COLUMN TTA_PROPOSAL_TERMS_HEADER.INVOICE_TYPE IS 'Invoice Type发票类型';
COMMENT ON COLUMN TTA_PROPOSAL_TERMS_HEADER.RED_TICKET_SCALE IS '红票收益屈臣氏分配占比';
COMMENT ON COLUMN TTA_PROPOSAL_TERMS_HEADER.IS_RETURN IS '是否可退货';
COMMENT ON COLUMN TTA_PROPOSAL_TERMS_HEADER.BEOI_TAX IS 'BEOI Tax税率';
COMMENT ON COLUMN TTA_PROPOSAL_TERMS_HEADER.SOURCE_PROPOSAL IS '原Proposal单号';
COMMENT ON COLUMN TTA_PROPOSAL_TERMS_HEADER.TERMS_VERSION IS '条款版本号';
COMMENT ON COLUMN TTA_PROPOSAL_TERMS_HEADER.PROPOSAL_ID IS 'proposal头表ID';
COMMENT ON COLUMN TTA_PROPOSAL_TERMS_HEADER.SALES_AREA IS '销售区域';

-- ----------------------------
-- Table structure for TTA_PROPOSAL_TERMS_LINE
-- ----------------------------
DROP TABLE TTA_PROPOSAL_TERMS_LINE;
CREATE TABLE TTA_PROPOSAL_TERMS_LINE (
TERMS_L_ID NUMBER NOT NULL ,
TERMS_H_ID NUMBER NOT NULL ,
INCOME_TYPE VARCHAR2(200 BYTE) NULL ,
Y_TERMS VARCHAR2(200 BYTE) NULL ,
COLLECT_TYPE VARCHAR2(20 BYTE) NULL ,
REFERENCE_STANDARD NUMBER NULL ,
Y_YEAR VARCHAR2(50 BYTE) NULL ,
QTY NUMBER NULL ,
UNIT VARCHAR2(50 BYTE) NULL ,
TERMS_SYSTEM VARCHAR2(50 BYTE) NULL ,
FEE_NOTAX NUMBER NULL ,
FEE_INTAS NUMBER NULL ,
TERMS_CODE VARCHAR2(50 BYTE) NULL ,
REMARK VARCHAR2(2030 BYTE) NULL ,
CREATION_DATE DATE DEFAULT SYSDATE  NULL ,
CREATED_BY NUMBER NULL ,
LAST_UPDATED_BY NUMBER NULL ,
LAST_UPDATE_DATE DATE DEFAULT SYSDATE  NULL ,
LAST_UPDATE_LOGIN NUMBER NULL ,
VERSION_NUM NUMBER NULL ,
PROPOSAL_ID NUMBER NULL ,
CLAUSE_ID NUMBER NULL ,
CLAUSE_TREE_ID NUMBER NULL ,
ORDER_NO VARCHAR2(200 BYTE) NULL ,
Y_TERMS_EN VARCHAR2(200 BYTE) NULL ,
OLD_CLAUSE_ID NUMBER NULL ,
BUSINESS_VERSION VARCHAR2(200 BYTE) NULL ,
OI_TYPE VARCHAR2(200 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE TTA_PROPOSAL_TERMS_LINE IS 'TTA TERMS 条款明细';
COMMENT ON COLUMN TTA_PROPOSAL_TERMS_LINE.INCOME_TYPE IS '收入类型';
COMMENT ON COLUMN TTA_PROPOSAL_TERMS_LINE.Y_TERMS IS 'Y年度条款';
COMMENT ON COLUMN TTA_PROPOSAL_TERMS_LINE.COLLECT_TYPE IS '收取方式';
COMMENT ON COLUMN TTA_PROPOSAL_TERMS_LINE.REFERENCE_STANDARD IS '参考标准';
COMMENT ON COLUMN TTA_PROPOSAL_TERMS_LINE.Y_YEAR IS '年度TTA';
COMMENT ON COLUMN TTA_PROPOSAL_TERMS_LINE.QTY IS '数量';
COMMENT ON COLUMN TTA_PROPOSAL_TERMS_LINE.UNIT IS '单位';
COMMENT ON COLUMN TTA_PROPOSAL_TERMS_LINE.TERMS_SYSTEM IS 'Y年度条款（System）';
COMMENT ON COLUMN TTA_PROPOSAL_TERMS_LINE.FEE_NOTAX IS '年度费用预估（不含税）（含加税）';
COMMENT ON COLUMN TTA_PROPOSAL_TERMS_LINE.FEE_INTAS IS '年度费用预告（含税）（含加成）';
COMMENT ON COLUMN TTA_PROPOSAL_TERMS_LINE.TERMS_CODE IS '条款编号';
COMMENT ON COLUMN TTA_PROPOSAL_TERMS_LINE.CLAUSE_ID IS '条款名目ID';
COMMENT ON COLUMN TTA_PROPOSAL_TERMS_LINE.CLAUSE_TREE_ID IS '条款收取方式ID';
COMMENT ON COLUMN TTA_PROPOSAL_TERMS_LINE.ORDER_NO IS '排序号';
COMMENT ON COLUMN TTA_PROPOSAL_TERMS_LINE.Y_TERMS_EN IS '条款EN';
COMMENT ON COLUMN TTA_PROPOSAL_TERMS_LINE.OLD_CLAUSE_ID IS '往年条款ID ';
COMMENT ON COLUMN TTA_PROPOSAL_TERMS_LINE.BUSINESS_VERSION IS '版本号';

-- ----------------------------
-- Table structure for TTA_PURCHASE
-- ----------------------------
DROP TABLE TTA_PURCHASE;
CREATE TABLE TTA_PURCHASE (
PURCHASE_ID NUMBER NOT NULL ,
VENDOR_NBR VARCHAR2(50 BYTE) NOT NULL ,
VENDOR_NAME VARCHAR2(230 BYTE) NOT NULL ,
YEAR_MONTH_DAY DATE NOT NULL ,
LOCATION VARCHAR2(500 BYTE) NULL ,
ITEM_NBR VARCHAR2(50 BYTE) NULL ,
RECEIVING_QTY NUMBER NULL ,
RECEIVING_AMOUNT NUMBER(10,2) NULL ,
CANCEL_RECEIVING_QTY NUMBER NULL ,
CANCEL_RECEIVING_AMT NUMBER(10,2) NULL ,
CURRENCY VARCHAR2(10 BYTE) NULL ,
PURCHASE_TYPE VARCHAR2(10 BYTE) NULL ,
ADDRESS_TYPE VARCHAR2(10 BYTE) NULL ,
PO_NBR VARCHAR2(50 BYTE) NULL ,
IS_DSD CHAR(1 BYTE) NOT NULL ,
STORE VARCHAR2(50 BYTE) NULL ,
VERSION_NUM NUMBER NULL ,
CREATION_DATE DATE DEFAULT sysdate  NOT NULL ,
CREATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATE_DATE DATE DEFAULT sysdate  NOT NULL ,
LAST_UPDATE_LOGIN NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE TTA_PURCHASE IS 'PURCHASE数据';
COMMENT ON COLUMN TTA_PURCHASE.PURCHASE_ID IS '主键';
COMMENT ON COLUMN TTA_PURCHASE.VENDOR_NBR IS '供应商编号';
COMMENT ON COLUMN TTA_PURCHASE.VENDOR_NAME IS '供应商名称';
COMMENT ON COLUMN TTA_PURCHASE.YEAR_MONTH_DAY IS '收货日期';
COMMENT ON COLUMN TTA_PURCHASE.LOCATION IS '仓库地址';
COMMENT ON COLUMN TTA_PURCHASE.ITEM_NBR IS 'ITEM编号';
COMMENT ON COLUMN TTA_PURCHASE.RECEIVING_QTY IS '收货数量';
COMMENT ON COLUMN TTA_PURCHASE.RECEIVING_AMOUNT IS '收货金额';
COMMENT ON COLUMN TTA_PURCHASE.CANCEL_RECEIVING_QTY IS '采购退货数量';
COMMENT ON COLUMN TTA_PURCHASE.CANCEL_RECEIVING_AMT IS '采购退货金额';
COMMENT ON COLUMN TTA_PURCHASE.CURRENCY IS '币种';
COMMENT ON COLUMN TTA_PURCHASE.PURCHASE_TYPE IS '采购模式';
COMMENT ON COLUMN TTA_PURCHASE.ADDRESS_TYPE IS '地点类型';
COMMENT ON COLUMN TTA_PURCHASE.PO_NBR IS 'PO单号';
COMMENT ON COLUMN TTA_PURCHASE.IS_DSD IS 'IS_DSD';
COMMENT ON COLUMN TTA_PURCHASE.STORE IS 'STORE';
COMMENT ON COLUMN TTA_PURCHASE.VERSION_NUM IS '版本号';

-- ----------------------------
-- Table structure for TTA_QUESTIONNAIRE_CHOICE
-- ----------------------------
DROP TABLE TTA_QUESTIONNAIRE_CHOICE;
CREATE TABLE TTA_QUESTIONNAIRE_CHOICE (
QN_CHOICE_ID NUMBER(6) NOT NULL ,
QN_LINE_ID NUMBER DEFAULT NULL  NULL ,
QN_CHOICE VARCHAR2(100 BYTE) DEFAULT NULL  NULL ,
QN_CHOICE_CONTENT VARCHAR2(500 BYTE) DEFAULT NULL  NULL ,
QN_ANSWER VARCHAR2(100 BYTE) DEFAULT NULL  NULL ,
DISPLAY_FLAG VARCHAR2(100 BYTE) DEFAULT NULL  NULL ,
DESCRIPTION VARCHAR2(500 BYTE) DEFAULT NULL  NULL ,
SELECT_QN_LINE_ID VARCHAR2(500 BYTE) DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT sysdate  NOT NULL ,
CREATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATE_DATE DATE DEFAULT sysdate  NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
HAS_SEC_LINE VARCHAR2(2 BYTE) DEFAULT 0  NULL ,
QN_CHOICE_CONTENT_ALT VARCHAR2(500 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN TTA_QUESTIONNAIRE_CHOICE.QN_CHOICE_ID IS '表ID，主键，供其他表做外键';
COMMENT ON COLUMN TTA_QUESTIONNAIRE_CHOICE.QN_LINE_ID IS '行ID';
COMMENT ON COLUMN TTA_QUESTIONNAIRE_CHOICE.QN_CHOICE IS '选项';
COMMENT ON COLUMN TTA_QUESTIONNAIRE_CHOICE.QN_CHOICE_CONTENT IS '选项内容/文本内容';
COMMENT ON COLUMN TTA_QUESTIONNAIRE_CHOICE.QN_ANSWER IS '题目答案';
COMMENT ON COLUMN TTA_QUESTIONNAIRE_CHOICE.DISPLAY_FLAG IS '是否显示标志';
COMMENT ON COLUMN TTA_QUESTIONNAIRE_CHOICE.DESCRIPTION IS '说明、备注';
COMMENT ON COLUMN TTA_QUESTIONNAIRE_CHOICE.SELECT_QN_LINE_ID IS '选中的行ID集';
COMMENT ON COLUMN TTA_QUESTIONNAIRE_CHOICE.HAS_SEC_LINE IS '是否有二级题目';
COMMENT ON COLUMN TTA_QUESTIONNAIRE_CHOICE.QN_CHOICE_CONTENT_ALT IS '选项内容别名';

-- ----------------------------
-- Table structure for TTA_QUESTIONNAIRE_LINE
-- ----------------------------
DROP TABLE TTA_QUESTIONNAIRE_LINE;
CREATE TABLE TTA_QUESTIONNAIRE_LINE (
QN_LINE_ID NUMBER(6) NOT NULL ,
SERIAL_NUMBER NUMBER DEFAULT NULL  NULL ,
PROJECT_TYPE VARCHAR2(100 BYTE) DEFAULT NULL  NULL ,
PROJECT_TITLE VARCHAR2(500 BYTE) DEFAULT NULL  NULL ,
PROJECT_TITLE_ALT VARCHAR2(500 BYTE) DEFAULT NULL  NULL ,
REQUIRE_FLAG VARCHAR2(100 BYTE) DEFAULT NULL  NULL ,
DISPLAY_FLAG VARCHAR2(100 BYTE) DEFAULT 'Y'  NULL ,
DESCRIPTION VARCHAR2(500 BYTE) DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT sysdate  NOT NULL ,
CREATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATE_DATE DATE DEFAULT sysdate  NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
CALC_RULE VARCHAR2(50 BYTE) NULL ,
PROJECT_CATEGORY VARCHAR2(2 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN TTA_QUESTIONNAIRE_LINE.QN_LINE_ID IS '表ID，主键，供其他表做外键';
COMMENT ON COLUMN TTA_QUESTIONNAIRE_LINE.SERIAL_NUMBER IS '题目序号';
COMMENT ON COLUMN TTA_QUESTIONNAIRE_LINE.PROJECT_TYPE IS '题目类型(单选/多选/文本/规则)';
COMMENT ON COLUMN TTA_QUESTIONNAIRE_LINE.PROJECT_TITLE IS '题目标题';
COMMENT ON COLUMN TTA_QUESTIONNAIRE_LINE.PROJECT_TITLE_ALT IS '题目标题英文别名';
COMMENT ON COLUMN TTA_QUESTIONNAIRE_LINE.REQUIRE_FLAG IS '是否必需标记';
COMMENT ON COLUMN TTA_QUESTIONNAIRE_LINE.DISPLAY_FLAG IS '是否显示标志';
COMMENT ON COLUMN TTA_QUESTIONNAIRE_LINE.DESCRIPTION IS '说明、备注';
COMMENT ON COLUMN TTA_QUESTIONNAIRE_LINE.CALC_RULE IS '计算规则';
COMMENT ON COLUMN TTA_QUESTIONNAIRE_LINE.PROJECT_CATEGORY IS '题目类别 1:一级题目，2:二级题目 3:规则题型';

-- ----------------------------
-- Table structure for TTA_QUESTIONNAIRE_PUBLISH
-- ----------------------------
DROP TABLE TTA_QUESTIONNAIRE_PUBLISH;
CREATE TABLE TTA_QUESTIONNAIRE_PUBLISH (
PUBLISH_ID NUMBER(6) NOT NULL ,
TEST_QN_HEAD_ID NUMBER DEFAULT NULL  NULL ,
PUBLISH_CODE VARCHAR2(100 BYTE) DEFAULT NULL  NULL ,
QN_TYPE VARCHAR2(100 BYTE) DEFAULT NULL  NULL ,
ORGS_ID VARCHAR2(500 BYTE) DEFAULT NULL  NULL ,
USERS_ID VARCHAR2(2000 BYTE) DEFAULT NULL  NULL ,
STATUS VARCHAR2(100 BYTE) DEFAULT NULL  NULL ,
FLOW_STATUS VARCHAR2(100 BYTE) DEFAULT NULL  NULL ,
START_DATE_ACTIVE DATE DEFAULT NULL  NULL ,
END_DATE_ACTIVE DATE DEFAULT NULL  NULL ,
PROCESS_INSTANCE_ID VARCHAR2(100 BYTE) DEFAULT NULL  NULL ,
DESCRIPTION VARCHAR2(500 BYTE) DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT sysdate  NOT NULL ,
CREATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATE_DATE DATE DEFAULT sysdate  NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN TTA_QUESTIONNAIRE_PUBLISH.PUBLISH_ID IS '表ID，主键，供其他表做外键';
COMMENT ON COLUMN TTA_QUESTIONNAIRE_PUBLISH.TEST_QN_HEAD_ID IS '调查问卷头ID';
COMMENT ON COLUMN TTA_QUESTIONNAIRE_PUBLISH.PUBLISH_CODE IS '发布编号';
COMMENT ON COLUMN TTA_QUESTIONNAIRE_PUBLISH.QN_TYPE IS '问卷类型';
COMMENT ON COLUMN TTA_QUESTIONNAIRE_PUBLISH.ORGS_ID IS '组织(多选)';
COMMENT ON COLUMN TTA_QUESTIONNAIRE_PUBLISH.USERS_ID IS '用户(多选)';
COMMENT ON COLUMN TTA_QUESTIONNAIRE_PUBLISH.STATUS IS '状态';
COMMENT ON COLUMN TTA_QUESTIONNAIRE_PUBLISH.FLOW_STATUS IS '审批状态';
COMMENT ON COLUMN TTA_QUESTIONNAIRE_PUBLISH.START_DATE_ACTIVE IS '起始日期';
COMMENT ON COLUMN TTA_QUESTIONNAIRE_PUBLISH.END_DATE_ACTIVE IS '终止日期';
COMMENT ON COLUMN TTA_QUESTIONNAIRE_PUBLISH.PROCESS_INSTANCE_ID IS '流程标识';
COMMENT ON COLUMN TTA_QUESTIONNAIRE_PUBLISH.DESCRIPTION IS '说明、备注';

-- ----------------------------
-- Table structure for TTA_QUESTIONNAIRE_RESULT
-- ----------------------------
DROP TABLE TTA_QUESTIONNAIRE_RESULT;
CREATE TABLE TTA_QUESTIONNAIRE_RESULT (
RESULT_CHOICE_ID NUMBER(6) NOT NULL ,
PROPOSAL_ID NUMBER DEFAULT NULL  NULL ,
QN_LINE_ID NUMBER DEFAULT NULL  NULL ,
QN_CHOICE_ID VARCHAR2(500 BYTE) DEFAULT NULL  NULL ,
RESULT_NUM NUMBER DEFAULT NULL  NULL ,
QN_CHOICE_RESULT VARCHAR2(500 BYTE) DEFAULT NULL  NULL ,
DESCRIPTION VARCHAR2(500 BYTE) DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT sysdate  NOT NULL ,
CREATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATE_DATE DATE DEFAULT sysdate  NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN TTA_QUESTIONNAIRE_RESULT.RESULT_CHOICE_ID IS '表ID，主键，供其他表做外键';
COMMENT ON COLUMN TTA_QUESTIONNAIRE_RESULT.PROPOSAL_ID IS 'PROPOSAL_ID';
COMMENT ON COLUMN TTA_QUESTIONNAIRE_RESULT.QN_LINE_ID IS '行ID';
COMMENT ON COLUMN TTA_QUESTIONNAIRE_RESULT.QN_CHOICE_ID IS '选项ID';
COMMENT ON COLUMN TTA_QUESTIONNAIRE_RESULT.RESULT_NUM IS '第几个答题';
COMMENT ON COLUMN TTA_QUESTIONNAIRE_RESULT.QN_CHOICE_RESULT IS '选项答案';
COMMENT ON COLUMN TTA_QUESTIONNAIRE_RESULT.DESCRIPTION IS '说明、备注';

-- ----------------------------
-- Table structure for TTA_REL_SUPPLIER
-- ----------------------------
DROP TABLE TTA_REL_SUPPLIER;
-- Create table
create table TTA_REL_SUPPLIER
(
  rel_supplier_id     INTEGER not null,
  rel_supplier_code   VARCHAR2(50) not null,
  rel_supplier_name   VARCHAR2(230) not null,
  rel_id              INTEGER not null,
  status              CHAR(1),
  creation_date       DATE default SYSDATE,
  created_by          INTEGER,
  last_updated_by     INTEGER,
  last_update_date    DATE default SYSDATE,
  last_update_login   INTEGER,
  version_num         INTEGER,
  rel_contract_output VARCHAR2(30)
)
tablespace TTA_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
-- Add comments to the table
comment on table TTA_REL_SUPPLIER
  is '关联供应商表';
-- Add comments to the columns
comment on column TTA_REL_SUPPLIER.rel_supplier_id
  is '主键ID';
comment on column TTA_REL_SUPPLIER.rel_supplier_code
  is '供应商编号';
comment on column TTA_REL_SUPPLIER.rel_supplier_name
  is '供应商名';
comment on column TTA_REL_SUPPLIER.rel_id
  is '外键，tta_base_supplier表id';
comment on column TTA_REL_SUPPLIER.status
  is '状态';
comment on column TTA_REL_SUPPLIER.creation_date
  is '创建日期';
comment on column TTA_REL_SUPPLIER.created_by
  is '创建人';
comment on column TTA_REL_SUPPLIER.last_updated_by
  is '更新人';
comment on column TTA_REL_SUPPLIER.last_update_date
  is '更新日期';
comment on column TTA_REL_SUPPLIER.last_update_login
  is '登录人';
comment on column TTA_REL_SUPPLIER.version_num
  is '版本号';
comment on column TTA_REL_SUPPLIER.rel_contract_output
  is '是否合同输出';
-- Create/Recreate indexes
create unique index TTA_REL_SUPPLIER_U1 on TTA_REL_SUPPLIER (REL_SUPPLIER_CODE, REL_ID)
  tablespace TTA_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
-- Create/Recreate primary, unique and foreign key constraints
alter table TTA_REL_SUPPLIER
  add constraint PK_TTA_REL_SUPPLIER primary key (REL_SUPPLIER_ID)
  using index
  tablespace TTA_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );


-- ----------------------------
-- Table structure for TTA_REL_SUPPLIER_BRAND
-- ----------------------------
DROP TABLE TTA_REL_SUPPLIER_BRAND;
CREATE TABLE TTA_REL_SUPPLIER_BRAND (
REL_SUPPLIER_ID NUMBER NOT NULL ,
REL_BRAND_CODE VARCHAR2(50 BYTE) NULL ,
REL_BRAND_NAME VARCHAR2(230 BYTE) NOT NULL ,
REL_ID NUMBER NOT NULL ,
STATUS CHAR(1 BYTE) NULL ,
CREATION_DATE DATE DEFAULT SYSDATE  NULL ,
CREATED_BY NUMBER NULL ,
LAST_UPDATED_BY NUMBER NULL ,
LAST_UPDATE_DATE DATE DEFAULT SYSDATE  NULL ,
LAST_UPDATE_LOGIN NUMBER NULL ,
VERSION_NUM NUMBER NULL ,
GROUP_CODE VARCHAR2(50 BYTE) NULL ,
DEPT_CODE VARCHAR2(50 BYTE) NULL ,
BU_SCORECARD VARCHAR2(150 BYTE) NULL ,
WIN_TOP_SUPPLIER VARCHAR2(150 BYTE) NULL ,
KB_SCORECARD VARCHAR2(150 BYTE) NULL ,
GROUP_NAME VARCHAR2(150 BYTE) NULL ,
DEPT_NAME VARCHAR2(150 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE TTA_REL_SUPPLIER_BRAND IS '供应商对应品牌信息表';
COMMENT ON COLUMN TTA_REL_SUPPLIER_BRAND.REL_SUPPLIER_ID IS '主键ID';
COMMENT ON COLUMN TTA_REL_SUPPLIER_BRAND.REL_BRAND_CODE IS '品牌编号';
COMMENT ON COLUMN TTA_REL_SUPPLIER_BRAND.REL_BRAND_NAME IS '品牌名称';
COMMENT ON COLUMN TTA_REL_SUPPLIER_BRAND.REL_ID IS '外键，tta_base_supplier表id';
COMMENT ON COLUMN TTA_REL_SUPPLIER_BRAND.STATUS IS '状态';
COMMENT ON COLUMN TTA_REL_SUPPLIER_BRAND.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN TTA_REL_SUPPLIER_BRAND.CREATED_BY IS '创建人';
COMMENT ON COLUMN TTA_REL_SUPPLIER_BRAND.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN TTA_REL_SUPPLIER_BRAND.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN TTA_REL_SUPPLIER_BRAND.LAST_UPDATE_LOGIN IS '登录人';
COMMENT ON COLUMN TTA_REL_SUPPLIER_BRAND.VERSION_NUM IS '版本号';
COMMENT ON COLUMN TTA_REL_SUPPLIER_BRAND.DEPT_NAME IS '部门名称';

-- ----------------------------
-- Table structure for TTA_REL_SUPPLIER_DEPT
-- ----------------------------
DROP TABLE TTA_REL_SUPPLIER_DEPT;
CREATE TABLE TTA_REL_SUPPLIER_DEPT (
REL_SUPPLIER_ID NUMBER NOT NULL ,
REL_DEPT_CODE VARCHAR2(50 BYTE) NOT NULL ,
REL_DEPT_NAME VARCHAR2(230 BYTE) NOT NULL ,
REL_ID NUMBER NOT NULL ,
STATUS CHAR(1 BYTE) NULL ,
CREATION_DATE DATE DEFAULT SYSDATE  NULL ,
CREATED_BY NUMBER NULL ,
LAST_UPDATED_BY NUMBER NULL ,
LAST_UPDATE_DATE DATE DEFAULT SYSDATE  NULL ,
LAST_UPDATE_LOGIN NUMBER NULL ,
VERSION_NUM NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE TTA_REL_SUPPLIER_DEPT IS '供应商部门关系表';
COMMENT ON COLUMN TTA_REL_SUPPLIER_DEPT.REL_SUPPLIER_ID IS '主键ID';
COMMENT ON COLUMN TTA_REL_SUPPLIER_DEPT.REL_DEPT_CODE IS '所属关系部门编号';
COMMENT ON COLUMN TTA_REL_SUPPLIER_DEPT.REL_DEPT_NAME IS '所属关系部门名称';
COMMENT ON COLUMN TTA_REL_SUPPLIER_DEPT.REL_ID IS '外键，tta_base_supplier表id';
COMMENT ON COLUMN TTA_REL_SUPPLIER_DEPT.STATUS IS '状态';
COMMENT ON COLUMN TTA_REL_SUPPLIER_DEPT.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN TTA_REL_SUPPLIER_DEPT.CREATED_BY IS '创建人';
COMMENT ON COLUMN TTA_REL_SUPPLIER_DEPT.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN TTA_REL_SUPPLIER_DEPT.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN TTA_REL_SUPPLIER_DEPT.LAST_UPDATE_LOGIN IS '登录人';
COMMENT ON COLUMN TTA_REL_SUPPLIER_DEPT.VERSION_NUM IS '版本号';

-- ----------------------------
-- Table structure for TTA_REPORT_RELATIONSHIP_IN
-- ----------------------------
DROP TABLE TTA_REPORT_RELATIONSHIP_IN;
CREATE TABLE TTA_REPORT_RELATIONSHIP_IN (
EMPLOYEE_NO VARCHAR2(100 BYTE) NOT NULL ,
REPORT_TO VARCHAR2(100 BYTE) NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT sysdate  NULL ,
CREATED_BY NUMBER DEFAULT 1  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT 1  NULL ,
LAST_UPDATE_DATE DATE DEFAULT sysdate  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT 1  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE TTA_REPORT_RELATIONSHIP_IN IS '汇报关系表';
COMMENT ON COLUMN TTA_REPORT_RELATIONSHIP_IN.EMPLOYEE_NO IS '员工编号';
COMMENT ON COLUMN TTA_REPORT_RELATIONSHIP_IN.REPORT_TO IS '上级员工编号';

-- ----------------------------
-- Table structure for TTA_RULE_FILE_TEMPLATE
-- ----------------------------
DROP TABLE TTA_RULE_FILE_TEMPLATE;
CREATE TABLE TTA_RULE_FILE_TEMPLATE (
FILE_TEMP_ID NUMBER NOT NULL ,
FILE_TEMP_NAME VARCHAR2(100 BYTE) NOT NULL ,
FILE_TYPE VARCHAR2(50 BYTE) NOT NULL ,
FILE_CONTENT CLOB NOT NULL ,
CREATED_BY NUMBER NULL ,
LAST_UPDATED_BY NUMBER NULL ,
LAST_UPDATE_DATE DATE DEFAULT sysdate  NULL ,
CREATION_DATE DATE DEFAULT sysdate  NULL ,
LAST_UPDATE_LOGIN NUMBER NULL ,
VERSION_NUM NUMBER NULL ,
BUSINESS_TYPE VARCHAR2(50 BYTE) NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN TTA_RULE_FILE_TEMPLATE.FILE_TEMP_ID IS '主键id';
COMMENT ON COLUMN TTA_RULE_FILE_TEMPLATE.FILE_TEMP_NAME IS '文件模板名称';
COMMENT ON COLUMN TTA_RULE_FILE_TEMPLATE.FILE_TYPE IS '文件模板类型';
COMMENT ON COLUMN TTA_RULE_FILE_TEMPLATE.FILE_CONTENT IS '文件内容';
COMMENT ON COLUMN TTA_RULE_FILE_TEMPLATE.BUSINESS_TYPE IS '业务类型：1：规则模板';


-- ----------------------------
-- Table structure for TTA_SIDE_AGRT_HEADER
-- ----------------------------
DROP TABLE TTA_SIDE_AGRT_HEADER;
CREATE TABLE TTA_SIDE_AGRT_HEADER (
SIDE_AGRT_H_ID NUMBER NOT NULL ,
SIDE_AGRT_CODE VARCHAR2(50 BYTE) NULL ,
SIDE_AGRT_VERSION VARCHAR2(50 BYTE) NULL ,
START_DATE DATE NULL ,
END_DATE DATE NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT SYSDATE  NOT NULL ,
CREATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATE_DATE DATE DEFAULT SYSDATE  NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
BILL_STATUS VARCHAR2(20 BYTE) DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE TTA_SIDE_AGRT_HEADER IS ' 合同 补充协议主信息';
COMMENT ON COLUMN TTA_SIDE_AGRT_HEADER.SIDE_AGRT_H_ID IS '主键';
COMMENT ON COLUMN TTA_SIDE_AGRT_HEADER.SIDE_AGRT_CODE IS '单据编号';
COMMENT ON COLUMN TTA_SIDE_AGRT_HEADER.SIDE_AGRT_VERSION IS '协议版本号';
COMMENT ON COLUMN TTA_SIDE_AGRT_HEADER.START_DATE IS '合同开始日期';
COMMENT ON COLUMN TTA_SIDE_AGRT_HEADER.END_DATE IS '合同结束日期';
COMMENT ON COLUMN TTA_SIDE_AGRT_HEADER.BILL_STATUS IS ' 单据状态';

-- ----------------------------
-- Table structure for TTA_SIDE_AGRT_LINE
-- ----------------------------
DROP TABLE TTA_SIDE_AGRT_LINE;
CREATE TABLE TTA_SIDE_AGRT_LINE (
SIDE_AGRT_L_ID NUMBER NOT NULL ,
SIDE_AGRT_H_ID NUMBER NULL ,
SIDE_AGRT_VERSION VARCHAR2(50 BYTE) NULL ,
PROPOSAL_CONTRACT_CODE CHAR(10 BYTE) NULL ,
VENDOR_NAME VARCHAR2(200 BYTE) NULL ,
VENDOR_CODE VARCHAR2(50 BYTE) NULL ,
STATUS VARCHAR2(2 BYTE) NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT SYSDATE  NOT NULL ,
CREATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATE_DATE DATE DEFAULT SYSDATE  NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE TTA_SIDE_AGRT_LINE IS ' 补充协议行信息';
COMMENT ON COLUMN TTA_SIDE_AGRT_LINE.SIDE_AGRT_L_ID IS '主键';
COMMENT ON COLUMN TTA_SIDE_AGRT_LINE.SIDE_AGRT_H_ID IS '关联头信息ID';
COMMENT ON COLUMN TTA_SIDE_AGRT_LINE.SIDE_AGRT_VERSION IS '关联头信息版本号';
COMMENT ON COLUMN TTA_SIDE_AGRT_LINE.PROPOSAL_CONTRACT_CODE IS 'PROPOSAL 合同号';
COMMENT ON COLUMN TTA_SIDE_AGRT_LINE.VENDOR_NAME IS '供应商名称';
COMMENT ON COLUMN TTA_SIDE_AGRT_LINE.VENDOR_CODE IS '供应商编码';
COMMENT ON COLUMN TTA_SIDE_AGRT_LINE.STATUS IS '删除状态：Y/N';

-- ----------------------------
-- Table structure for TTA_SOLE_AGRT
-- ----------------------------
DROP TABLE TTA_SOLE_AGRT;
CREATE TABLE TTA_SOLE_AGRT (
SOLE_AGRT_H_ID NUMBER NOT NULL ,
SOLE_AGRT_CODE VARCHAR2(50 BYTE) NULL ,
STATUS VARCHAR2(50 BYTE) NULL ,
SOLE_AGRT_VERSION VARCHAR2(50 BYTE) NULL ,
APPLY_DATE DATE NULL ,
START_DATE DATE NULL ,
END_DATE DATE NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT sysdate  NULL ,
CREATED_BY NUMBER DEFAULT -1  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT -1  NULL ,
LAST_UPDATE_DATE DATE DEFAULT sysdate  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE TTA_SOLE_AGRT IS '独家协议主信息';
COMMENT ON COLUMN TTA_SOLE_AGRT.SOLE_AGRT_H_ID IS '主键';
COMMENT ON COLUMN TTA_SOLE_AGRT.SOLE_AGRT_CODE IS '单据编号';
COMMENT ON COLUMN TTA_SOLE_AGRT.STATUS IS '单据状态';
COMMENT ON COLUMN TTA_SOLE_AGRT.SOLE_AGRT_VERSION IS '协议版本号';
COMMENT ON COLUMN TTA_SOLE_AGRT.APPLY_DATE IS '申请日期';
COMMENT ON COLUMN TTA_SOLE_AGRT.START_DATE IS '生效开始日期';
COMMENT ON COLUMN TTA_SOLE_AGRT.END_DATE IS '生效截止日期';

-- ----------------------------
-- Table structure for TTA_SOLE_AGRT_INFO
-- ----------------------------
DROP TABLE TTA_SOLE_AGRT_INFO;
CREATE TABLE TTA_SOLE_AGRT_INFO (
SOLE_AGRT_INFO_ID NUMBER NOT NULL ,
SOLE_SUPPLIER_ID NUMBER NULL ,
IS_PEB VARCHAR2(2 BYTE) NULL ,
SUPPLIER_CODE VARCHAR2(50 BYTE) NULL ,
SUPPLIER_NAME VARCHAR2(50 BYTE) NULL ,
ORG_CODE VARCHAR2(50 BYTE) NULL ,
SOLE_BRAND_CN VARCHAR2(100 BYTE) NULL ,
SALE_START_DATE DATE NULL ,
SALE_END_DATE DATE NULL ,
SALE_REGION VARCHAR2(2 BYTE) NULL ,
IS_NEW_SOLE VARCHAR2(2 BYTE) NULL ,
IS_SPECIAL VARCHAR2(2 BYTE) NULL ,
IS_AUTO_DEFERRAL VARCHAR2(2 BYTE) NULL ,
CHANNEL_TYPE VARCHAR2(2 BYTE) NULL ,
PRODUCT_TYPE VARCHAR2(2 BYTE) NULL ,
IS_EC_CHANNEL VARCHAR2(2 BYTE) NULL ,
IS_EXCEPTION VARCHAR2(2 BYTE) NULL ,
EXCEPTION_REMARK VARCHAR2(500 BYTE) NULL ,
IS_COVERED VARCHAR2(2 BYTE) NULL ,
IS_END_ARGT VARCHAR2(2 BYTE) NULL ,
IS_CHANGE_CLAUSE VARCHAR2(2 BYTE) NULL ,
IS_SIGN_ACCOUNT VARCHAR2(2 BYTE) NULL ,
CONTRACT_SITUATION VARCHAR2(100 BYTE) NULL ,
REMARK VARCHAR2(500 BYTE) NULL ,
CONTRACT_ACCEPT_DATE VARCHAR2(500 BYTE) NULL ,
SALE_EFFECT_DATE DATE NULL ,
IS_SPECIAL_APPROVAL VARCHAR2(2 BYTE) NULL ,
IS_RENEWAL VARCHAR2(2 BYTE) NULL ,
SYS_START_DATE DATE NULL ,
SYS_END_DATE DATE NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT sysdate  NOT NULL ,
CREATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATE_DATE DATE DEFAULT sysdate  NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
SOLE_AGRT_H_ID NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE TTA_SOLE_AGRT_INFO IS '独家协议信息';
COMMENT ON COLUMN TTA_SOLE_AGRT_INFO.SOLE_AGRT_INFO_ID IS '主键';
COMMENT ON COLUMN TTA_SOLE_AGRT_INFO.SOLE_SUPPLIER_ID IS '表tta_sole_supplier外键ID';
COMMENT ON COLUMN TTA_SOLE_AGRT_INFO.IS_PEB IS '是否PEB,Y/N';
COMMENT ON COLUMN TTA_SOLE_AGRT_INFO.SUPPLIER_CODE IS '供应商编号';
COMMENT ON COLUMN TTA_SOLE_AGRT_INFO.SUPPLIER_NAME IS '供应商名称';
COMMENT ON COLUMN TTA_SOLE_AGRT_INFO.ORG_CODE IS '部门';
COMMENT ON COLUMN TTA_SOLE_AGRT_INFO.SOLE_BRAND_CN IS '独家品牌（中文）';
COMMENT ON COLUMN TTA_SOLE_AGRT_INFO.SALE_START_DATE IS '独家销售起始时间';
COMMENT ON COLUMN TTA_SOLE_AGRT_INFO.SALE_END_DATE IS '独家销售结束时间';
COMMENT ON COLUMN TTA_SOLE_AGRT_INFO.SALE_REGION IS '独家销售地域,中国（除港、澳、台）及空白';
COMMENT ON COLUMN TTA_SOLE_AGRT_INFO.IS_NEW_SOLE IS '新品是否直接成为独家产品 Y/N';
COMMENT ON COLUMN TTA_SOLE_AGRT_INFO.IS_SPECIAL IS '是否独家产品主要成分显著不同  Y/N';
COMMENT ON COLUMN TTA_SOLE_AGRT_INFO.IS_AUTO_DEFERRAL IS '是否独家期限自动顺延';
COMMENT ON COLUMN TTA_SOLE_AGRT_INFO.CHANNEL_TYPE IS '独家渠道类别:全渠道独家、健与美渠道，药房，大卖场和超市独家、健与美渠道独家、特殊渠道及空白';
COMMENT ON COLUMN TTA_SOLE_AGRT_INFO.PRODUCT_TYPE IS '指定产品:1指定产品、指定全品牌';
COMMENT ON COLUMN TTA_SOLE_AGRT_INFO.IS_EC_CHANNEL IS '是否包含电商渠道 Y/N';
COMMENT ON COLUMN TTA_SOLE_AGRT_INFO.IS_EXCEPTION IS '是否包含独家渠道例外情形 Y/N';
COMMENT ON COLUMN TTA_SOLE_AGRT_INFO.EXCEPTION_REMARK IS '独家渠道例外情形具体描述';
COMMENT ON COLUMN TTA_SOLE_AGRT_INFO.IS_COVERED IS '双方是否已盖章 Y/N';
COMMENT ON COLUMN TTA_SOLE_AGRT_INFO.IS_END_ARGT IS '是否结束旧协议  Y/N';
COMMENT ON COLUMN TTA_SOLE_AGRT_INFO.IS_CHANGE_CLAUSE IS '是否后期变更条 Y/N';
COMMENT ON COLUMN TTA_SOLE_AGRT_INFO.IS_SIGN_ACCOUNT IS '是否签订转户协议 Y/N';
COMMENT ON COLUMN TTA_SOLE_AGRT_INFO.CONTRACT_SITUATION IS '合同情况';
COMMENT ON COLUMN TTA_SOLE_AGRT_INFO.REMARK IS '备注';
COMMENT ON COLUMN TTA_SOLE_AGRT_INFO.CONTRACT_ACCEPT_DATE IS '合同接收时间';
COMMENT ON COLUMN TTA_SOLE_AGRT_INFO.SALE_EFFECT_DATE IS '独家生效时间';
COMMENT ON COLUMN TTA_SOLE_AGRT_INFO.IS_SPECIAL_APPROVAL IS '是否获得特批';
COMMENT ON COLUMN TTA_SOLE_AGRT_INFO.IS_RENEWAL IS '是否续签';
COMMENT ON COLUMN TTA_SOLE_AGRT_INFO.SYS_START_DATE IS '系统实际起始时间';
COMMENT ON COLUMN TTA_SOLE_AGRT_INFO.SYS_END_DATE IS '系统实际结束时间';

-- ----------------------------
-- Table structure for TTA_SOLE_ITEM
-- ----------------------------
DROP TABLE TTA_SOLE_ITEM;
CREATE TABLE TTA_SOLE_ITEM (
SOLE_ITEM_ID NUMBER NOT NULL ,
SOLE_AGRT_INFO_ID NUMBER NULL ,
GROUP_CODE VARCHAR2(50 BYTE) NULL ,
BRAND VARCHAR2(50 BYTE) NULL ,
BAR_CODE VARCHAR2(100 BYTE) NULL ,
ITEM_CODE VARCHAR2(50 BYTE) NULL ,
ITEM_NAME VARCHAR2(100 BYTE) NULL ,
EFFECTIVE_DATE DATE NULL ,
EXPIRATION_DATE DATE NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT sysdate  NOT NULL ,
CREATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATE_DATE DATE DEFAULT sysdate  NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE TTA_SOLE_ITEM IS '独家协议-ITEM信息表';
COMMENT ON COLUMN TTA_SOLE_ITEM.SOLE_ITEM_ID IS '主键';
COMMENT ON COLUMN TTA_SOLE_ITEM.SOLE_AGRT_INFO_ID IS '表tta_sole_agrt_info外键';
COMMENT ON COLUMN TTA_SOLE_ITEM.GROUP_CODE IS 'GROUP';
COMMENT ON COLUMN TTA_SOLE_ITEM.BRAND IS '品牌';
COMMENT ON COLUMN TTA_SOLE_ITEM.BAR_CODE IS '条形码';
COMMENT ON COLUMN TTA_SOLE_ITEM.ITEM_CODE IS 'ITEM编码';
COMMENT ON COLUMN TTA_SOLE_ITEM.ITEM_NAME IS 'ITEM名称供应商名称';
COMMENT ON COLUMN TTA_SOLE_ITEM.EFFECTIVE_DATE IS '生效日期';
COMMENT ON COLUMN TTA_SOLE_ITEM.EXPIRATION_DATE IS '失效日期';

-- ----------------------------
-- Table structure for TTA_SOLE_SUPPLIER
-- ----------------------------
DROP TABLE TTA_SOLE_SUPPLIER;
CREATE TABLE TTA_SOLE_SUPPLIER (
SOLE_SUPPLIER_ID NUMBER NOT NULL ,
SOLE_AGRT_H_ID NUMBER NULL ,
POPOSAL_ID NUMBER NULL ,
POPOSAL_CODE VARCHAR2(50 BYTE) NULL ,
SUPPLIER_CODE VARCHAR2(50 BYTE) NULL ,
SUPPLIER_NAME VARCHAR2(100 BYTE) NULL ,
VERSION_NUM NUMBER NULL ,
CREATION_DATE DATE DEFAULT sysdate  NOT NULL ,
CREATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATE_DATE DATE DEFAULT sysdate  NOT NULL ,
LAST_UPDATE_LOGIN NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE TTA_SOLE_SUPPLIER IS 'Proposal供应商信息';
COMMENT ON COLUMN TTA_SOLE_SUPPLIER.SOLE_SUPPLIER_ID IS '主键';
COMMENT ON COLUMN TTA_SOLE_SUPPLIER.SOLE_AGRT_H_ID IS '表tta_sole_agrt_header外键';
COMMENT ON COLUMN TTA_SOLE_SUPPLIER.POPOSAL_ID IS 'Proposal id';
COMMENT ON COLUMN TTA_SOLE_SUPPLIER.POPOSAL_CODE IS 'Proposal合同号';
COMMENT ON COLUMN TTA_SOLE_SUPPLIER.SUPPLIER_CODE IS '供应商编码';
COMMENT ON COLUMN TTA_SOLE_SUPPLIER.SUPPLIER_NAME IS '供应商名称供应商名称';

-- ----------------------------
-- Table structure for TTA_SUBJECT_CHOICE_SEC_MID
-- ----------------------------
DROP TABLE TTA_SUBJECT_CHOICE_SEC_MID;
CREATE TABLE TTA_SUBJECT_CHOICE_SEC_MID (
MID_ID NUMBER NOT NULL ,
QN_CHOICE_ID NUMBER NOT NULL ,
QN_LINE_ID NUMBER NOT NULL ,
VERSION_NUM NUMBER NULL ,
CREATION_DATE DATE DEFAULT sysdate  NOT NULL ,
CREATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATE_DATE DATE DEFAULT sysdate  NOT NULL ,
LAST_UPDATE_LOGIN NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN TTA_SUBJECT_CHOICE_SEC_MID.MID_ID IS '主键';
COMMENT ON COLUMN TTA_SUBJECT_CHOICE_SEC_MID.QN_CHOICE_ID IS '答题选项表(tta_questionnaire_choice)主键id';
COMMENT ON COLUMN TTA_SUBJECT_CHOICE_SEC_MID.QN_LINE_ID IS '题目表(tta_questionnaire_line)主键id';

-- ----------------------------
-- Table structure for TTA_SUPPLIER
-- ----------------------------
DROP TABLE TTA_SUPPLIER;
-- Create table
create table TTA_SUPPLIER
(
  supplier_id          INTEGER not null,
  supplier_code        VARCHAR2(50) not null,
  supplier_name        VARCHAR2(230) not null,
  status               CHAR(1) not null,
  is_latent            CHAR(1) not null,
  owner_dept           VARCHAR2(30),
  creation_date        DATE default SYSDATE,
  created_by           INTEGER,
  last_updated_by      INTEGER,
  last_update_date     DATE default SYSDATE,
  last_update_login    INTEGER,
  version_num          INTEGER,
  owner_group          VARCHAR2(30),
  contract_output      VARCHAR2(30),
  purchase_mode        VARCHAR2(30),
  proposal_brand_group VARCHAR2(30),
  latent_code          VARCHAR2(30),
  latent_name          VARCHAR2(230),
  dept_name            VARCHAR2(200)
)
tablespace TTA_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
-- Add comments to the table
comment on table TTA_SUPPLIER
  is '供应商头表信息表';
-- Add comments to the columns
comment on column TTA_SUPPLIER.supplier_id
  is '主键ID';
comment on column TTA_SUPPLIER.supplier_code
  is '供应商编号';
comment on column TTA_SUPPLIER.supplier_name
  is '供应商名称';
comment on column TTA_SUPPLIER.status
  is '状态';
comment on column TTA_SUPPLIER.is_latent
  is '是否潜在供应商';
comment on column TTA_SUPPLIER.creation_date
  is '创建日期';
comment on column TTA_SUPPLIER.created_by
  is '创建人';
comment on column TTA_SUPPLIER.last_updated_by
  is '更新人';
comment on column TTA_SUPPLIER.last_update_date
  is '更新日期';
comment on column TTA_SUPPLIER.last_update_login
  is '登录人';
comment on column TTA_SUPPLIER.version_num
  is '版本号';
comment on column TTA_SUPPLIER.dept_name
  is '部门CODE';
-- Create/Recreate indexes
create index PK_TTA_SUPPLIER_U1 on TTA_SUPPLIER (SUPPLIER_CODE)
  tablespace TTA_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
create index PK_TTA_SUPPLIER_U2 on TTA_SUPPLIER (OWNER_DEPT)
  tablespace TTA_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
-- Create/Recreate primary, unique and foreign key constraints
alter table TTA_SUPPLIER
  add constraint PK_TTA_SUPPLIER primary key (SUPPLIER_ID)
  using index
  tablespace TTA_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );


-- ----------------------------
-- Table structure for TTA_SUPPLIER_ITEM_HEADER
-- ----------------------------
DROP TABLE TTA_SUPPLIER_ITEM_HEADER;
CREATE TABLE TTA_SUPPLIER_ITEM_HEADER (
SUPPLIER_ITEM_ID NUMBER NOT NULL ,
BILL_CODE VARCHAR2(50 BYTE) NOT NULL ,
SUPPLIER_CODE VARCHAR2(50 BYTE) NOT NULL ,
SUPPLIER_NAME VARCHAR2(100 BYTE) NOT NULL ,
BILL_STATUS VARCHAR2(10 BYTE) NOT NULL ,
SPLIT_CONDITION VARCHAR2(10 BYTE) NOT NULL ,
CONFIRM_DATE DATE NULL ,
START_DATE DATE NULL ,
END_DATE DATE NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT sysdate  NOT NULL ,
CREATED_BY NUMBER DEFAULT -1  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT -1  NULL ,
LAST_UPDATE_DATE DATE DEFAULT sysdate  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE TTA_SUPPLIER_ITEM_HEADER IS '供应商物料投标信息';
COMMENT ON COLUMN TTA_SUPPLIER_ITEM_HEADER.SUPPLIER_ITEM_ID IS '主键';
COMMENT ON COLUMN TTA_SUPPLIER_ITEM_HEADER.BILL_CODE IS '单据编号';
COMMENT ON COLUMN TTA_SUPPLIER_ITEM_HEADER.SUPPLIER_CODE IS '供应商编号';
COMMENT ON COLUMN TTA_SUPPLIER_ITEM_HEADER.SUPPLIER_NAME IS '供应商名称';
COMMENT ON COLUMN TTA_SUPPLIER_ITEM_HEADER.BILL_STATUS IS '单据状态';
COMMENT ON COLUMN TTA_SUPPLIER_ITEM_HEADER.SPLIT_CONDITION IS '拆分条件';
COMMENT ON COLUMN TTA_SUPPLIER_ITEM_HEADER.CONFIRM_DATE IS '确认日期';
COMMENT ON COLUMN TTA_SUPPLIER_ITEM_HEADER.START_DATE IS '生效日期';
COMMENT ON COLUMN TTA_SUPPLIER_ITEM_HEADER.END_DATE IS '截止日期';

-- ----------------------------
-- Table structure for TTA_SUPPLIER_ITEM_LINE
-- ----------------------------
DROP TABLE TTA_SUPPLIER_ITEM_LINE;
CREATE TABLE TTA_SUPPLIER_ITEM_LINE (
SUPPLIER_ITEM_LINE_ID NUMBER NOT NULL ,
SUPPLIER_CODE VARCHAR2(50 BYTE) NOT NULL ,
SUPPLIER_NAME VARCHAR2(100 BYTE) NOT NULL ,
SPLIT_CONDITION VARCHAR2(5 BYTE) NOT NULL ,
DEPT_NAME VARCHAR2(100 BYTE) NOT NULL ,
DEPT_CODE VARCHAR2(50 BYTE) NOT NULL ,
BRAND_NAME VARCHAR2(100 BYTE) NOT NULL ,
BRAND_CODE VARCHAR2(100 BYTE) NOT NULL ,
ITEM_CODE VARCHAR2(50 BYTE) NOT NULL ,
ITEM_NAME VARCHAR2(100 BYTE) NOT NULL ,
ORIGINAL_SUPPLIER_CODE VARCHAR2(50 BYTE) NULL ,
ORIGINAL_SUPPLIER_NAME VARCHAR2(100 BYTE) NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT sysdate  NOT NULL ,
CREATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATE_DATE DATE DEFAULT sysdate  NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE TTA_SUPPLIER_ITEM_LINE IS '供应商物料拆分记录表';
COMMENT ON COLUMN TTA_SUPPLIER_ITEM_LINE.SUPPLIER_ITEM_LINE_ID IS '主键';
COMMENT ON COLUMN TTA_SUPPLIER_ITEM_LINE.SUPPLIER_CODE IS '供应商编码';
COMMENT ON COLUMN TTA_SUPPLIER_ITEM_LINE.SUPPLIER_NAME IS '供应商名称';
COMMENT ON COLUMN TTA_SUPPLIER_ITEM_LINE.SPLIT_CONDITION IS '拆分条件';
COMMENT ON COLUMN TTA_SUPPLIER_ITEM_LINE.DEPT_NAME IS '部门名称';
COMMENT ON COLUMN TTA_SUPPLIER_ITEM_LINE.DEPT_CODE IS '部门编码';
COMMENT ON COLUMN TTA_SUPPLIER_ITEM_LINE.BRAND_NAME IS '品牌名称';
COMMENT ON COLUMN TTA_SUPPLIER_ITEM_LINE.BRAND_CODE IS '品牌编码';
COMMENT ON COLUMN TTA_SUPPLIER_ITEM_LINE.ITEM_CODE IS '物料编码';
COMMENT ON COLUMN TTA_SUPPLIER_ITEM_LINE.ITEM_NAME IS '物料名称';
COMMENT ON COLUMN TTA_SUPPLIER_ITEM_LINE.ORIGINAL_SUPPLIER_CODE IS '原始供应商编码';
COMMENT ON COLUMN TTA_SUPPLIER_ITEM_LINE.ORIGINAL_SUPPLIER_NAME IS '原始供应商名称';

-- ----------------------------
-- Table structure for TTA_SUPPLIER_ITEM_ORIGINAL
-- ----------------------------
DROP TABLE TTA_SUPPLIER_ITEM_ORIGINAL;
CREATE TABLE TTA_SUPPLIER_ITEM_ORIGINAL (
SUPPLIER_ITEM_ORIGINAL_ID NUMBER NOT NULL ,
SUPPLIER_CODE VARCHAR2(50 BYTE) NOT NULL ,
SUPPLIER_NAME VARCHAR2(100 BYTE) NOT NULL ,
DEPT_CODE VARCHAR2(50 BYTE) NOT NULL ,
DEPT_NAME VARCHAR2(100 BYTE) NULL ,
BRAND_CODE VARCHAR2(100 BYTE) NOT NULL ,
BRAND_NAME VARCHAR2(100 BYTE) NULL ,
ITEM_CODE VARCHAR2(50 BYTE) NOT NULL ,
ITEM_NAME VARCHAR2(100 BYTE) NOT NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT sysdate  NOT NULL ,
CREATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATE_DATE DATE DEFAULT sysdate  NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE TTA_SUPPLIER_ITEM_ORIGINAL IS '供应商物料原始记录表';
COMMENT ON COLUMN TTA_SUPPLIER_ITEM_ORIGINAL.SUPPLIER_ITEM_ORIGINAL_ID IS '主键';
COMMENT ON COLUMN TTA_SUPPLIER_ITEM_ORIGINAL.SUPPLIER_CODE IS '供应商编码';
COMMENT ON COLUMN TTA_SUPPLIER_ITEM_ORIGINAL.SUPPLIER_NAME IS '供应商名称';
COMMENT ON COLUMN TTA_SUPPLIER_ITEM_ORIGINAL.DEPT_CODE IS '部门编码';
COMMENT ON COLUMN TTA_SUPPLIER_ITEM_ORIGINAL.DEPT_NAME IS '部门名称';
COMMENT ON COLUMN TTA_SUPPLIER_ITEM_ORIGINAL.BRAND_CODE IS '品牌编码';
COMMENT ON COLUMN TTA_SUPPLIER_ITEM_ORIGINAL.BRAND_NAME IS '品牌名称';
COMMENT ON COLUMN TTA_SUPPLIER_ITEM_ORIGINAL.ITEM_CODE IS '物料编码';
COMMENT ON COLUMN TTA_SUPPLIER_ITEM_ORIGINAL.ITEM_NAME IS '物料名称';

-- ----------------------------
-- Table structure for TTA_TEMP_PARAM_DEF
-- ----------------------------
DROP TABLE TTA_TEMP_PARAM_DEF;
CREATE TABLE TTA_TEMP_PARAM_DEF (
PARAM_ID NUMBER NOT NULL ,
PARAM_KEY VARCHAR2(200 BYTE) NOT NULL ,
PARAM_CONTENT CLOB NOT NULL ,
IS_SQL VARCHAR2(2 BYTE) NOT NULL ,
REMARK VARCHAR2(100 BYTE) NOT NULL ,
CREATED_BY NUMBER NULL ,
LAST_UPDATED_BY NUMBER NULL ,
LAST_UPDATE_DATE DATE DEFAULT sysdate  NULL ,
CREATION_DATE DATE DEFAULT sysdate  NULL ,
LAST_UPDATE_LOGIN NUMBER NULL ,
VERSION_NUM NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN TTA_TEMP_PARAM_DEF.PARAM_ID IS '主键id';
COMMENT ON COLUMN TTA_TEMP_PARAM_DEF.PARAM_KEY IS '定义模板的key值';
COMMENT ON COLUMN TTA_TEMP_PARAM_DEF.PARAM_CONTENT IS '定义模板的内容值';
COMMENT ON COLUMN TTA_TEMP_PARAM_DEF.IS_SQL IS '是否是sql';
COMMENT ON COLUMN TTA_TEMP_PARAM_DEF.REMARK IS '描述信息';
COMMENT ON COLUMN TTA_TEMP_PARAM_DEF.CREATED_BY IS '创建人';
COMMENT ON COLUMN TTA_TEMP_PARAM_DEF.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN TTA_TEMP_PARAM_DEF.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN TTA_TEMP_PARAM_DEF.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN TTA_TEMP_PARAM_DEF.LAST_UPDATE_LOGIN IS '登录人';
COMMENT ON COLUMN TTA_TEMP_PARAM_DEF.VERSION_NUM IS '版本号';

-- ----------------------------
-- Table structure for TTA_TEMP_PARAM_RULE_MIDLE
-- ----------------------------
DROP TABLE TTA_TEMP_PARAM_RULE_MIDLE;
CREATE TABLE TTA_TEMP_PARAM_RULE_MIDLE (
RULE_PARAM_ID NUMBER NOT NULL ,
RULE_ID NUMBER NOT NULL ,
PARAM_ID NUMBER NOT NULL ,
CREATED_BY NUMBER NULL ,
LAST_UPDATED_BY NUMBER NULL ,
LAST_UPDATE_DATE DATE DEFAULT sysdate  NULL ,
CREATION_DATE DATE DEFAULT sysdate  NULL ,
LAST_UPDATE_LOGIN NUMBER NULL ,
VERSION_NUM NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN TTA_TEMP_PARAM_RULE_MIDLE.RULE_PARAM_ID IS '主键id';
COMMENT ON COLUMN TTA_TEMP_PARAM_RULE_MIDLE.RULE_ID IS '模板规则id';
COMMENT ON COLUMN TTA_TEMP_PARAM_RULE_MIDLE.PARAM_ID IS '模板参数Id';
COMMENT ON COLUMN TTA_TEMP_PARAM_RULE_MIDLE.CREATED_BY IS '创建人';
COMMENT ON COLUMN TTA_TEMP_PARAM_RULE_MIDLE.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN TTA_TEMP_PARAM_RULE_MIDLE.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN TTA_TEMP_PARAM_RULE_MIDLE.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN TTA_TEMP_PARAM_RULE_MIDLE.LAST_UPDATE_LOGIN IS '登录人';
COMMENT ON COLUMN TTA_TEMP_PARAM_RULE_MIDLE.VERSION_NUM IS '版本号';

-- ----------------------------
-- Table structure for TTA_TEMP_RULE_DEF
-- ----------------------------
DROP TABLE TTA_TEMP_RULE_DEF;
CREATE TABLE TTA_TEMP_RULE_DEF (
RUL_ID NUMBER NOT NULL ,
RULE_NAME VARCHAR2(100 BYTE) NOT NULL ,
IS_ENABLE VARCHAR2(2 BYTE) NOT NULL ,
SOLE_RESOUCE_TYPE NUMBER NOT NULL ,
SOLE_PRODUCT_TYPE NUMBER NOT NULL ,
IS_INCLUDE_EC VARCHAR2(2 BYTE) NOT NULL ,
IS_INCLUDE_SPECIAL VARCHAR2(2 BYTE) NOT NULL ,
FILE_URL VARCHAR2(500 BYTE) NULL ,
REMARK VARCHAR2(200 BYTE) NULL ,
CREATED_BY NUMBER NULL ,
LAST_UPDATED_BY NUMBER NULL ,
LAST_UPDATE_DATE DATE DEFAULT sysdate  NULL ,
CREATION_DATE DATE DEFAULT sysdate  NULL ,
LAST_UPDATE_LOGIN NUMBER NULL ,
VERSION_NUM NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN TTA_TEMP_RULE_DEF.RUL_ID IS '主键id';
COMMENT ON COLUMN TTA_TEMP_RULE_DEF.RULE_NAME IS '规则名称';
COMMENT ON COLUMN TTA_TEMP_RULE_DEF.IS_ENABLE IS '是否启用（Y启用,N禁用）';
COMMENT ON COLUMN TTA_TEMP_RULE_DEF.SOLE_RESOUCE_TYPE IS '独家渠道类别:1.全渠道独家 2.健与美渠道，药房，大卖场和超市独家 3.健与美渠道，大卖场和超市独家 4.健与美渠道独家';
COMMENT ON COLUMN TTA_TEMP_RULE_DEF.SOLE_PRODUCT_TYPE IS '独家产品类型:1.全品牌产品 2.指定产品';
COMMENT ON COLUMN TTA_TEMP_RULE_DEF.IS_INCLUDE_EC IS '是否包含电商渠道:Y/N';
COMMENT ON COLUMN TTA_TEMP_RULE_DEF.IS_INCLUDE_SPECIAL IS '是否包含独家渠道例外情形:Y/N';
COMMENT ON COLUMN TTA_TEMP_RULE_DEF.FILE_URL IS '规则匹配的文件url';
COMMENT ON COLUMN TTA_TEMP_RULE_DEF.REMARK IS '备注信息';
COMMENT ON COLUMN TTA_TEMP_RULE_DEF.CREATED_BY IS '创建人';
COMMENT ON COLUMN TTA_TEMP_RULE_DEF.LAST_UPDATED_BY IS '更新人';
COMMENT ON COLUMN TTA_TEMP_RULE_DEF.LAST_UPDATE_DATE IS '更新日期';
COMMENT ON COLUMN TTA_TEMP_RULE_DEF.CREATION_DATE IS '创建日期';
COMMENT ON COLUMN TTA_TEMP_RULE_DEF.LAST_UPDATE_LOGIN IS '登录人';
COMMENT ON COLUMN TTA_TEMP_RULE_DEF.VERSION_NUM IS '版本号';

-- ----------------------------
-- Table structure for TTA_TERMS_FRAME_HEADER
-- ----------------------------
DROP TABLE TTA_TERMS_FRAME_HEADER;
-- Create table
create table TTA_TERMS_FRAME_HEADER
(
  team_framework_id INTEGER not null,
  frame_code        VARCHAR2(50),
  year              INTEGER not null,
  frame_name        VARCHAR2(50),
  bill_status       VARCHAR2(20) not null,
  business_version  VARCHAR2(20) not null,
  pass_date         DATE,
  effective_date    DATE,
  expiration_date   DATE,
  created_by        INTEGER,
  last_updated_by   INTEGER,
  last_update_date  DATE,
  creation_date     DATE,
  last_update_login INTEGER,
  version_num       INTEGER,
  delete_flag       INTEGER,
  dept_id           INTEGER not null,
  dept_code         VARCHAR2(50) not null,
  dept_name         VARCHAR2(200) not null
)
tablespace TTA_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
-- Add comments to the columns
comment on column TTA_TERMS_FRAME_HEADER.frame_code
  is '框架编码，暂时采用年度';
comment on column TTA_TERMS_FRAME_HEADER.year
  is '年度';
comment on column TTA_TERMS_FRAME_HEADER.frame_name
  is '框架名称';
comment on column TTA_TERMS_FRAME_HEADER.bill_status
  is '单据状态（1制作中、2待审批、3审批通过）';
comment on column TTA_TERMS_FRAME_HEADER.business_version
  is '条款框架版本号';
comment on column TTA_TERMS_FRAME_HEADER.pass_date
  is '审批通过时间';
comment on column TTA_TERMS_FRAME_HEADER.effective_date
  is '版本生效日期';
comment on column TTA_TERMS_FRAME_HEADER.expiration_date
  is '版本失效日期';
comment on column TTA_TERMS_FRAME_HEADER.created_by
  is '创建人';
comment on column TTA_TERMS_FRAME_HEADER.last_updated_by
  is '更新人';
comment on column TTA_TERMS_FRAME_HEADER.last_update_date
  is '更新日期';
comment on column TTA_TERMS_FRAME_HEADER.creation_date
  is '创建日期';
comment on column TTA_TERMS_FRAME_HEADER.last_update_login
  is '登录人';
comment on column TTA_TERMS_FRAME_HEADER.version_num
  is '版本号';
comment on column TTA_TERMS_FRAME_HEADER.delete_flag
  is '是否删除（0：未删除；1：已删除）';
comment on column TTA_TERMS_FRAME_HEADER.dept_id
  is '部门ID';
comment on column TTA_TERMS_FRAME_HEADER.dept_code
  is '部门code';
comment on column TTA_TERMS_FRAME_HEADER.dept_name
  is '部门NAME';
-- Create/Recreate indexes
create unique index TTA_TAERMS_FRAMEWORK_HEAD_U1 on TTA_TERMS_FRAME_HEADER (YEAR, DEPT_CODE)
  tablespace TTA_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
-- Create/Recreate primary, unique and foreign key constraints
alter table TTA_TERMS_FRAME_HEADER
  add constraint PK_ATT_TAERMS_FRAMEWORK_HEAD primary key (TEAM_FRAMEWORK_ID)
  using index
  tablespace TTA_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

-- ----------------------------
-- Table structure for TTA_TERMS_FRAME_HEADER_H
-- ----------------------------
DROP TABLE TTA_TERMS_FRAME_HEADER_H;
-- Create table
create table TTA_TERMS_FRAME_HEADER_H
(
  team_framework_id        INTEGER not null,
  frame_code               VARCHAR2(50) not null,
  year                     INTEGER not null,
  frame_name               VARCHAR2(50),
  bill_status              VARCHAR2(20) not null,
  business_version         VARCHAR2(20) not null,
  pass_date                DATE,
  effective_date           DATE,
  expiration_date          DATE,
  resouce_id               INTEGER,
  resouce_business_version VARCHAR2(20),
  created_by               INTEGER,
  last_updated_by          INTEGER,
  last_update_date         DATE,
  creation_date            DATE,
  last_update_login        INTEGER,
  version_num              INTEGER,
  delete_flag              INTEGER,
  dept_id                  INTEGER not null,
  dept_code                VARCHAR2(50) not null,
  dept_name                VARCHAR2(200) not null
)
tablespace TTA_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
-- Add comments to the columns
comment on column TTA_TERMS_FRAME_HEADER_H.frame_code
  is '框架编码，暂时采用年度';
comment on column TTA_TERMS_FRAME_HEADER_H.year
  is '年度';
comment on column TTA_TERMS_FRAME_HEADER_H.frame_name
  is '框架名称';
comment on column TTA_TERMS_FRAME_HEADER_H.bill_status
  is '单据状态（1制作中、2待审批、3审批通过）';
comment on column TTA_TERMS_FRAME_HEADER_H.business_version
  is '条款框架版本号';
comment on column TTA_TERMS_FRAME_HEADER_H.pass_date
  is '审批通过时间';
comment on column TTA_TERMS_FRAME_HEADER_H.effective_date
  is '版本生效日期';
comment on column TTA_TERMS_FRAME_HEADER_H.expiration_date
  is '版本失效日期';
comment on column TTA_TERMS_FRAME_HEADER_H.resouce_id
  is '来源版本Id，对应复制原纪录id';
comment on column TTA_TERMS_FRAME_HEADER_H.resouce_business_version
  is '来源版本号，对应复制原纪录版本号';
comment on column TTA_TERMS_FRAME_HEADER_H.created_by
  is '创建人';
comment on column TTA_TERMS_FRAME_HEADER_H.last_updated_by
  is '更新人';
comment on column TTA_TERMS_FRAME_HEADER_H.last_update_date
  is '更新日期';
comment on column TTA_TERMS_FRAME_HEADER_H.creation_date
  is '创建日期';
comment on column TTA_TERMS_FRAME_HEADER_H.last_update_login
  is '登录人';
comment on column TTA_TERMS_FRAME_HEADER_H.version_num
  is '版本号';
comment on column TTA_TERMS_FRAME_HEADER_H.delete_flag
  is '是否删除（0：未删除；1：已删除）';
comment on column TTA_TERMS_FRAME_HEADER_H.dept_id
  is '部门ID';
comment on column TTA_TERMS_FRAME_HEADER_H.dept_code
  is '部门code';
comment on column TTA_TERMS_FRAME_HEADER_H.dept_name
  is '部门NAME';
-- Create/Recreate indexes
create unique index TTA_T_F_HEAD_H_U1 on TTA_TERMS_FRAME_HEADER_H (YEAR, BUSINESS_VERSION, DEPT_CODE)
  tablespace TTA_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
-- Create/Recreate primary, unique and foreign key constraints
alter table TTA_TERMS_FRAME_HEADER_H
  add constraint PK_ATT_TAERMS_FRAMEWORK_HEAD_H primary key (TEAM_FRAMEWORK_ID)
  using index
  tablespace TTA_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );

-- ----------------------------
-- Table structure for TTA_TEST_CHOICE_MID
-- ----------------------------
DROP TABLE TTA_TEST_CHOICE_MID;
CREATE TABLE TTA_TEST_CHOICE_MID (
MID_ID NUMBER NOT NULL ,
QN_CHOICE_ID NUMBER NOT NULL ,
QN_LINE_ID NUMBER NOT NULL ,
VERSION_NUM NUMBER NULL ,
CREATION_DATE DATE DEFAULT sysdate  NOT NULL ,
CREATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATE_DATE DATE DEFAULT sysdate  NOT NULL ,
LAST_UPDATE_LOGIN NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN TTA_TEST_CHOICE_MID.MID_ID IS '主键';
COMMENT ON COLUMN TTA_TEST_CHOICE_MID.QN_CHOICE_ID IS '答题选项表(tta_questionnaire_choice)主键id';
COMMENT ON COLUMN TTA_TEST_CHOICE_MID.QN_LINE_ID IS '题目表(tta_test_questionnaire_line)主键id';

-- ----------------------------
-- Table structure for TTA_TEST_QUESTIONNAIRE_CHOICE
-- ----------------------------
DROP TABLE TTA_TEST_QUESTIONNAIRE_CHOICE;
CREATE TABLE TTA_TEST_QUESTIONNAIRE_CHOICE (
QN_CHOICE_ID NUMBER(6) NOT NULL ,
QN_LINE_ID NUMBER DEFAULT NULL  NULL ,
QN_CHOICE VARCHAR2(100 BYTE) DEFAULT NULL  NULL ,
QN_CHOICE_CONTENT VARCHAR2(500 BYTE) DEFAULT NULL  NULL ,
QN_ANSWER VARCHAR2(100 BYTE) DEFAULT NULL  NULL ,
DISPLAY_FLAG VARCHAR2(100 BYTE) DEFAULT NULL  NULL ,
DESCRIPTION VARCHAR2(500 BYTE) DEFAULT NULL  NULL ,
SELECT_QN_LINE_ID VARCHAR2(500 BYTE) DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT sysdate  NOT NULL ,
CREATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATE_DATE DATE DEFAULT sysdate  NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
PROPOSAL_ID NUMBER NULL ,
STAUTS NUMBER NULL ,
ORIGINAL_QN_CHOICE_ID NUMBER DEFAULT null  NOT NULL ,
QN_CHOICE_RESULT VARCHAR2(500 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN TTA_TEST_QUESTIONNAIRE_CHOICE.QN_CHOICE_ID IS '表ID，主键，供其他表做外键';
COMMENT ON COLUMN TTA_TEST_QUESTIONNAIRE_CHOICE.QN_LINE_ID IS '行ID';
COMMENT ON COLUMN TTA_TEST_QUESTIONNAIRE_CHOICE.QN_CHOICE IS '选项';
COMMENT ON COLUMN TTA_TEST_QUESTIONNAIRE_CHOICE.QN_CHOICE_CONTENT IS '选项内容/文本内容';
COMMENT ON COLUMN TTA_TEST_QUESTIONNAIRE_CHOICE.QN_ANSWER IS '题目答案';
COMMENT ON COLUMN TTA_TEST_QUESTIONNAIRE_CHOICE.DISPLAY_FLAG IS '是否显示标志';
COMMENT ON COLUMN TTA_TEST_QUESTIONNAIRE_CHOICE.DESCRIPTION IS '说明、备注';
COMMENT ON COLUMN TTA_TEST_QUESTIONNAIRE_CHOICE.SELECT_QN_LINE_ID IS '选中的行ID集';
COMMENT ON COLUMN TTA_TEST_QUESTIONNAIRE_CHOICE.STAUTS IS '0:初始化状态 1:保存 2:提交状态';
COMMENT ON COLUMN TTA_TEST_QUESTIONNAIRE_CHOICE.ORIGINAL_QN_CHOICE_ID IS '原模板选项ID';
COMMENT ON COLUMN TTA_TEST_QUESTIONNAIRE_CHOICE.QN_CHOICE_RESULT IS '选项结果值';

-- ----------------------------
-- Table structure for TTA_TEST_QUESTIONNAIRE_LINE
-- ----------------------------
DROP TABLE TTA_TEST_QUESTIONNAIRE_LINE;
CREATE TABLE TTA_TEST_QUESTIONNAIRE_LINE (
QN_LINE_ID NUMBER NOT NULL ,
SERIAL_NUMBER NUMBER DEFAULT NULL  NULL ,
PROJECT_TYPE VARCHAR2(100 BYTE) DEFAULT NULL  NULL ,
PROJECT_TITLE VARCHAR2(500 BYTE) DEFAULT NULL  NULL ,
PROJECT_TITLE_ALT VARCHAR2(500 BYTE) DEFAULT NULL  NULL ,
REQUIRE_FLAG VARCHAR2(100 BYTE) DEFAULT NULL  NULL ,
DISPLAY_FLAG VARCHAR2(100 BYTE) DEFAULT 'Y'  NULL ,
DESCRIPTION VARCHAR2(500 BYTE) DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
CREATION_DATE DATE DEFAULT sysdate  NOT NULL ,
CREATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATED_BY NUMBER DEFAULT -1  NOT NULL ,
LAST_UPDATE_DATE DATE DEFAULT sysdate  NOT NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL ,
CALC_RULE VARCHAR2(50 BYTE) NULL ,
ORIGINAL_QN_LINE_ID NUMBER NULL ,
PROPOSAL_ID NUMBER NULL ,
PROJECT_CATEGORY VARCHAR2(2 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN TTA_TEST_QUESTIONNAIRE_LINE.QN_LINE_ID IS '表ID，主键，供其他表做外键';
COMMENT ON COLUMN TTA_TEST_QUESTIONNAIRE_LINE.SERIAL_NUMBER IS '题目序号';
COMMENT ON COLUMN TTA_TEST_QUESTIONNAIRE_LINE.PROJECT_TYPE IS '题目类型(单选/多选/文本)';
COMMENT ON COLUMN TTA_TEST_QUESTIONNAIRE_LINE.PROJECT_TITLE IS '题目标题';
COMMENT ON COLUMN TTA_TEST_QUESTIONNAIRE_LINE.PROJECT_TITLE_ALT IS '题目标题别名';
COMMENT ON COLUMN TTA_TEST_QUESTIONNAIRE_LINE.REQUIRE_FLAG IS '是否必需标记';
COMMENT ON COLUMN TTA_TEST_QUESTIONNAIRE_LINE.DISPLAY_FLAG IS '是否显示标志';
COMMENT ON COLUMN TTA_TEST_QUESTIONNAIRE_LINE.DESCRIPTION IS '说明、备注';
COMMENT ON COLUMN TTA_TEST_QUESTIONNAIRE_LINE.CALC_RULE IS '计算规则';
COMMENT ON COLUMN TTA_TEST_QUESTIONNAIRE_LINE.ORIGINAL_QN_LINE_ID IS '原题库ID';
COMMENT ON COLUMN TTA_TEST_QUESTIONNAIRE_LINE.PROPOSAL_ID IS 'PROPOSAL_ID ';
COMMENT ON COLUMN TTA_TEST_QUESTIONNAIRE_LINE.PROJECT_CATEGORY IS '题目类别 1:一级题目，2:二级题目 3:规则题型';

-- ----------------------------
-- Table structure for TTA_USER_GROUP_DEPT_BRAND
-- ----------------------------
DROP TABLE TTA_USER_GROUP_DEPT_BRAND;
-- Create table
create table TTA_USER_GROUP_DEPT_BRAND
(
  user_group_dept_brand_id INTEGER not null,
  user_id                  INTEGER,
  group                    VARCHAR2(200),
  group_desc               VARCHAR2(500),
  dept                     VARCHAR2(200),
  dept_desc                VARCHAR2(500),
  brand_code               VARCHAR2(200),
  brand_cn                 VARCHAR2(500),
  brand_en                 VARCHAR2(500),
  version_num              INTEGER,
  creation_date            DATE default SYSDATE not null,
  created_by               INTEGER default -1 not null,
  last_updated_by          INTEGER default -1 not null,
  last_update_date         DATE default SYSDATE not null,
  last_update_login        INTEGER,
  start_time               DATE,
  end_time                 DATE,
  data_type                VARCHAR2(2) not null
)
tablespace TTA_DATA
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
-- Add comments to the table
comment on table TTA_USER_GROUP_DEPT_BRAND
  is ' user group dept brand 权限表';
-- Add comments to the columns
comment on column TTA_USER_GROUP_DEPT_BRAND.user_group_dept_brand_id
  is '主键';
comment on column TTA_USER_GROUP_DEPT_BRAND.user_id
  is '外键，引用base_user表主键';
comment on column TTA_USER_GROUP_DEPT_BRAND.data_type
  is '数据类型';
-- Create/Recreate indexes
create index USER_GROUP_DEPT_BRAND__U1 on TTA_USER_GROUP_DEPT_BRAND (USER_ID, DATA_TYPE)
  tablespace TTA_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
-- Create/Recreate primary, unique and foreign key constraints
alter table TTA_USER_GROUP_DEPT_BRAND
  add constraint PK_USER_GROUP_DEPT_BRAND_ID primary key (USER_GROUP_DEPT_BRAND_ID)
  using index
  tablespace TTA_DATA
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );


-- ----------------------------
-- Table structure for USER_PWD_TEMP
-- ----------------------------
DROP TABLE USER_PWD_TEMP;
CREATE TABLE USER_PWD_TEMP (
BU VARCHAR2(20 BYTE) NULL ,
USER_NAME VARCHAR2(50 BYTE) NULL ,
EMAIL VARCHAR2(50 BYTE) NULL ,
PWD VARCHAR2(100 BYTE) NULL ,
SEND_FLAG VARCHAR2(6 BYTE) NULL ,
CREATION_DATE DATE DEFAULT NULL  NULL ,
CREATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATED_BY NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_DATE DATE DEFAULT NULL  NULL ,
VERSION_NUM NUMBER DEFAULT NULL  NULL ,
LAST_UPDATE_LOGIN NUMBER DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for WX_USER
-- ----------------------------
DROP TABLE WX_USER;
CREATE TABLE WX_USER (
ID VARCHAR2(200 BYTE) NOT NULL ,
USERID VARCHAR2(30 BYTE) NULL ,
NAME VARCHAR2(150 BYTE) NULL ,
DEPARTMENT VARCHAR2(300 BYTE) NULL ,
POSITION VARCHAR2(300 BYTE) NULL ,
MOBILE VARCHAR2(30 BYTE) NULL ,
GENDER VARCHAR2(20 BYTE) NULL ,
EMAIL VARCHAR2(30 BYTE) NULL ,
AVATAR VARCHAR2(300 BYTE) NULL ,
STATUS VARCHAR2(60 BYTE) NULL ,
ENABLE VARCHAR2(240 BYTE) NULL ,
ISLEADER VARCHAR2(30 BYTE) NULL ,
EXTATTR VARCHAR2(30 BYTE) NULL ,
HIDE_MOBILE VARCHAR2(30 BYTE) NULL ,
ENGLISH_NAME VARCHAR2(30 BYTE) NULL ,
TELEPHONE VARCHAR2(30 BYTE) NULL ,
ORDER_ VARCHAR2(300 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- View structure for TTA_BRAND_V
-- ----------------------------
CREATE OR REPLACE FORCE VIEW TTA_BRAND_V AS 
select t.BRAND_ID,t.BRAND,t.BRAND_EN,t.BRAND_CN,t.REMARK,t.SOURCE_CODE,t.CREATION_DATE,t.CREATED_BY,t.LAST_UPDATED_BY,t.LAST_UPDATE_DATE,t.LAST_UPDATE_LOGIN,t.VERSION_NUM from tta_brand t
where 1=1;

-- ----------------------------
-- View structure for TTA_BRANDPLN_HEADER_V
-- ----------------------------
CREATE OR REPLACE FORCE VIEW TTA_BRANDPLN_HEADER_V AS 
SELECT t.BRANDPLN_H_ID,t.NEW_OR_EXISTING,t.VENDOR_NBR,t.VENDOR_NAME,
t.PO_RECORD_SUM,t.SALES_SUM,t.ACTUAL_GP,
t.FCS_PURCHASE,t.PURCHASE_GROWTH,t.FCS_SALES,
t.SALES_GROWTH,t.GP,t.REMARK,t.CREATION_DATE,
t.CREATED_BY,t.LAST_UPDATED_BY,t.LAST_UPDATE_DATE,
t.LAST_UPDATE_LOGIN,t.VERSION_NUM,t.PROPOSAL_ID,
t.PO_RECORD_SUM2,t.SALES_SUM2,t.ACTUAL_GP2,
t.YEAR_CODE,
   u1.user_name last_updated_name,
   u2.user_name created_name
   FROM tta_brandpln_header t,
      base_users u1,
      base_users u2
   where  t.last_updated_by = u1.user_id(+)
   and t.created_by = u2.user_id(+);

-- ----------------------------
-- View structure for TTA_BRANDPLN_LINE_V
-- ----------------------------
CREATE OR REPLACE FORCE VIEW TTA_BRANDPLN_LINE_V AS 
SELECT t.BRANDPLN_L_ID,t.BRAND_DETAILS,t.GROUP_CODE,
t.GROUP_DESC,t.DEPT_CODE,
t.DEPT_DESC,t.BRAND_CODE,
t.BRAND_CN,t.PO_RECORD,
t.SALES,t.ACTUAL_GP,
t.FCS_PURCHASE,
nvl(t.PURCHASE_GROWTH,0) as PURCHASE_GROWTH,
t.FCS_SALES,
nvl(t.SALES_GROWTH,0) as SALES_GROWTH,
nvl(t.GP,t.ACTUAL_GP) as GP,
t.REMARK,
t.CREATION_DATE,
t.CREATED_BY,
t.LAST_UPDATED_BY,
t.LAST_UPDATE_DATE,
t.LAST_UPDATE_LOGIN,t.VERSION_NUM,
t.BRANDPLN_H_ID,t.PROPOSAL_ID,
t.PO_RECORD2,t.SALES2,t.ACTUAL_GP2,
   u1.user_name last_updated_name,
   u2.user_name created_name
   FROM tta_brandpln_line t,
      base_users u1,
      base_users u2
   where  t.last_updated_by = u1.user_id(+)
   and t.created_by = u2.user_id(+);

-- ----------------------------
-- View structure for TTA_CONTRACT_DETAIL_V
-- ----------------------------
CREATE OR REPLACE FORCE VIEW TTA_CONTRACT_DETAIL_V AS 
SELECT t.CONTRACT_D_ID,t.CONTRACT_L_ID,t.CONTRACT_H_ID,t.VENDOR_NBR,t.VENDOR_NAME,t.DEPT_CODE,t.BRAND_CN,t.PURCHASE,t.SALES,t.SALES_AREA,t.DELIVERY_GRANARY,t.OI_TYPE,t.TERMS_NAME,t.COLLECTION_METHOD,t.TTA_VALUE,t.UNIT,t.TERMS,t.FEE_INTAS,t.FEE_NOTAX,t.STATUS,t.VERSION_NUM,t.CREATION_DATE,t.CREATED_BY,t.LAST_UPDATED_BY,t.LAST_UPDATE_DATE,t.LAST_UPDATE_LOGIN,t.DEPT_DESC,t.BRAND,
   u1.user_name last_updated_name,
   u2.user_name created_name
   FROM tta_contract_detail t,
      base_users u1,
      base_users u2
   where  t.last_updated_by = u1.user_id(+)
   and t.created_by = u2.user_id(+);

-- ----------------------------
-- View structure for TTA_CONTRACT_HEADER_V
-- ----------------------------
CREATE OR REPLACE FORCE VIEW TTA_CONTRACT_HEADER_V AS 
SELECT t.CONTRACT_H_ID,t.CONTRACT_CODE,t.VENDOR_NBR,t.VENDOR_NAME,t.BILL_STATUS,t.PROPOSAL_CODE,t.PROPOSAL_YEAR,t.PROPOSAL_VERSION,t.IS_SPLIT,t.CONFIRM_DATE,t.VERSION_NUM,t.CREATION_DATE,t.CREATED_BY,t.LAST_UPDATED_BY,t.LAST_UPDATE_DATE,t.LAST_UPDATE_LOGIN,t.SUBMIT_DATE,t.IS_MULTIPLE_VENDOR,
lookup1.meaning as status_name,
   u1.user_name last_updated_name,
   u2.user_name created_name
   FROM tta_contract_header t,
      base_users u1,
      base_users u2,
       (select lookup_type,lookup_code,meaning
        from base_lookup_values where lookup_type='BILL_STATUS' and enabled_flag='Y'
      and delete_flag=0 and start_date_active<sysdate and (end_date_active>=sysdate or end_date_active is null) and system_code='BASE'
      ) lookup1
   where  t.last_updated_by = u1.user_id(+)
   and t.created_by = u2.user_id(+)
   and t.bill_status = lookup1.lookup_code(+);

-- ----------------------------
-- View structure for TTA_CONTRACT_LINE_V
-- ----------------------------
CREATE OR REPLACE FORCE VIEW TTA_CONTRACT_LINE_V AS 
SELECT t.CONTRACT_L_ID,t.CONTRACT_H_ID,t.VENDOR_NBR,t.VENDOR_NAME,t.DEPT_CODE,t.BRAND_CN,t.PURCHASE,t.SALES,t.SALES_AREA,t.DELIVERY_GRANARY,t.OI_TYPE,t.TERMS_NAME,t.COLLECTION_METHOD,t.TTA_VALUE,t.UNIT,t.TERMS,t.FEE_INTAS,t.FEE_NOTAX,t.STATUS,t.VERSION_NUM,t.CREATION_DATE,t.CREATED_BY,t.LAST_UPDATED_BY,t.LAST_UPDATE_DATE,t.LAST_UPDATE_LOGIN,t.DEPT_DESC,t.BRAND,
   u1.user_name last_updated_name,
   u2.user_name created_name
   FROM tta_contract_line t,
      base_users u1,
      base_users u2
   where  t.last_updated_by = u1.user_id(+)
   and t.created_by = u2.user_id(+);

-- ----------------------------
-- View structure for TTA_DEPT_FEE_HEADER_V
-- ----------------------------
CREATE OR REPLACE FORCE VIEW TTA_DEPT_FEE_HEADER_V AS 
SELECT t.DEPT_FEE_ID,t.YEAR_CODE,t.ACCORD_TYPE,
t.FEE_ITEM,t.COMPANY_UNIT,t.DEPT_CODE1,
t.DEPT_CODE2,t.DEPT_CODE3,t.DEPT_CODE4,
t.DEPT_CODE5,t.REMARK,t.CREATION_DATE,
t.CREATED_BY,t.LAST_UPDATED_BY,
t.LAST_UPDATE_DATE,t.LAST_UPDATE_LOGIN,
t.VERSION_NUM,t.PROPOSAL_ID, th.is_depart_confirm  IS_CONF,t.IS_TRANS_DEPT,
lookup2.meaning as ACCORD_TYPE_name,
   u1.user_name last_updated_name,
   u2.user_name created_name,
   th.vendor_nbr,
   th.vendor_name,
   bd1.department_name as dept_desc1,
   bd2.department_name as dept_desc2,
   bd3.department_name as dept_desc3,
   bd4.department_name as dept_desc4,
   bd5.department_name as dept_desc5
   FROM tta_dept_fee_header t,
      tta_proposal_header th,
      base_users u1,
      base_users u2,
      base_department bd1,
       base_department bd2,
        base_department bd3,
         base_department bd4,
          base_department bd5,
       (select lookup_type,lookup_code,meaning
        from base_lookup_values where lookup_type='ACCORD_TYPE' and enabled_flag='Y'
      and delete_flag=0 and start_date_active<sysdate and (end_date_active>=sysdate or end_date_active is null) and system_code='BASE'
      ) lookup2
   where  t.last_updated_by = u1.user_id(+)
   and t.created_by = u2.user_id(+)
   and t.accord_type = lookup2.lookup_code(+)
   and t.proposal_id = th.proposal_id(+)
   and t.dept_code1 = bd1.department_code(+)
   and t.dept_code2 = bd2.department_code(+)
   and t.dept_code3 = bd3.department_code(+)
   and t.dept_code4 = bd4.department_code(+)
   and t.dept_code5 = bd5.department_code(+);

-- ----------------------------
-- View structure for TTA_DEPT_FEE_V
-- ----------------------------
CREATE OR REPLACE FORCE VIEW TTA_DEPT_FEE_V AS 
SELECT t.DEPTFEE_LINE_ID,t.DEPT_FEE_ID,t.LINE_CODE,t.PARENT_LINE_CODE,t.SORT_ID,t.ITEM_NBR,t.CREATION_DATE
,t.CREATED_BY,t.LAST_UPDATED_BY,
t.LAST_UPDATE_DATE,t.LAST_UPDATE_LOGIN,
t.VERSION_NUM,t.REMARK,t.PROPOSAL_ID,
t.ITEM_DESC_CN,t.ITEM_DESC_EN,t.UNIT1,
t.STANDARD_VALUE1,t.UNIT2,t.STANDARD_VALUE2,
t.UNIT3,t.STANDARD_VALUE3,t.UNIT4,t.STANDARD_VALUE4,
t.UNIT5,t.STANDARD_VALUE5,t.UNIT,
t.line_code||t.item_desc_en||t.item_desc_cn as item_detail,
t.accord_type,
   u1.user_name last_updated_name,
   u2.user_name created_name
   FROM tta_dept_fee t,
      base_users u1,
      base_users u2
   where  t.last_updated_by = u1.user_id(+)
   and t.created_by = u2.user_id(+);

-- ----------------------------
-- View structure for TTA_FEE_DEPT_D_V
-- ----------------------------
CREATE OR REPLACE FORCE VIEW TTA_FEE_DEPT_D_V AS 
SELECT t.FEEDEPT_DETAIL_ID,t.FEEDEPT_ID,t.FEEDEPT_LINE_ID,t.DEPT_CODE,t.DEPT_DESC,t.CREATION_DATE,t.CREATED_BY,t.LAST_UPDATED_BY,t.LAST_UPDATE_DATE,t.LAST_UPDATE_LOGIN,t.VERSION_NUM,t.UNIT,t.STANDARD_VALUE,t.REMARK,
   u1.user_name last_updated_name,
   lookup2.meaning as unit_name,
   u2.user_name created_name
   FROM tta_fee_dept_detail t,
       (select lookup_type,lookup_code,meaning
        from base_lookup_values where lookup_type='UNIT' and enabled_flag='Y'
      and delete_flag=0 and start_date_active<sysdate and (end_date_active>=sysdate or end_date_active is null) and system_code='BASE'
      ) lookup2,

      base_users u1,
      base_users u2
   where  t.last_updated_by = u1.user_id(+)
   and t.created_by = u2.user_id(+)
   and t.unit = lookup2.lookup_code(+);

-- ----------------------------
-- View structure for TTA_FEE_DEPT_H_V
-- ----------------------------
CREATE OR REPLACE VIEW TTA_FEE_DEPT_H_V AS
SELECT t."FEEDEPT_ID",t."YEAR_CODE",t."ACCORD_TYPE",
t."STATUS",t."CREATION_DATE",t."CREATED_BY",
t."LAST_UPDATED_BY",t."LAST_UPDATE_DATE",
t."LAST_UPDATE_LOGIN",t."VERSION_NUM",
t."APPROVE_DATE",t."SOURCE_FEE_ID",
t."IS_ALERT",
t."VERSION_CODE",t."REMARK",
t.dept_code ,
t.dept_desc ,
t.dept_id,
lookup1.meaning as status_name,
lookup2.meaning as ACCORD_TYPE_name,
   u1.user_name last_updated_name,
   u2.user_name created_name
   FROM tta_fee_dept_header t,
      base_users u1,
      base_users u2,
       (select lookup_type,lookup_code,meaning
        from base_lookup_values where lookup_type='FEEDEPT_STATUS' and enabled_flag='Y'
      and delete_flag=0 and start_date_active<sysdate and (end_date_active>=sysdate or end_date_active is null) and system_code='BASE'
      ) lookup1,
       (select lookup_type,lookup_code,meaning
        from base_lookup_values where lookup_type='ACCORD_TYPE' and enabled_flag='Y'
      and delete_flag=0 and start_date_active<sysdate and (end_date_active>=sysdate or end_date_active is null) and system_code='BASE'
      ) lookup2
   where  t.last_updated_by = u1.user_id(+)
   and t.created_by = u2.user_id(+)
   and t.status = lookup1.lookup_code(+)
   and t.accord_type = lookup2.lookup_code(+);


-- ----------------------------
-- View structure for TTA_FEE_DEPT_L_V
-- ----------------------------
CREATE OR REPLACE FORCE VIEW TTA_FEE_DEPT_L_V AS 
SELECT t.FEEDEPT_LINE_ID,t.LINE_CODE,t.PARENT_LINE_ID,t.SORT_ID,t.ITEM_NBR,t.CREATION_DATE,t.CREATED_BY,t.LAST_UPDATED_BY,t.LAST_UPDATE_DATE,t.LAST_UPDATE_LOGIN,t.VERSION_NUM,t.IF_EFFECT,t.REMARK,t.FEEDEPT_ID,
   u1.user_name last_updated_name,
   u2.user_name created_name,
   st.line_code as parent_line_code,
   t.item_desc_cn,
   t.item_desc_en,
  t.line_Code || t.item_desc_en|| t.item_desc_cn  as line_Desc,
   t.unit,
   t.standard_value
   FROM tta_fee_dept_line t,
      tta_fee_dept_line st,
      tta_item mm,
      base_users u1,
      base_users u2
   where  t.last_updated_by = u1.user_id(+)
   and t.item_nbr = mm.item_nbr(+)
   and t.parent_line_id = st.feedept_line_id(+)
   and t.created_by = u2.user_id(+);

-- ----------------------------
-- View structure for TTA_GROUP_V
-- ----------------------------
CREATE OR REPLACE FORCE VIEW TTA_GROUP_V AS 
select t.GROUP_ID,t.GROUP_CODE,t.GROUP_DESC,t.REMARK,t.SOURCE_CODE,t.CREATION_DATE,t.CREATED_BY,t.LAST_UPDATED_BY,t.LAST_UPDATE_DATE,t.LAST_UPDATE_LOGIN,t.VERSION_NUM from TTA_GROUP t
where 1=1;

-- ----------------------------
-- View structure for TTA_ITEM_V
-- ----------------------------
CREATE OR REPLACE FORCE VIEW TTA_ITEM_V AS 
SELECT t.ITEM_ID,t.ITEM_NBR,t.ITEM_DESC_CN,
t.ITEM_DESC_EN,t.STATUS,t.RETAIL_GROUP,
t.UNIT_COST,t.CREATION_DATE,t.CREATED_BY,
t.LAST_UPDATED_BY,t.LAST_UPDATE_DATE,
t.LAST_UPDATE_LOGIN,t.VERSION_NUM,t.VENDOR_NBR,
t.VENDOR_NAME,t.START_DATE,t.END_DATE,
t.SM_TC_ATD,t.DEPT_CODE,t.DEPT_DESC,
t.GROUP_CODE,t.GROUP_DESC,t.CLASS_CODE,
t.CLASS_DESC,t.SUB_CLASS_CODE,t.SUB_CLASS_DESC,
t.UPC,t.BRAND_CN,t.BRAND_EN,t.BRAND_CODE,
t.ORGINAL_PLACE,t.SPECS,t.UNIT,t.UDA4,
t.UDA6,t.UDA8,t.UDA29,t.UDA41,t.UDA49,
t.UDA62,t.UDA63,t.UDA666,t.UDA13,t.UDA64,
t.UDA50,t.UDA51,t.SOURCE_SYSTEM,t.SOURCE_CODE,t.PACK_SIZE,t.create_date,
t.remark,
   u1.user_name last_updated_name,
   u2.user_name created_name
   FROM Tta_Item t,
      base_users u1,
      base_users u2
   where  t.last_updated_by = u1.user_id(+)
   and t.created_by = u2.user_id(+);

-- ----------------------------
-- View structure for TTA_PROPOSAL_HEADER_V
-- ----------------------------
CREATE OR REPLACE VIEW TTA_PROPOSAL_HEADER_V AS
SELECT t."PROPOSAL_ID",
t."ORDER_NBR",
t."ORIGIN_PROPOSAL_ID",
t."PROPOSAL_NBR",
t."VENDOR_NBR",
t."VENDOR_NAME",
t."PROPOSAL_YEAR",
t."APPROVE_DATE",
t."STATUS",
t."VERSION_CODE",
t."IS_TRANSDEPART",
t."NEW_PAYMENT_METHOD",
t."NEW_STORE_QTY",
t."PLN_ADJUST_SCALE",
t."IS_PLN_CONFIRM",
t."IS_TERMS_CONFIRM",
t."IS_DEPART_CONFIRM",
t."IS_NEW_CONFIRM",
t."IS_QUEST_CONFIRM",
t."IS_CROSS_YEAR",
t."BEGIN_DATE",
t."END_DATE",
t."REMARK",
t."CREATION_DATE",
t."CREATED_BY",
t."LAST_UPDATED_BY",
t."LAST_UPDATE_DATE",
t."LAST_UPDATE_LOGIN",
t."VERSION_NUM",
t."IS_CHANGE",
t."SOURCE_ID",
t."SOURCE_CODE",
t."NEW_OR_EXISTING",
t."ALERT_BY",
t."ALERT_DATE",
nvl(t.dept_code1,tpth.dept_code)  "DEPT_CODE1",
t."DEPT_CODE2",
t."DEPT_CODE3",
t."DEPT_CODE4",
t."DEPT_CODE5",
nvl(t.dept_desc1,tpth.dept_desc)  "DEPT_DESC1",
t."DEPT_DESC2",
t."DEPT_DESC3",
t."DEPT_DESC4",
t."DEPT_DESC5",
t."VERSION_STATUS",
lookup1.meaning as status_name,
lookup2.meaning as NEW_PAYMENT_NAME,
   u1.user_name last_updated_name,
   u2.user_name created_name
   FROM tta_proposal_header t,
        tta_proposal_terms_header tpth,
      base_users u1,
      base_users u2,
       (select lookup_type,lookup_code,meaning
        from base_lookup_values where lookup_type='PROPOSAL_STATUS' and enabled_flag='Y'
      and delete_flag=0 and start_date_active<sysdate and (end_date_active>=sysdate or end_date_active is null) and system_code='BASE'
      ) lookup1,
       (select lookup_type,lookup_code,meaning
        from base_lookup_values where lookup_type='NEW_PAYMENT_METHOD' and enabled_flag='Y'
      and delete_flag=0 and start_date_active<sysdate and (end_date_active>=sysdate or end_date_active is null) and system_code='BASE'
      ) lookup2
   where  t.last_updated_by = u1.user_id(+)
   and t.proposal_id = tpth.proposal_id(+)
   and t.created_by = u2.user_id(+)
   and t.status = lookup1.lookup_code(+)
   and t.NEW_PAYMENT_METHOD = lookup2.lookup_code(+)
   and t.status <> 'D' and (t.version_status = '1' or t.version_status is null);


-- ----------------------------
-- View structure for TTA_PROPOSAL_TERMS_HEADEROLD_V
-- ----------------------------
create or replace view tta_proposal_terms_headerold_v as
select
  tpo.proposal_id             "PROPOSAL_ID"
 ,tpth.agreement_edition      "AGREEMENT_EDITION"
 ,tpo.vendor_nbr              "VENDOR_NBR"
 ,tpo.vendor_name             "VENDOR_DESC"
 ,nvl(tpth.dept_desc,ts.dept_name)         "DEPT_DESC"
 ,nvl(tpth.dept_code,ts.owner_dept)          "DEPT_CODE"
 ,tpth.terms_h_id             "TERMS_H_ID"
 ,tpth.created_by             "CREATED_BY"
 ,bu.user_name                "CREATED_BY_NAME"
 ,bp.employee_number          "EMPLOYEE_NUMBER"
 ,tbh.fcs_purchase            "FCS_PURCHSE"
 ,tbh.fcs_sales               "FCS_SALES"
 ,tbh.gp                      "GP"
 ,tpth.is_return              "IS_RETURN"
 ,tpo.IS_CROSS_YEAR         "IS_CROSS_YEAR"
 ,tpth.PAY_DAYS              "PAY_DAYS"
, tpth.SALES_UP_SCALE        "SALES_UP_SCALE"
,tpth.CONSIGNMENT_DISCOUNT    "CONSIGNMENT_DISCOUNT"
,tpth.INVOICE_TYPE             "INVOICE_TYPE"
,tpth.RED_TICKET_SCALE          "RED_TICKET_SCALE"
,tpth.WAREHOUSE_DESC             "WAREHOUSE_DESC"
,tpth.SALES_AREA                "SALES_AREA"
,tpth.SALES_TYPE                "SALES_TYPE"
,tpth.BEOI_TAX                  "BEOI_TAX"
,tpth.TERMS_CLASS                 "TERMS_CLASS"
,tpth.BRAND_CN                    "BRAND_CN"
,tpo.PROPOSAL_YEAR                "PROPOSAL_YEAR"
,(select count(1)  from tta_proposal_header tpo2
where tpo2.VENDOR_NBR = tpo.vendor_nbr
and tpo2.proposal_year = tpo.proposal_year -1
and tpo2.status = 'C')      "OLD_YEAR"


 ,OldTpth.PAY_DAYS              "OLD_PAY_DAYS"
, OldTpth.SALES_UP_SCALE        "OLD_SALES_UP_SCALE"
,OldTpth.CONSIGNMENT_DISCOUNT    "OLD_CONSIGNMENT_DISCOUNT"
,OldTpth.INVOICE_TYPE             "OLD_INVOICE_TYPE"
,OldTpth.RED_TICKET_SCALE          "OLD_RED_TICKET_SCALE"
,OldTpth.WAREHOUSE_DESC             "OLD_WAREHOUSE_DESC"
,OldTpth.SALES_AREA                "OLD_SALES_AREA"
,OldTpth.SALES_TYPE                "OLD_SALES_TYPE"
,OldTpth.BEOI_TAX                  "OLD_BEOI_TAX"
,OldTpth.TERMS_CLASS                 "OLD_TERMS_CLASS"
,OldTpth.BRAND_CN                    "OLD_BRAND_CN"
,OldTpth.gp                         OLD_GP
,OldTpth.fcs_purchse               OLD_fcs_purchse
,OldTpth.fcs_sales                 OLD_fcs_sales
 ,OldTpth.agreement_edition      "OLD_AGREEMENT_EDITION"
  ,OldTpth.vendor_nbr            "OLD_VENDOR_NBR"
 ,OldTpth.vendor_desc             "OLD_VENDOR_DESC"
 ,OldTpth.dept_desc         "OLD_DEPT_DESC"
 ,OldTpth.dept_code          "OLD_DEPT_CODE"
 ,OldTpth.is_return          OLD_is_return
  ,oldTpo.IS_CROSS_YEAR         "OLD_IS_CROSS_YEAR"
  ,bpOld.Employee_Number      OLD_EMPLOYEE_NUMBER
   ,buOld.user_name                "OLD_CREATED_BY_NAME"
from
tta_proposal_header tpo,
tta_proposal_header oldTpo,
tta_proposal_terms_header tpth,
tta_proposal_terms_header  OldTpth,
tta_brandpln_header tbh,
Tta_Supplier ts,
base_users buOld,
base_person bpOld,
base_users bu,
base_person bp
where
  tpo.proposal_id = tpth.proposal_id(+)
  and tpo.vendor_nbr = oldTpo.Vendor_Nbr(+)
  and tpo.proposal_year-1 =  oldTpo.Proposal_Year(+)
  and nvl(oldTpo.Status,'C') ='C'
  and oldTpo.Proposal_Id = OldTpth.Proposal_Id(+)
and tpo.vendor_nbr = ts.supplier_code(+)
and tpth.created_by = bu.user_id(+)
and  bu.person_id = bp.person_id(+)
and   tpo.proposal_id = tbh.proposal_id(+)
and    OldTpth.created_by = buOld.user_id(+)
and  buOld.person_id = bpOld.person_id(+);



-- ----------------------------
-- View structure for TTA_PROPOSAL_TERMS_LINE_V
-- ----------------------------
CREATE OR REPLACE FORCE VIEW TTA_PROPOSAL_TERMS_LINE_V AS 
select
         tct.clause_cn Y_TERMS ,
         (select listagg(ttc.clause_cn, ',') within group(order by ttc.clause_cn)
         from tta_clause_tree ttc
         where ttc.p_code = tct.code
         and ttc.business_type ='02') INCOME_TYPE_LIST





         from          tta_clause_tree tct ,
                       tta_terms_frame_header tfh
         where
         tct.team_framework_id = tfh.team_framework_id;

-- ----------------------------
-- View structure for TTA_REL_SUPPLIER_BRAND_V
-- ----------------------------
CREATE OR REPLACE VIEW TTA_REL_SUPPLIER_BRAND_V AS
SELECT t."REL_SUPPLIER_ID",t."REL_BRAND_CODE",
t."REL_BRAND_NAME",
t."REL_ID",t."STATUS",
t."CREATION_DATE",t."CREATED_BY",
t."LAST_UPDATED_BY",t."LAST_UPDATE_DATE",
t."LAST_UPDATE_LOGIN",t."VERSION_NUM",
t."GROUP_CODE",t."DEPT_CODE",t."BU_SCORECARD",
t."WIN_TOP_SUPPLIER",t."KB_SCORECARD",t.GROUP_name,t.dept_name,T.REL_BRAND_NAME_EN
  from
tta_rel_supplier_brand t where
1=1;

-- ----------------------------
-- View structure for TTA_REL_SUPPLIER_DEPT_V
-- ----------------------------
CREATE OR REPLACE FORCE VIEW TTA_REL_SUPPLIER_DEPT_V AS 
SELECT t.REL_SUPPLIER_ID,t.REL_DEPT_CODE,t.REL_DEPT_NAME,
t.REL_ID,t.STATUS,t.CREATION_DATE,
t.CREATED_BY,t.LAST_UPDATED_BY,
t.LAST_UPDATE_DATE,t.LAST_UPDATE_LOGIN,
t.VERSION_NUM
  from
tta_rel_supplier_dept t where
1=1;

-- ----------------------------
-- View structure for TTA_REL_SUPPLIER_V
-- ----------------------------
CREATE OR REPLACE VIEW TTA_REL_SUPPLIER_V AS
SELECT t.rel_supplier_id,t.rel_supplier_code,
t.rel_supplier_name,t.rel_id,t.creation_date,
t.created_by,t.last_updated_by,t.last_update_date,
t.version_num,t.rel_contract_output
  from
tta_rel_supplier t where
1=1;


-- ----------------------------
-- View structure for TTA_SUPPLIER_V
-- ----------------------------
CREATE OR REPLACE VIEW TTA_SUPPLIER_V AS
SELECT t."SUPPLIER_ID",
t."SUPPLIER_CODE",
t."SUPPLIER_NAME",
t."STATUS",
t."IS_LATENT",
t."OWNER_DEPT",
t."CREATION_DATE",
t."CREATED_BY",
t."LAST_UPDATED_BY",
t."LAST_UPDATE_DATE",
t."LAST_UPDATE_LOGIN",
t."VERSION_NUM",
t."OWNER_GROUP",
t."CONTRACT_OUTPUT",
t."PURCHASE_MODE",
t."PROPOSAL_BRAND_GROUP",
t.Formal_Code,
t.Formal_Name,
   t.dept_name DEPT_NAME,
   lookup.meaning status_name,
   u1.user_name last_updated_name,
   u2.user_name created_name
   FROM Tta_Supplier t,
  -- base_department bd,
    (select lookup_type,lookup_code,meaning
        from base_lookup_values where lookup_type='SUPPLIER_STATUS' and enabled_flag='Y'
      and delete_flag=0 and start_date_active<sysdate and (end_date_active>=sysdate or end_date_active is null) and system_code='BASE'
      ) lookup,
      base_users u1,
      base_users u2
   where
   --t.owner_dept = bd.department_code(+)
   t.status =lookup.lookup_code(+)
   and t.last_updated_by = u1.user_id(+)
   and t.created_by = u2.user_id(+)
;



-- ----------------------------
-- Procedure structure for MY_PRO_SEARCHKEYWORD
-- ----------------------------
CREATE OR REPLACE procedure MY_PRO_SEARCHKEYWORD is
  v_sql VARCHAR2(4000);
  v_tb_column VARCHAR2(4000);
  v_cnt NUMBER(18,0);
  cursor cur is SELECT 'SELECT '''||''||t1.table_name||'.'||t1.Column_Name||''||''''||' as col_name, NVL(COUNT(t.'||t1.Column_Name||'),0) as cnt FROM '||
         t1.table_name||' t WHERE t.'||t1.column_name||' like ''%attTaermsFrameworkHeadHService%''' AS str
    FROM cols t1 left join user_col_comments t2
      on t1.Table_name=t2.Table_name and t1.Column_Name=t2.Column_Name
    left join user_tab_comments t3
      on t1.Table_name=t3.Table_name
   WHERE NOT EXISTS ( SELECT t4.Object_Name FROM User_objects t4
               WHERE t4.Object_Type='TABLE'
                 AND t4.Temporary='Y'
                 AND t4.Object_Name=t1.Table_Name )
     AND (t1.Data_Type='CHAR' or t1.Data_Type='VARCHAR2' or t1.Data_Type='VARCHAR')
   ORDER BY t1.Table_Name, t1.Column_ID;

BEGIN
  FOR i IN cur LOOP
    v_sql := i.str; -- 获取将要执行的SQL语句；
    EXECUTE IMMEDIATE v_sql INTO v_tb_COLUMN, v_cnt;
    IF v_cnt > 0 THEN
      dbms_output.put_line('表：'||substr(v_tb_column,1,instr(v_tb_column,'.',1,1)-1)||' 列：'||substr(v_tb_column,instr(v_tb_column,'.',1,1)+1)||
                           '有 '||to_char(v_cnt)|| '条记录含有字串关键字 ');
    END IF;
  END LOOP;
EXCEPTION WHEN OTHERS THEN
BEGIN
  dbms_output.put_line(v_sql);
  dbms_output.put_line(v_tb_column);
END;
end MY_Pro_SearchKeyWord;
/

-- ----------------------------
-- Procedure structure for P_TTA_PROPOSAL_BUILD_BILL_COPY
-- ----------------------------
CREATE OR REPLACE procedure P_TTA_PROPOSAL_BUILD_BILL_COPY(P_ORDER_ID    NUMBER,
                                P_USER_ID     NUMBER,
                                P_ISSUCCESS   OUT NUMBER, --返回成功状态 -1：处理失败，1：成功；0：警告
                                P_ERR_MESSAGE OUT VARCHAR2, --返回信息
                                P_PROPOSAL_ID  OUT VARCHAR2) IS
     ------###############功能:proposal生成页面中的变更或复制###################

     V_COUNT               NUMBER; --计数器
     V_TTA_PROPOSAL_HEADER  TTA_PROPOSAL_HEADER%ROWTYPE; --PROPOSAL主信息
     V_TTA_BRANDPLN_HEADER  TTA_BRANDPLN_HEADER%ROWTYPE; --品牌计划头信息
     V_TTA_BRANDPLN_LINE  TTA_BRANDPLN_LINE%ROWTYPE; -- 品牌计划行信息
     V_TTA_PROPOSAL_TERMS_HEADER  TTA_PROPOSAL_TERMS_HEADER%ROWTYPE; --TTA TERMS 主信息
     V_TTA_PROPOSAL_TERMS_LINE    TTA_PROPOSAL_TERMS_LINE%ROWTYPE;   -- TTA TERMS 行表
     v_tta_newbreed_extend_header  tta_newbreed_extend_header%ROWTYPE; -- 新品种宣传推广服务费用头表
     v_tta_contract_line           tta_contract_line%Rowtype;  --合同拆分行表
     v_tta_brandpln_header_id_s  NUMBER; --原来的品牌头id
     v_tta_brandpln_header_id      NUMBER; --品牌头id
     v_tta_brandpln_line           NUMBER;
     v_tta_p_terms_h_sco_id        number; --TTA TERMS 源 头信息id
     v_tta_p_terms_h_next_id       number; -- TTA TERMS 头信息id
     v_tta_nbreed_extend_h_sid     number; --新品种宣传推广服务费用头表源id

   BEGIN
     P_ISSUCCESS := 1;
     P_ERR_MESSAGE := '执行成功';
     BEGIN
        --判断是否是审核状态的数据
        SELECT COUNT(1)
          INTO V_COUNT
          FROM TTA_PROPOSAL_HEADER TT
         WHERE TT.PROPOSAL_ID = P_ORDER_ID
           AND TT.STATUS = 'C';
        IF V_COUNT = 0 THEN
          P_ISSUCCESS   := -1;
          P_ERR_MESSAGE := '没有找到ID为[' || P_ORDER_ID || ']状态为审批通过的单据';
          RETURN;
        END IF;

        --复制数据
         SELECT TT.*
          INTO V_TTA_PROPOSAL_HEADER
          FROM TTA_PROPOSAL_HEADER TT
         WHERE TT.PROPOSAL_ID = P_ORDER_ID
           AND TT.STATUS = 'C';

         --修改数据
        P_PROPOSAL_ID                       := SEQ_TTA_PROPOSAL_HEADER.NEXTVAL();
        V_TTA_PROPOSAL_HEADER.PROPOSAL_ID   := P_PROPOSAL_ID;
        V_TTA_PROPOSAL_HEADER.ALERT_BY      := P_USER_ID; --变更人
        V_TTA_PROPOSAL_HEADER.ALERT_DATE    := SYSDATE;

        V_TTA_PROPOSAL_HEADER.LAST_UPDATED_BY  := P_USER_ID;
        V_TTA_PROPOSAL_HEADER.LAST_UPDATE_DATE := SYSDATE;
        V_TTA_PROPOSAL_HEADER.STATUS           := 'A';
        V_TTA_PROPOSAL_HEADER.APPROVE_DATE     := NULL; --设置审核时间为null
        V_TTA_PROPOSAL_HEADER.IS_CHANGE    := 'Y';
        V_TTA_PROPOSAL_HEADER.VERSION_CODE := V_TTA_PROPOSAL_HEADER.VERSION_CODE + 1;
        V_TTA_PROPOSAL_HEADER.VERSION_STATUS := '1'; --生效
        V_TTA_PROPOSAL_HEADER.ORIGIN_PROPOSAL_ID := P_ORDER_ID;

         --基于原始数据,插入新的数据
         INSERT INTO TTA_PROPOSAL_HEADER VALUES V_TTA_PROPOSAL_HEADER;

         --原始数据 版本状态失效
         UPDATE TTA_PROPOSAL_HEADER T
            SET T.VERSION_STATUS = '0'
          WHERE T.PROPOSAL_ID = P_ORDER_ID;

          --插入与proposal主信息相关的业务数据
          --插入品牌计划头和品牌计划行信息
          for temp in (
            SELECT TBH.*
               FROM TTA_BRANDPLN_HEADER TBH
              WHERE TBH.PROPOSAL_ID = P_ORDER_ID
                    ) loop
           begin
             v_tta_brandpln_header_id_s := temp.brandpln_h_id;
             v_tta_brandpln_header_id :=seq_tta_brandpln_header.nextval();
             temp.brandpln_h_id := v_tta_brandpln_header_id;
             temp.last_updated_by := P_USER_ID;
             temp.last_update_date :=sysdate;
             temp.proposal_id := P_PROPOSAL_ID;

             insert into tta_brandpln_header values temp;

             for templ in (
               select tbl.* from tta_brandpln_line tbl where tbl.brandpln_h_id = v_tta_brandpln_header_id_s
               ) loop

               begin
                 templ.brandpln_l_id := seq_tta_brandpln_line.nextval();
                 templ.brandpln_h_id :=v_tta_brandpln_header_id; --新的品牌头id
                 templ.proposal_id := P_PROPOSAL_ID;
                 templ.last_updated_by :=P_USER_ID;
                 templ.last_update_date :=sysdate;
                 insert into tta_brandpln_line values templ;

                 end;
             end loop;
             end;
           end loop;

          V_COUNT := 0;
          
          select  count(1) into V_COUNT from tta_proposal_terms_header tpth
                  where tpth.proposal_id = P_ORDER_ID; 
           --插入TTA TERMS数据
          if V_COUNT > 0 then 
           select tpth.* into V_TTA_PROPOSAL_TERMS_HEADER from tta_proposal_terms_header tpth
                  where tpth.proposal_id = P_ORDER_ID; 
                

           --赋值
           v_tta_p_terms_h_sco_id := V_TTA_PROPOSAL_TERMS_HEADER.terms_h_id; --原id,查询TTA TERMS明细数据
           v_tta_p_terms_h_next_id := seq_tta_proposal_terms_header.nextval();
           V_TTA_PROPOSAL_TERMS_HEADER.terms_h_id  := v_tta_p_terms_h_next_id;

           V_TTA_PROPOSAL_TERMS_HEADER.proposal_id := P_PROPOSAL_ID;
           V_TTA_PROPOSAL_TERMS_HEADER.terms_version := to_number(nvl(V_TTA_PROPOSAL_TERMS_HEADER.terms_version,0)) + 1;
           V_TTA_PROPOSAL_TERMS_HEADER.last_updated_by := P_USER_ID;
           V_TTA_PROPOSAL_TERMS_HEADER.last_update_date := sysdate;

           --插入IIA TERMS头信息
           INSERT INTO tta_proposal_terms_header VALUES V_TTA_PROPOSAL_TERMS_HEADER;

           for terms in(
               select tptl.* from TTA_PROPOSAL_TERMS_LINE tptl where tptl.terms_h_id = v_tta_p_terms_h_sco_id order by tptl.order_no
             ) loop
             begin
               --插入IIA TERMS明细信息
                  terms.terms_l_id := seq_tta_proposal_terms_line.nextval();
                  terms.proposal_id :=P_PROPOSAL_ID;
                  terms.terms_h_id := v_tta_p_terms_h_next_id;
                  terms.last_updated_by := P_USER_ID;
                  terms.last_update_date := sysdate;
                  terms.business_version := to_number(nvl(terms.business_version,0)) + 1;

                  insert into tta_proposal_terms_line values terms;

               end;
             end loop;
             
            end if;  
            
            V_COUNT := 0;
            select count(1)
                into V_COUNT
                from tta_newbreed_extend_header tneh
               where tneh.proposal_id = P_ORDER_ID;
               
            if V_COUNT > 0 then
             --插入 新品种宣传推广服务费用头表信息
              select tneh.*
                into v_tta_newbreed_extend_header
                from tta_newbreed_extend_header tneh
               where tneh.proposal_id = P_ORDER_ID;
  
              --传参
              v_tta_nbreed_extend_h_sid := v_tta_newbreed_extend_header.newbreed_extend_h_id; --源id
              v_tta_newbreed_extend_header.newbreed_extend_h_id := seq_tta_newbreed_extend_header.nextval();
              v_tta_newbreed_extend_header.proposal_id := P_PROPOSAL_ID;
              v_tta_newbreed_extend_header.last_updated_by := P_USER_ID;
              v_tta_newbreed_extend_header.last_update_date := sysdate;

              insert into tta_newbreed_extend_header VALUES v_tta_newbreed_extend_header;

              --插入新品种宣传推广服务费用行表 信息
             for newbreedl in (
                 select tnel.*
                   from tta_newbreed_extend_line tnel
                  where tnel.newbreed_extend_h_id =
                        v_tta_nbreed_extend_h_sid
               ) loop
               begin
                 newbreedl.newbreed_extend_l_id := seq_tta_newbreed_extend_line.nextval();
                 newbreedl.newbreed_extend_h_id := v_tta_newbreed_extend_header.newbreed_extend_h_id;
                 newbreedl.last_updated_by := P_USER_ID;
                 newbreedl.last_update_date := sysdate;
                 newbreedl.last_update_login := P_USER_ID;

                 insert into tta_newbreed_extend_line values newbreedl;
                 end;
             end loop;
             
             end if;

             ---插入合同行信息
             for contracts in (
               select tcl.* from tta_contract_line tcl where tcl.proposal_id  = P_ORDER_ID order by tcl.order_no asc
               ) loop
               begin
                 contracts.contract_l_id := seq_tta_contract_line.nextval();
                 contracts.proposal_id  := P_PROPOSAL_ID;
                 contracts.last_updated_by := P_USER_ID;
                 contracts.last_update_date := sysdate;
                 contracts.last_update_login := P_USER_ID;

                 insert into tta_contract_line values contracts;
                 end;
             end loop;
            -- commit;
     EXCEPTION
      WHEN OTHERS THEN
        P_ISSUCCESS   := -1;
        P_ERR_MESSAGE := '执行异常，异常信息：' || SQLERRM;
       -- rollback;
     END;
 END P_TTA_PROPOSAL_BUILD_BILL_COPY;
/

-- ----------------------------
-- Procedure structure for P_TTA_PROPOSAL_BUILD_BILL_CUT
-- ----------------------------
CREATE OR REPLACE procedure P_TTA_PROPOSAL_BUILD_BILL_CUT (
                               P_ORDER_ID  in  NUMBER,
                               P_USER_ID   in  NUMBER,
                               P_ISSUCCESS   OUT NUMBER, --返回成功状态 -1：处理失败，1：成功；0：警告
                               P_ERR_MESSAGE OUT VARCHAR2, --返回信息
                               P_PROPOSAL_ID OUT VARCHAR2) is
--########################### proposal生成管理: 切换上一版本 ##########################################                          
    V_COUNT               NUMBER; --计数器
    V_TTA_PROPOSAL_HEADER TTA_PROPOSAL_HEADER%ROWTYPE;
    v_origin_proposal_id           NUMBER; --源proposalId

   BEGIN
      P_ISSUCCESS := 1;
      P_ERR_MESSAGE := '执行成功';
      BEGIN

        BEGIN
        SELECT TT.origin_proposal_id
          INTO v_origin_proposal_id
          FROM TTA_PROPOSAL_HEADER TT
         WHERE TT.PROPOSAL_ID = P_ORDER_ID;
        EXCEPTION
          WHEN NO_DATA_FOUND THEN
           P_ISSUCCESS   := -1;
           P_ERR_MESSAGE := '没有找到ID为[' || P_ORDER_ID || ']的单据';
           RETURN;
          WHEN TOO_MANY_ROWS THEN
           P_ISSUCCESS   := -1;
           P_ERR_MESSAGE := '找到多条ID为[' || P_ORDER_ID || ']的单据';
           RETURN;
        END;

       if v_origin_proposal_id is null then
         P_ISSUCCESS   := -1;
         P_ERR_MESSAGE := '未找到上一版本';
         RETURN;
       end if;

       -- proposal 主信息
       --恢复上一版本的信息
       UPDATE TTA_PROPOSAL_HEADER T
         SET
           T.VERSION_STATUS = '1' --生效
       WHERE T.PROPOSAL_ID = v_origin_proposal_id;

      --删除proposal 主信息当前版本信息 
      delete from TTA_PROPOSAL_HEADER tph where tph.proposal_id = P_ORDER_ID;
       
      --删除当前选择的proposalId所对应的品牌计划头信息和品牌计划明细信息
     --明细表
       DELETE FROM TTA_BRANDPLN_LINE TBL WHERE TBL.BRANDPLN_H_ID in(
              select tbh.brandpln_h_id from TTA_BRANDPLN_HEADER tbh where tbh.proposal_id =P_ORDER_ID 
       ) and TBL.Proposal_Id =  P_ORDER_ID;
      
     --头表
       DELETE FROM TTA_BRANDPLN_HEADER TBH
              WHERE TBH.PROPOSAL_ID = P_ORDER_ID;
              
       --删除 TTA TERMS
       delete from TTA_PROPOSAL_TERMS_LINE tptl where tptl.terms_h_id in(
              select tpth.terms_h_id from tta_proposal_terms_header tpth where tpth.proposal_id = P_ORDER_ID
       ) and tptl.proposal_id = P_ORDER_ID;
       
       delete from tta_proposal_terms_header tpth where tpth.proposal_id = P_ORDER_ID;

       --删除新品种宣传推广服务费用信息
       delete from tta_newbreed_extend_header tneh
               where tneh.proposal_id = P_ORDER_ID;
               
       delete from tta_newbreed_extend_line tnel where tnel.newbreed_extend_h_id = (
             select tneh.newbreed_extend_h_id from tta_newbreed_extend_header tneh where tneh.proposal_id = P_ORDER_ID
       );  
       
       --删除合同信息
       delete from tta_contract_line tcl where tcl.proposal_id  = P_ORDER_ID;      
       
       --赋值源proposalId给调用方
      P_PROPOSAL_ID := v_origin_proposal_id;

      commit;
    EXCEPTION
      WHEN OTHERS THEN
        P_ISSUCCESS   := -1;
        P_ERR_MESSAGE := '执行异常，异常信息：' || SQLERRM;
        rollback;
    END;
 END p_tta_proposal_build_bill_cut;
/

-- ----------------------------
-- Procedure structure for PRO_BASE_DEPARTMENT
-- ----------------------------
CREATE OR REPLACE procedure PRO_BASE_DEPARTMENT is
begin
  -- 1.更新数据
  update base_department a
     set (a.department_code, a.department_name, a.department_full_name) =
         (select b.code, b.name_cn, b.name_en
            from tta_dept_in b
           where b.code = a.department_code)
   where exists
   (select 1 from tta_dept_in c where c.code = a.department_code);
  -- 2.有新增数据则新增
  insert into base_department
    (department_id,
     department_code,
     department_name,
     department_full_name,
     suffix,
     department_level,
     ou_id,
     parent_department_id,
     cost_center,
     department_seq,
     date_from,
     date_to,
     enable_flag,
     biz_line_type,
     channel,
     department_type,
     inventory_enable,
     creation_date,
     created_by,
     last_update_date,
     last_updated_by,
     last_update_login,
     delete_flag,
     version_num)
    select seq_base_department.nextval,
           t.code as department_code,
           t.name_cn as department_name,
           t.name_en as department_full_name,
           null as suffix,
           0 as department_level,
           261 as ou_id,
           0 as parent_department_id,
           null as cost_center,
           null as department_seq,
           sysdate date_from,
           null date_to,
           'Y' as enable_flag,
           null as biz_line_type,
           90 as channel,
           null as department_type,
           'Y' as inventory_enable,
           sysdate creation_date,
           -1 as created_by,
           sysdate as last_update_date,
           -1 as last_updated_by,
           -1 as last_update_login,
           0 as delete_flag,
           0 as version_num
      from tta_dept_in t
     where not exists
     (select 1 from base_department a where a.department_code = t.code);
  commit;
end;
/

-- ----------------------------
-- Procedure structure for PRO_BASE_DEPT_POSITION_ASSIGN
-- ----------------------------
CREATE OR REPLACE procedure PRO_BASE_DEPT_POSITION_ASSIGN
is
begin
   pro_base_department();
   pro_base_position();
   pro_base_person_assign();
end pro_base_dept_position_assign;
/

-- ----------------------------
-- Procedure structure for PRO_BASE_JOB
-- ----------------------------
CREATE OR REPLACE procedure PRO_BASE_JOB
    is
    begin
      insert into base_job(
        JOB_ID,
        JOB_CODE,
        JOB_NAME,
        "COMMENT",
        DATE_FROM,
        DATE_TO,
        ENABLE_FLAG,
        OU_ID,
        CREATION_DATE,
        CREATED_BY,
        LAST_UPDATE_DATE,
        LAST_UPDATED_BY,
        LAST_UPDATE_LOGIN,
        DELETE_FLAG,
        VERSION_NUM
       ) SELECT
        SEQ_BASE_JOB.NEXTVAL AS JOB_ID,
        A.POST_NAME AS JOB_CODE,
        A.POST_NAME AS JOB_NAME,
        NULL AS "COMMENT",
        SYSDATE DATE_FROM,
        NULL AS DATE_TO,
        'Y' ENABLE_FLAG,
        261 AS OU_ID,
        SYSDATE AS CREATION_DATE,
        -1 CREATED_BY,
        SYSDATE AS LAST_UPDATE_DATE,
        -1 AS LAST_UPDATED_BY,
        -1 AS LAST_UPDATE_LOGIN,
        0 AS  DELETE_FLAG,
        0 as VERSION_NUM
      FROM (select b.post_name from  tta_person_in b where b.post_name is not null group by b.post_name) a
      where not exists (select 1 from base_job b where b.job_code = a.post_name);
    commit;
    end;
/

-- ----------------------------
-- Procedure structure for PRO_BASE_ORGANIZATION
-- ----------------------------
CREATE OR REPLACE PROCEDURE PRO_BASE_ORGANIZATION
as
begin
INSERT INTO base_organization
  (ORG_ID,
   PARENT_ORG_ID,
   ORG_CODE,
   ORG_NAME,
   TREE_TYPE,
   CHANNEL_TYPE,
   BUSINESS_TYPE,
   IS_DEP,
   ORG_TYPE,
   ORG_LEVEL,
   IS_LEAF,
   START_DATE,
   END_DATE,
   ENABLED,
   REMARK,
   ORG_PINYIN_NAME,
   ORG_SIMPLE_PINYIN_NAME,
   ORDER_NO,
   DELETE_FLAG,
   ORG_HIERARCHY_ID,
   ORG_EMAIL,
   SOURCE_SYSTEM_ID,
   CREATION_DATE,
   CREATED_BY,
   LAST_UPDATED_BY,
   LAST_UPDATE_DATE,
   VERSION_NUM,
   LEADER_ID,
   LAST_UPDATE_LOGIN,
   ORGANIZATION_ID,
   WORK_STATISTICS)
  select
         t.org_code as  ORG_ID,
         t.parent_org_code as PARENT_ORG_ID,
         t.org_code as ORG_CODE,
         t.org_name as ORG_NAME,
         '业务组织' as TREE_TYPE,
         10 as CHANNEL_TYPE,
         20 as BUSINESS_TYPE,
         'N' as IS_DEP,
         'ORG' as ORG_TYPE,
         null as ORG_LEVEL,
         null as IS_LEAF,
         SYSDATE AS START_DATE,
         NULL AS END_DATE,
         'Y' AS ENABLED,
         NULL AS REMARK,
         NULL AS ORG_PINYIN_NAME,
         NULL AS ORG_SIMPLE_PINYIN_NAME,
         NULL AS ORDER_NO,
         0 AS DELETE_FLAG,
         NULL AS ORG_HIERARCHY_ID,
         NULL AS ORG_EMAIL,
         NULL AS SOURCE_SYSTEM_ID,
         SYSDATE AS CREATION_DATE,
         -1 CREATED_BY,
         -1 AS LAST_UPDATED_BY,
         SYSDATE LAST_UPDATE_DATE,
         0 AS VERSION_NUM,
         NULL LEADER_ID,
         -1 LAST_UPDATE_LOGIN,
         NULL AS ORGANIZATION_ID,
         NULL AS WORK_STATISTICS
    from tta_org_in  t where not exists (select 1 from base_organization a where a.org_code = t.org_code);
--   /* where t.org_code in (822, 783, 674);*/
commit;

update base_organization a
   set (a.org_level, a.is_leaf) =
       (select t.ORG_LEVEL, t.IS_LEAF
          from (SELECT
                      LEVEL as ORG_LEVEL, 
                      connect_by_isleaf as IS_LEAF,
                      o.org_code
                   FROM tta_org_in o
                  START WITH o.parent_org_code IS NULL
                 CONNECT BY PRIOR o.org_code = o.parent_org_code) t
         where t.org_code = a.org_code);
commit;
end pro_base_organization;



  

  
/

-- ----------------------------
-- Procedure structure for PRO_BASE_PERSON_ASSIGN
-- ----------------------------
CREATE OR REPLACE procedure PRO_BASE_PERSON_ASSIGN
as
begin
insert into base_person_assign
(
     ASSIGN_ID,
     PERSON_ID,
     POSITION_ID,
     JOB_ID,
     DELETE_FLAG,
     DATE_FROM,
     DATE_TO,
     OU_ID,
     MGR_FLAG,
     PRIMARY_FLAG,
     ENABLE_FLAG,
     BUDGET_VIEW,
     BUDGET_MAINTAIN,
     CREATION_DATE,
     CREATED_BY,
     LAST_UPDATE_DATE,
     LAST_UPDATED_BY,
     LAST_UPDATE_LOGIN,
     VERSION_NUM
) select
     seq_base_person_assign.nextval ASSIGN_ID,
     a.person_id as PERSON_ID,
     b.position_id as POSITION_ID,
     b.job_id as JOB_ID,
     0 as DELETE_FLAG,
     sysdate as DATE_FROM,
     null as DATE_TO,
     261 as OU_ID,
     'N' as MGR_FLAG,
     'N' as PRIMARY_FLAG,
     'Y' as ENABLE_FLAG,
     1 AS BUDGET_VIEW,
     'N' AS BUDGET_MAINTAIN,
     sysdate as CREATION_DATE,
     -1 as CREATED_BY,
     sysdate as LAST_UPDATE_DATE,
     -1 as LAST_UPDATED_BY,
     -1 as LAST_UPDATE_LOGIN,
     0 as VERSION_NUM
   from (
          select
             x.person_id,
             x.dept_no || '.' || x.post_name  as dept_no_post_name
           from base_person x
           group by x.dept_no, x.post_name, x.person_id
        ) a
   INNER JOIN base_position b on b.POSITION_CODE = a.dept_no_post_name
   where not exists (select 1 from base_person_assign sg where sg.person_id = a.person_id
    and sg.person_id = b.position_id
    and sg.job_id = b.job_id
    );
   commit;
end;
/

-- ----------------------------
-- Procedure structure for PRO_BASE_PERSON_JOB
-- ----------------------------
CREATE OR REPLACE procedure PRO_BASE_PERSON_JOB
    is
  begin
      PRO_PERSON_IN();
      PRO_BASE_JOB();
  end;
/

-- ----------------------------
-- Procedure structure for PRO_BASE_POSITION
-- ----------------------------
CREATE OR REPLACE procedure PRO_BASE_POSITION
is
begin
INSERT INTO base_position(
     POSITION_ID,
     DEPARTMENT_ID,
     JOB_ID,
     POSITION_CODE,
     POSITION_NAME,
     DATE_FROM,
     DATE_TO,
     ENABLE_FLAG,
     BIZ_LINE_TYPE,
     CHANNEL,
     OU_ID,
     CREATION_DATE,
     CREATED_BY,
     LAST_UPDATE_DATE,
     LAST_UPDATED_BY,
     LAST_UPDATE_LOGIN,
     DELETE_FLAG,
     VERSION_NUM
  )
  select
         seq_base_position.nextval as POSITION_ID,
         d.department_id AS DEPARTMENT_ID,
         b.job_id AS JOB_ID,
         a.dept_no_post_name AS POSITION_CODE,
         (d.department_name || '.' || a.post_name) AS POSITION_NAME,
         sysdate AS DATE_FROM,
         null AS DATE_TO,
         'Y' AS ENABLE_FLAG,
         NULL AS BIZ_LINE_TYPE,
         NULL AS CHANNEL,
         261 AS OU_ID,
         sysdate AS CREATION_DATE,
         -1 AS CREATED_BY,
         sysdate AS LAST_UPDATE_DATE,
         -1 AS LAST_UPDATED_BY,
         -1 AS LAST_UPDATE_LOGIN,
         0 AS DELETE_FLAG,
         0 AS VERSION_NUM
    from (select dept_no,
                 post_name,
                 dept_no || '.' || post_name as dept_no_post_name
            from base_person
           group by dept_no, post_name) a
   inner join base_job b
      on a.post_name = b.job_code
   inner join base_department d
      on d.department_code = a.dept_no
      where not exists (select 1 from base_position t where t.department_id = d.department_id);
      commit;
end;
/

-- ----------------------------
-- Procedure structure for PRO_PERSON_IN
-- ----------------------------
CREATE OR REPLACE procedure PRO_PERSON_IN
is
begin

  update base_person a
   set (a.area,
        a.email,
        a.grand,
        a.market,
        a.dept_no,
        a.org_code,
        a.post_name,
        a.person_name,
        a.person_name_en) =
       (select b.area,
               b.mail,
               b.grand,
               b.market,
               b.dept_no,
               b.org_code,
               b.post_name,
               b.name,
               b.name_en
          from tta_person_in b
         where b.code = a.employee_number)
 where exists
 (select 1 from tta_person_in b where b.code = a.employee_number);

insert into base_person  (
       GRAND,
       PERSON_NAME_EN,
       DEPT_NO,
       POST_NAME,
       AREA,
       MARKET,
       ORG_CODE,
       PERSON_ID,
       EMPLOYEE_NUMBER,
       PERSON_NAME,
       PERSON_TYPE,
       SEX,
       BIRTH_DAY,
       CARD_NO,
       ENABLED,
       TEL_PHONE,
       MOBILE_PHONE,
       EMAIL,
       POSTAL_ADDRESS,
       POSTCODE,
       SERVICE_STORE_ID,
       SOURCE_SYSTEM_ID,
       CREATION_DATE,
       CREATED_BY,
       LAST_UPDATED_BY,
       LAST_UPDATE_DATE,
       VERSION_NUM,
       LAST_UPDATE_LOGIN,
       SOURCE_CODE,
       SOURCE_ID)
  select
       t.grand,
       t.name_en,
       t.dept_no,
       t.post_name,
       t.area,
       t.market,
       t.org_code,
       seq_base_person.nextval,
       t.code,
       t.name,
       'IN' AS PERSON_TYPE,
       null as SEX,
       null as BIRTH_DAY,
       null as CARD_NO,
       'Y' AS  ENABLED,
       null as  TEL_PHONE,
       null as MOBILE_PHONE,
       t.mail,
       null as POSTAL_ADDRESS,
       null as POSTCODE,
       null as SERVICE_STORE_ID,
       null as SOURCE_SYSTEM_ID,
       sysdate as CREATION_DATE,
       -1 as CREATED_BY,
       -1 as LAST_UPDATED_BY,
       sysdate as LAST_UPDATE_DATE,
       0 as VERSION_NUM,
       -1 as LAST_UPDATE_LOGIN,
       'BPM' as SOURCE_CODE,
       null as SOURCE_ID
  from tta_person_in t where not exists (select 1 from  base_person b where b.employee_number=t.code);
  commit;
end;
/

-- ----------------------------
-- Function structure for FORSTR
-- ----------------------------
CREATE OR REPLACE FUNCTION FORSTR(STR1 VARCHAR2, FORMAT VARCHAR2 := 'FM00')
  RETURN VARCHAR2 AS
  RESULT VARCHAR2(600);
  STR    VARCHAR2(300) := STR1;
BEGIN
  WHILE 0 <= INSTR(STR, '.') LOOP
    IF INSTR(STR, '.') = 0 THEN
      RESULT := RESULT || TO_CHAR(STR, FORMAT);
      EXIT;
    ELSE
      RESULT := RESULT ||
                TO_CHAR(TO_NUMBER(SUBSTR(STR, 0, INSTR(STR, '.'))), FORMAT) || '.';
    END IF;
    STR := SUBSTR(STR, INSTR(STR, '.') + 1, LENGTH(STR));
  END LOOP;
  RETURN RESULT;
EXCEPTION
  WHEN OTHERS THEN
    RAISE_APPLICATION_ERROR(-20000, '层次分隔符不匹配,请使用''.''符号!');
END FORSTR;
/

-- ----------------------------
-- Function structure for GET_EXP
-- ----------------------------
CREATE OR REPLACE FUNCTION get_exp( clauseId in number,oldtproId in number,proId in number,v_flag in varchar2)
RETURN NUMBER
as
      v_is varchar2(1);
      v_param varchar2(3000);
      v_param2 varchar2(3000);
      v_tta   varchar2(50) ;
      v_Sql   varchar2(500) ;
      valuev   number ;
      oldClauseId  number ;
      v_old_clause_id number ;

      i           number ; --计数
      j           number ;
      e           number ;
      old_j       number ;
      sub_num     number ; --取出来的数字

  BEGIN
    v_param :='';
    v_tta   :='';
    v_is    :='';
    valuev  :=0;

        i := -1;
        j := -1;
        e :=1;
        old_j :=0;
        sub_num :=0;
    if clauseId is null or  oldtproId is  null or v_flag is null   then
      return   0;
    end   if ;
    if 'default'= v_flag then
            select tct.is_global_variable,
             tct.expression_value,
             tct.old_clause_id
      into   v_is,
             v_param,
             v_old_clause_id
      from   tta_clause_tree tct where tct.clause_id = clauseId ;
    else
      select tct.is_global_tta,
             tct.expression_value_tta,
             tct.old_clause_id
      into   v_is,
             v_param,
             v_old_clause_id
      from   tta_clause_tree tct where tct.clause_id = clauseId ;

    end if ;





      if v_param='' or   v_param is  null or v_is='' or   v_is is  null  then

      return   0 ;
      end    if  ;
      if '1'=v_is then
           select replace(v_param,':proposalId',proId)  into v_param from dual ;
           select replace(v_param,':oldClauseTreeId',nvl(v_old_clause_id,-1))  into v_param from dual ;

                  EXECUTE IMMEDIATE    v_param into  valuev;
      else

      --获取局部值
          LOOP

              i := instr(v_param,'{',1,e);
              j := instr(v_param,'}',1,e);
              DBMS_OUTPUT.put_line(i);
              DBMS_OUTPUT.put_line(j);

              if i =0 or e>500  then
                if e=1  then
                  v_param2 :=v_param;
                end   if ;

                 if e != 1 then
                   v_param2 := v_param2 || substr(v_param,old_j+1,lengthb(v_param)-old_j);
                   end if ;

                 exit;
              end if;

              v_param2 := v_param2 || substr(v_param,old_j+1,i-old_j-1);
              old_j :=j;
              sub_num := to_number( substr(v_param,i+1,j-i-1) );

              --获取往年的 TTA
              begin

                select tc.old_clause_id into  oldClauseId from  tta_clause_tree  tc where tc.clause_id = sub_num;
                select nvl(tptl.y_year,0) into  v_tta from  Tta_Proposal_Terms_Line  tptl where tptl.proposal_id =  oldtproId and tptl.clause_tree_id = oldClauseId ;

               exception

                  when  no_data_found  then
                    v_tta := 0;
              end ;
              v_param2 := v_param2 || v_tta;

              e := e + 1;
        END LOOP;

        v_Sql := 'SELECT trunc(' || v_param2 || ',2)  FROM dual';
        EXECUTE IMMEDIATE   v_Sql into  valuev ;


    end if ;
    return  valuev ;

 END get_exp;

/

-- ----------------------------
-- Function structure for GET_EXP_TTA
-- ----------------------------
CREATE OR REPLACE FUNCTION get_exp_tta( clauseId in number,tptLId in  number ,oldtproId in number,proId in number)
RETURN NUMBER
as
      v_is varchar2(1);
      v_param varchar2(3000);
      v_param2 varchar2(3000);
      v_tta   varchar2(50) ;
      v_Sql   varchar2(500) ;
      valuev   number ;
      oldClauseId  number ;
      v_old_clause_id number ;

      i           number ; --计数
      j           number ;
      e           number ;
      old_j       number ;
      sub_num     number ; --取出来的数字

  BEGIN
    v_param :='';
    v_tta   :='';
    v_is    :='';
    valuev  :=0;

        i := -1;
        j := -1;
        e :=1;
        old_j :=0;
        sub_num :=0;

      if clauseId is null or tptLId  is  null or oldtproId is  null   then
             return   0;
      end   if ;
      select tct.is_global_tta,
             tct.expression_value_tta,
             tct.old_clause_id
      into   v_is,
             v_param,
             v_old_clause_id
      from   tta_clause_tree tct where tct.clause_id = clauseId ;
      if v_param='' or  v_param  is  null  or v_is is null or   v_is ='' then

       return 0 ;
      end   if ;

      if '1'=v_is then
           select replace(v_param,':proposalId',proId)  into v_param from dual ;
           select replace(v_param,':oldClauseTreeId',nvl(v_old_clause_id,-1))  into v_param from dual ;

                  EXECUTE IMMEDIATE    v_param into  valuev;

      else

      --获取局部值
          LOOP

              i := instr(v_param,'{',1,e);
              j := instr(v_param,'}',1,e);
              DBMS_OUTPUT.put_line(i);
              DBMS_OUTPUT.put_line(j);

              if i =0 or e>500  then
                if e=1  then
                  v_param2 :=v_param;
                end   if ;

                 if e != 1 then
                   v_param2 := v_param2 || substr(v_param,old_j+1,lengthb(v_param)-old_j);
                   end if ;

                 exit;
              end if;

              v_param2 := v_param2 || substr(v_param,old_j+1,i-old_j-1);
              old_j :=j;
              sub_num := to_number( substr(v_param,i+1,j-i-1) );

              --获取往年的 TTA
              begin

                select tc.old_clause_id into  oldClauseId from  tta_clause_tree  tc where tc.clause_id = sub_num;
                select nvl(tptl.y_year,0) into  v_tta from  Tta_Proposal_Terms_Line  tptl where tptl.proposal_id =  oldtproId and tptl.clause_id = oldClauseId ;

               exception

                  when  no_data_found  then
                    v_tta := 0;
              end ;
              v_param2 := v_param2 || v_tta;

              e := e + 1;
        END LOOP;

     v_Sql := 'SELECT trunc(' || v_param2 || ',2)  FROM dual';
     EXECUTE IMMEDIATE   v_Sql into  valuev ;
    end if ;

    return  valuev ;

 END get_exp_tta;

/

-- ----------------------------
-- Function structure for GET_FILLZERO
-- ----------------------------
CREATE OR REPLACE function GET_FILLZERO
 (
   P_String IN VARCHAR2,--传入的字串
   P_LR IN VARCHAR2,--L为左、R为右
   P_Length IN int--总长度
 ) return varchar2 is
   v_Temp varchar2(1000):='';
   v_Name varchar2(1000):='';
begin
  --去除小数点
  if P_String is not null then
    v_Name:=replace(P_String,'.','');
  end if;

  if length(v_Name)>=P_Length then
    v_Temp:=v_Name;
  else
    if P_LR='L' then--左补零
      v_Temp:=replace(lpad(v_Name,P_Length+(lengthb(P_String)-length(P_String))),' ','0');
    else
      v_Temp:=replace(RPAD(v_Name,P_Length+(lengthb(P_String)-length(P_String))),' ','0');
    end if;
  end if;

  return(v_Temp);

end get_FillZero;
/

-- ----------------------------
-- Sequence structure for SEQ_ACT_BPM_CATEGORY
-- ----------------------------
DROP SEQUENCE SEQ_ACT_BPM_CATEGORY;
CREATE SEQUENCE SEQ_ACT_BPM_CATEGORY
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 102
 CACHE 20;

-- ----------------------------
-- Sequence structure for SEQ_ACT_BPM_COMMUNICATE
-- ----------------------------
DROP SEQUENCE SEQ_ACT_BPM_COMMUNICATE;
CREATE SEQUENCE SEQ_ACT_BPM_COMMUNICATE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_ACT_BPM_CONFIG
-- ----------------------------
DROP SEQUENCE SEQ_ACT_BPM_CONFIG;
CREATE SEQUENCE SEQ_ACT_BPM_CONFIG
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_ACT_BPM_EXCEPTION
-- ----------------------------
DROP SEQUENCE SEQ_ACT_BPM_EXCEPTION;
CREATE SEQUENCE SEQ_ACT_BPM_EXCEPTION
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 8
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_ACT_BPM_LIST
-- ----------------------------
DROP SEQUENCE SEQ_ACT_BPM_LIST;
CREATE SEQUENCE SEQ_ACT_BPM_LIST
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 308
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_ACT_BPM_NOTIFY_TASK
-- ----------------------------
DROP SEQUENCE SEQ_ACT_BPM_NOTIFY_TASK;
CREATE SEQUENCE SEQ_ACT_BPM_NOTIFY_TASK
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_ACT_BPM_PERMISSION
-- ----------------------------
DROP SEQUENCE SEQ_ACT_BPM_PERMISSION;
CREATE SEQUENCE SEQ_ACT_BPM_PERMISSION
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 21
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_ACT_BPM_ROLE
-- ----------------------------
DROP SEQUENCE SEQ_ACT_BPM_ROLE;
CREATE SEQUENCE SEQ_ACT_BPM_ROLE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_ACT_BPM_TASK_CONFIG
-- ----------------------------
DROP SEQUENCE SEQ_ACT_BPM_TASK_CONFIG;
CREATE SEQUENCE SEQ_ACT_BPM_TASK_CONFIG
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 46
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_ACT_BPM_TASK_DELEGATE
-- ----------------------------
DROP SEQUENCE SEQ_ACT_BPM_TASK_DELEGATE;
CREATE SEQUENCE SEQ_ACT_BPM_TASK_DELEGATE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_ACT_BPM_TASK_DELEGATE_CONF
-- ----------------------------
DROP SEQUENCE SEQ_ACT_BPM_TASK_DELEGATE_CONF;
CREATE SEQUENCE SEQ_ACT_BPM_TASK_DELEGATE_CONF
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_ACT_BPM_TASK_LEAVEL
-- ----------------------------
DROP SEQUENCE SEQ_ACT_BPM_TASK_LEAVEL;
CREATE SEQUENCE SEQ_ACT_BPM_TASK_LEAVEL
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_ACT_BPM_TASK_PROCESSER
-- ----------------------------
DROP SEQUENCE SEQ_ACT_BPM_TASK_PROCESSER;
CREATE SEQUENCE SEQ_ACT_BPM_TASK_PROCESSER
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 17
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_ACT_BPM_TASK_URGE_CONFIG
-- ----------------------------
DROP SEQUENCE SEQ_ACT_BPM_TASK_URGE_CONFIG;
CREATE SEQUENCE SEQ_ACT_BPM_TASK_URGE_CONFIG
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_ACT_EVT_LOG
-- ----------------------------
DROP SEQUENCE SEQ_ACT_EVT_LOG;
CREATE SEQUENCE SEQ_ACT_EVT_LOG
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_ACT_GE_BYTEARRAY
-- ----------------------------
DROP SEQUENCE SEQ_ACT_GE_BYTEARRAY;
CREATE SEQUENCE SEQ_ACT_GE_BYTEARRAY
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_ACT_GE_PROPERTY
-- ----------------------------
DROP SEQUENCE SEQ_ACT_GE_PROPERTY;
CREATE SEQUENCE SEQ_ACT_GE_PROPERTY
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_ACT_HI_ACTINST
-- ----------------------------
DROP SEQUENCE SEQ_ACT_HI_ACTINST;
CREATE SEQUENCE SEQ_ACT_HI_ACTINST
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_ACT_HI_ATTACHMENT
-- ----------------------------
DROP SEQUENCE SEQ_ACT_HI_ATTACHMENT;
CREATE SEQUENCE SEQ_ACT_HI_ATTACHMENT
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_ACT_HI_COMMENT
-- ----------------------------
DROP SEQUENCE SEQ_ACT_HI_COMMENT;
CREATE SEQUENCE SEQ_ACT_HI_COMMENT
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_ACT_HI_DETAIL
-- ----------------------------
DROP SEQUENCE SEQ_ACT_HI_DETAIL;
CREATE SEQUENCE SEQ_ACT_HI_DETAIL
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_ACT_HI_IDENTITYLINK
-- ----------------------------
DROP SEQUENCE SEQ_ACT_HI_IDENTITYLINK;
CREATE SEQUENCE SEQ_ACT_HI_IDENTITYLINK
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_ACT_HI_PROCINST
-- ----------------------------
DROP SEQUENCE SEQ_ACT_HI_PROCINST;
CREATE SEQUENCE SEQ_ACT_HI_PROCINST
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_ACT_HI_TASKINST
-- ----------------------------
DROP SEQUENCE SEQ_ACT_HI_TASKINST;
CREATE SEQUENCE SEQ_ACT_HI_TASKINST
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_ACT_HI_VARINST
-- ----------------------------
DROP SEQUENCE SEQ_ACT_HI_VARINST;
CREATE SEQUENCE SEQ_ACT_HI_VARINST
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_ACT_ID_GROUP
-- ----------------------------
DROP SEQUENCE SEQ_ACT_ID_GROUP;
CREATE SEQUENCE SEQ_ACT_ID_GROUP
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_ACT_ID_INFO
-- ----------------------------
DROP SEQUENCE SEQ_ACT_ID_INFO;
CREATE SEQUENCE SEQ_ACT_ID_INFO
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_ACT_ID_MEMBERSHIP
-- ----------------------------
DROP SEQUENCE SEQ_ACT_ID_MEMBERSHIP;
CREATE SEQUENCE SEQ_ACT_ID_MEMBERSHIP
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_ACT_ID_USER
-- ----------------------------
DROP SEQUENCE SEQ_ACT_ID_USER;
CREATE SEQUENCE SEQ_ACT_ID_USER
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_ACT_PROCDEF_INFO
-- ----------------------------
DROP SEQUENCE SEQ_ACT_PROCDEF_INFO;
CREATE SEQUENCE SEQ_ACT_PROCDEF_INFO
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_ACT_RE_DEPLOYMENT
-- ----------------------------
DROP SEQUENCE SEQ_ACT_RE_DEPLOYMENT;
CREATE SEQUENCE SEQ_ACT_RE_DEPLOYMENT
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_ACT_RE_MODEL
-- ----------------------------
DROP SEQUENCE SEQ_ACT_RE_MODEL;
CREATE SEQUENCE SEQ_ACT_RE_MODEL
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_ACT_RE_PROCDEF
-- ----------------------------
DROP SEQUENCE SEQ_ACT_RE_PROCDEF;
CREATE SEQUENCE SEQ_ACT_RE_PROCDEF
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_ACT_RU_EVENT_SUBSCR
-- ----------------------------
DROP SEQUENCE SEQ_ACT_RU_EVENT_SUBSCR;
CREATE SEQUENCE SEQ_ACT_RU_EVENT_SUBSCR
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_ACT_RU_EXECUTION
-- ----------------------------
DROP SEQUENCE SEQ_ACT_RU_EXECUTION;
CREATE SEQUENCE SEQ_ACT_RU_EXECUTION
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_ACT_RU_IDENTITYLINK
-- ----------------------------
DROP SEQUENCE SEQ_ACT_RU_IDENTITYLINK;
CREATE SEQUENCE SEQ_ACT_RU_IDENTITYLINK
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_ACT_RU_JOB
-- ----------------------------
DROP SEQUENCE SEQ_ACT_RU_JOB;
CREATE SEQUENCE SEQ_ACT_RU_JOB
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_ACT_RU_TASK
-- ----------------------------
DROP SEQUENCE SEQ_ACT_RU_TASK;
CREATE SEQUENCE SEQ_ACT_RU_TASK
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_ACT_RU_VARIABLE
-- ----------------------------
DROP SEQUENCE SEQ_ACT_RU_VARIABLE;
CREATE SEQUENCE SEQ_ACT_RU_VARIABLE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_ADMIN_AREA_INFO
-- ----------------------------
DROP SEQUENCE SEQ_ADMIN_AREA_INFO;
CREATE SEQUENCE SEQ_ADMIN_AREA_INFO
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_ATT_CLAUSE_EXPRESSION
-- ----------------------------
DROP SEQUENCE SEQ_ATT_CLAUSE_EXPRESSION;
CREATE SEQUENCE SEQ_ATT_CLAUSE_EXPRESSION
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 22
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_ATT_TAERMS_FRAMEWORK_H
-- ----------------------------
DROP SEQUENCE SEQ_ATT_TAERMS_FRAMEWORK_H;
CREATE SEQUENCE SEQ_ATT_TAERMS_FRAMEWORK_H
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 56
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_ACCESS_BASEDATA
-- ----------------------------
DROP SEQUENCE SEQ_BASE_ACCESS_BASEDATA;
CREATE SEQUENCE SEQ_BASE_ACCESS_BASEDATA
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_ADMINSTRATIVE_REGION
-- ----------------------------
DROP SEQUENCE SEQ_BASE_ADMINSTRATIVE_REGION;
CREATE SEQUENCE SEQ_BASE_ADMINSTRATIVE_REGION
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_API_CENTER_H
-- ----------------------------
DROP SEQUENCE SEQ_BASE_API_CENTER_H;
CREATE SEQUENCE SEQ_BASE_API_CENTER_H
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_API_CENTER_L
-- ----------------------------
DROP SEQUENCE SEQ_BASE_API_CENTER_L;
CREATE SEQUENCE SEQ_BASE_API_CENTER_L
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_API_MANAGEMENT
-- ----------------------------
DROP SEQUENCE SEQ_BASE_API_MANAGEMENT;
CREATE SEQUENCE SEQ_BASE_API_MANAGEMENT
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_APP_AUTH_CONTAIN
-- ----------------------------
DROP SEQUENCE SEQ_BASE_APP_AUTH_CONTAIN;
CREATE SEQUENCE SEQ_BASE_APP_AUTH_CONTAIN
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_APP_AUTH_EXCLUDE
-- ----------------------------
DROP SEQUENCE SEQ_BASE_APP_AUTH_EXCLUDE;
CREATE SEQUENCE SEQ_BASE_APP_AUTH_EXCLUDE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_APP_DEPLOYEE_INFO
-- ----------------------------
DROP SEQUENCE SEQ_BASE_APP_DEPLOYEE_INFO;
CREATE SEQUENCE SEQ_BASE_APP_DEPLOYEE_INFO
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_APP_DEPLOYEE_MENU
-- ----------------------------
DROP SEQUENCE SEQ_BASE_APP_DEPLOYEE_MENU;
CREATE SEQUENCE SEQ_BASE_APP_DEPLOYEE_MENU
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_ATTACHMENT
-- ----------------------------
DROP SEQUENCE SEQ_BASE_ATTACHMENT;
CREATE SEQUENCE SEQ_BASE_ATTACHMENT
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 4
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_BUTTON_DATA
-- ----------------------------
DROP SEQUENCE SEQ_BASE_BUTTON_DATA;
CREATE SEQUENCE SEQ_BASE_BUTTON_DATA
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 15
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_BUTTON_DATA_LANGUAGE
-- ----------------------------
DROP SEQUENCE SEQ_BASE_BUTTON_DATA_LANGUAGE;
CREATE SEQUENCE SEQ_BASE_BUTTON_DATA_LANGUAGE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_CHANNEL
-- ----------------------------
DROP SEQUENCE SEQ_BASE_CHANNEL;
CREATE SEQUENCE SEQ_BASE_CHANNEL
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_CHANNEL_PRIVILEGE
-- ----------------------------
DROP SEQUENCE SEQ_BASE_CHANNEL_PRIVILEGE;
CREATE SEQUENCE SEQ_BASE_CHANNEL_PRIVILEGE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_CMC
-- ----------------------------
DROP SEQUENCE SEQ_BASE_CMC;
CREATE SEQUENCE SEQ_BASE_CMC
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 99999999999
 START WITH 200080
 CACHE 20;

-- ----------------------------
-- Sequence structure for SEQ_BASE_CMS_ARTICLE
-- ----------------------------
DROP SEQUENCE SEQ_BASE_CMS_ARTICLE;
CREATE SEQUENCE SEQ_BASE_CMS_ARTICLE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_CMS_CAROUSEL
-- ----------------------------
DROP SEQUENCE SEQ_BASE_CMS_CAROUSEL;
CREATE SEQUENCE SEQ_BASE_CMS_CAROUSEL
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_CMS_CAROUSEL_CITY
-- ----------------------------
DROP SEQUENCE SEQ_BASE_CMS_CAROUSEL_CITY;
CREATE SEQUENCE SEQ_BASE_CMS_CAROUSEL_CITY
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_CMS_CATEGORY
-- ----------------------------
DROP SEQUENCE SEQ_BASE_CMS_CATEGORY;
CREATE SEQUENCE SEQ_BASE_CMS_CATEGORY
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_CMS_WEB_NOTICE
-- ----------------------------
DROP SEQUENCE SEQ_BASE_CMS_WEB_NOTICE;
CREATE SEQUENCE SEQ_BASE_CMS_WEB_NOTICE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_CMS_WEB_NOTICE_CITY
-- ----------------------------
DROP SEQUENCE SEQ_BASE_CMS_WEB_NOTICE_CITY;
CREATE SEQUENCE SEQ_BASE_CMS_WEB_NOTICE_CITY
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_COMMON_MESSAGE_CONFIR
-- ----------------------------
DROP SEQUENCE SEQ_BASE_COMMON_MESSAGE_CONFIR;
CREATE SEQUENCE SEQ_BASE_COMMON_MESSAGE_CONFIR
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 200336
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_COMMON_TRANSACTION_CO
-- ----------------------------
DROP SEQUENCE SEQ_BASE_COMMON_TRANSACTION_CO;
CREATE SEQUENCE SEQ_BASE_COMMON_TRANSACTION_CO
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_COMMON_TXN_CONFIRM
-- ----------------------------
DROP SEQUENCE SEQ_BASE_COMMON_TXN_CONFIRM;
CREATE SEQUENCE SEQ_BASE_COMMON_TXN_CONFIRM
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 131
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_CUST_PDA_USER_RELATIO
-- ----------------------------
DROP SEQUENCE SEQ_BASE_CUST_PDA_USER_RELATIO;
CREATE SEQUENCE SEQ_BASE_CUST_PDA_USER_RELATIO
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_DATA_EXPORT
-- ----------------------------
DROP SEQUENCE SEQ_BASE_DATA_EXPORT;
CREATE SEQUENCE SEQ_BASE_DATA_EXPORT
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_DEPARTMENT
-- ----------------------------
DROP SEQUENCE SEQ_BASE_DEPARTMENT;
CREATE SEQUENCE SEQ_BASE_DEPARTMENT
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 185
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_DEPARTMENT_CUST
-- ----------------------------
DROP SEQUENCE SEQ_BASE_DEPARTMENT_CUST;
CREATE SEQUENCE SEQ_BASE_DEPARTMENT_CUST
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_DEPARTMENT_HIERARCHY
-- ----------------------------
DROP SEQUENCE SEQ_BASE_DEPARTMENT_HIERARCHY;
CREATE SEQUENCE SEQ_BASE_DEPARTMENT_HIERARCHY
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_DEPARTMENT_LAN
-- ----------------------------
DROP SEQUENCE SEQ_BASE_DEPARTMENT_LAN;
CREATE SEQUENCE SEQ_BASE_DEPARTMENT_LAN
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_DEPLOYEE_APP_HOST_INF
-- ----------------------------
DROP SEQUENCE SEQ_BASE_DEPLOYEE_APP_HOST_INF;
CREATE SEQUENCE SEQ_BASE_DEPLOYEE_APP_HOST_INF
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_DEPLOYEE_APP_INFO
-- ----------------------------
DROP SEQUENCE SEQ_BASE_DEPLOYEE_APP_INFO;
CREATE SEQUENCE SEQ_BASE_DEPLOYEE_APP_INFO
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_DEPLOYEE_APP_MENU
-- ----------------------------
DROP SEQUENCE SEQ_BASE_DEPLOYEE_APP_MENU;
CREATE SEQUENCE SEQ_BASE_DEPLOYEE_APP_MENU
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_EXPORT_RECORD
-- ----------------------------
DROP SEQUENCE SEQ_BASE_EXPORT_RECORD;
CREATE SEQUENCE SEQ_BASE_EXPORT_RECORD
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_FAQ_HELP
-- ----------------------------
DROP SEQUENCE SEQ_BASE_FAQ_HELP;
CREATE SEQUENCE SEQ_BASE_FAQ_HELP
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_FUNCTION_COLLECTION
-- ----------------------------
DROP SEQUENCE SEQ_BASE_FUNCTION_COLLECTION;
CREATE SEQUENCE SEQ_BASE_FUNCTION_COLLECTION
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_FUNCTION_COLLECTION_L
-- ----------------------------
DROP SEQUENCE SEQ_BASE_FUNCTION_COLLECTION_L;
CREATE SEQUENCE SEQ_BASE_FUNCTION_COLLECTION_L
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_FUNCTION_COLLECTION_U
-- ----------------------------
DROP SEQUENCE SEQ_BASE_FUNCTION_COLLECTION_U;
CREATE SEQUENCE SEQ_BASE_FUNCTION_COLLECTION_U
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_INV_STORE_CONTACT_T
-- ----------------------------
DROP SEQUENCE SEQ_BASE_INV_STORE_CONTACT_T;
CREATE SEQUENCE SEQ_BASE_INV_STORE_CONTACT_T
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_INV_STORE_T
-- ----------------------------
DROP SEQUENCE SEQ_BASE_INV_STORE_T;
CREATE SEQUENCE SEQ_BASE_INV_STORE_T
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_ISSUE_FEEDBACK
-- ----------------------------
DROP SEQUENCE SEQ_BASE_ISSUE_FEEDBACK;
CREATE SEQUENCE SEQ_BASE_ISSUE_FEEDBACK
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_JOB
-- ----------------------------
DROP SEQUENCE SEQ_BASE_JOB;
CREATE SEQUENCE SEQ_BASE_JOB
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 103820
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_JOB_LAN
-- ----------------------------
DROP SEQUENCE SEQ_BASE_JOB_LAN;
CREATE SEQUENCE SEQ_BASE_JOB_LAN
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_LOGIN_LOG
-- ----------------------------
DROP SEQUENCE SEQ_BASE_LOGIN_LOG;
CREATE SEQUENCE SEQ_BASE_LOGIN_LOG
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1182
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_LOOKUP_TYPES
-- ----------------------------
DROP SEQUENCE SEQ_BASE_LOOKUP_TYPES;
CREATE SEQUENCE SEQ_BASE_LOOKUP_TYPES
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1410354
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_LOOKUP_TYPES_LAN
-- ----------------------------
DROP SEQUENCE SEQ_BASE_LOOKUP_TYPES_LAN;
CREATE SEQUENCE SEQ_BASE_LOOKUP_TYPES_LAN
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_LOOKUP_VALUES
-- ----------------------------
DROP SEQUENCE SEQ_BASE_LOOKUP_VALUES;
CREATE SEQUENCE SEQ_BASE_LOOKUP_VALUES
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 2191641
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_LOOKUP_VALUES_LAN
-- ----------------------------
DROP SEQUENCE SEQ_BASE_LOOKUP_VALUES_LAN;
CREATE SEQUENCE SEQ_BASE_LOOKUP_VALUES_LAN
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_MANUAL_SUPPLEMENT
-- ----------------------------
DROP SEQUENCE SEQ_BASE_MANUAL_SUPPLEMENT;
CREATE SEQUENCE SEQ_BASE_MANUAL_SUPPLEMENT
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 33
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_MENU
-- ----------------------------
DROP SEQUENCE SEQ_BASE_MENU;
CREATE SEQUENCE SEQ_BASE_MENU
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 35
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_MENU_LANGUAGE
-- ----------------------------
DROP SEQUENCE SEQ_BASE_MENU_LANGUAGE;
CREATE SEQUENCE SEQ_BASE_MENU_LANGUAGE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_MESSAGE_BU
-- ----------------------------
DROP SEQUENCE SEQ_BASE_MESSAGE_BU;
CREATE SEQUENCE SEQ_BASE_MESSAGE_BU
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_MESSAGE_CONTENT
-- ----------------------------
DROP SEQUENCE SEQ_BASE_MESSAGE_CONTENT;
CREATE SEQUENCE SEQ_BASE_MESSAGE_CONTENT
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_MESSAGE_DEPARTMENT
-- ----------------------------
DROP SEQUENCE SEQ_BASE_MESSAGE_DEPARTMENT;
CREATE SEQUENCE SEQ_BASE_MESSAGE_DEPARTMENT
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_MESSAGE_INSTATION
-- ----------------------------
DROP SEQUENCE SEQ_BASE_MESSAGE_INSTATION;
CREATE SEQUENCE SEQ_BASE_MESSAGE_INSTATION
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_MESSAGE_PERSON
-- ----------------------------
DROP SEQUENCE SEQ_BASE_MESSAGE_PERSON;
CREATE SEQUENCE SEQ_BASE_MESSAGE_PERSON
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_ORG_RESPONSIBILITY
-- ----------------------------
DROP SEQUENCE SEQ_BASE_ORG_RESPONSIBILITY;
CREATE SEQUENCE SEQ_BASE_ORG_RESPONSIBILITY
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_ORGANIZATION
-- ----------------------------
DROP SEQUENCE SEQ_BASE_ORGANIZATION;
CREATE SEQUENCE SEQ_BASE_ORGANIZATION
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 235
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_ORGANIZATION_LAN
-- ----------------------------
DROP SEQUENCE SEQ_BASE_ORGANIZATION_LAN;
CREATE SEQUENCE SEQ_BASE_ORGANIZATION_LAN
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_PDA_INV_CFG
-- ----------------------------
DROP SEQUENCE SEQ_BASE_PDA_INV_CFG;
CREATE SEQUENCE SEQ_BASE_PDA_INV_CFG
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_PDA_ROLE_CFG
-- ----------------------------
DROP SEQUENCE SEQ_BASE_PDA_ROLE_CFG;
CREATE SEQUENCE SEQ_BASE_PDA_ROLE_CFG
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_PERSON
-- ----------------------------
DROP SEQUENCE SEQ_BASE_PERSON;
CREATE SEQUENCE SEQ_BASE_PERSON
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 117472
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_PERSON_ASSIGN
-- ----------------------------
DROP SEQUENCE SEQ_BASE_PERSON_ASSIGN;
CREATE SEQUENCE SEQ_BASE_PERSON_ASSIGN
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 509280
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_PERSON_CUST
-- ----------------------------
DROP SEQUENCE SEQ_BASE_PERSON_CUST;
CREATE SEQUENCE SEQ_BASE_PERSON_CUST
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_PERSON_LAN
-- ----------------------------
DROP SEQUENCE SEQ_BASE_PERSON_LAN;
CREATE SEQUENCE SEQ_BASE_PERSON_LAN
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_PERSON_LEVEL
-- ----------------------------
DROP SEQUENCE SEQ_BASE_PERSON_LEVEL;
CREATE SEQUENCE SEQ_BASE_PERSON_LEVEL
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_PERSON_ORGANIZATION
-- ----------------------------
DROP SEQUENCE SEQ_BASE_PERSON_ORGANIZATION;
CREATE SEQUENCE SEQ_BASE_PERSON_ORGANIZATION
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_POSITION
-- ----------------------------
DROP SEQUENCE SEQ_BASE_POSITION;
CREATE SEQUENCE SEQ_BASE_POSITION
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 3035
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_POSITION_LAN
-- ----------------------------
DROP SEQUENCE SEQ_BASE_POSITION_LAN;
CREATE SEQUENCE SEQ_BASE_POSITION_LAN
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_PRIVILEGE_DETAIL
-- ----------------------------
DROP SEQUENCE SEQ_BASE_PRIVILEGE_DETAIL;
CREATE SEQUENCE SEQ_BASE_PRIVILEGE_DETAIL
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_PRIVILEGE_RECORD
-- ----------------------------
DROP SEQUENCE SEQ_BASE_PRIVILEGE_RECORD;
CREATE SEQUENCE SEQ_BASE_PRIVILEGE_RECORD
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_PRODUCT_INFO
-- ----------------------------
DROP SEQUENCE SEQ_BASE_PRODUCT_INFO;
CREATE SEQUENCE SEQ_BASE_PRODUCT_INFO
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_PRODUCT_INV
-- ----------------------------
DROP SEQUENCE SEQ_BASE_PRODUCT_INV;
CREATE SEQUENCE SEQ_BASE_PRODUCT_INV
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_PROFILE
-- ----------------------------
DROP SEQUENCE SEQ_BASE_PROFILE;
CREATE SEQUENCE SEQ_BASE_PROFILE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_PROFILE_LAN
-- ----------------------------
DROP SEQUENCE SEQ_BASE_PROFILE_LAN;
CREATE SEQUENCE SEQ_BASE_PROFILE_LAN
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_PROFILE_VALUE
-- ----------------------------
DROP SEQUENCE SEQ_BASE_PROFILE_VALUE;
CREATE SEQUENCE SEQ_BASE_PROFILE_VALUE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 2005
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_PROFILE_VALUE_LAN
-- ----------------------------
DROP SEQUENCE SEQ_BASE_PROFILE_VALUE_LAN;
CREATE SEQUENCE SEQ_BASE_PROFILE_VALUE_LAN
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_PUBLISH_APP_INFO
-- ----------------------------
DROP SEQUENCE SEQ_BASE_PUBLISH_APP_INFO;
CREATE SEQUENCE SEQ_BASE_PUBLISH_APP_INFO
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_REPORT_CHARTS_TYPE
-- ----------------------------
DROP SEQUENCE SEQ_BASE_REPORT_CHARTS_TYPE;
CREATE SEQUENCE SEQ_BASE_REPORT_CHARTS_TYPE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_REPORT_CHARTS_TYPE_LA
-- ----------------------------
DROP SEQUENCE SEQ_BASE_REPORT_CHARTS_TYPE_LA;
CREATE SEQUENCE SEQ_BASE_REPORT_CHARTS_TYPE_LA
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_REPORT_DATASOURCE
-- ----------------------------
DROP SEQUENCE SEQ_BASE_REPORT_DATASOURCE;
CREATE SEQUENCE SEQ_BASE_REPORT_DATASOURCE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_REPORT_DATASOURCE_LAN
-- ----------------------------
DROP SEQUENCE SEQ_BASE_REPORT_DATASOURCE_LAN;
CREATE SEQUENCE SEQ_BASE_REPORT_DATASOURCE_LAN
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_REPORT_GROUP
-- ----------------------------
DROP SEQUENCE SEQ_BASE_REPORT_GROUP;
CREATE SEQUENCE SEQ_BASE_REPORT_GROUP
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_REPORT_GROUP_HEADER
-- ----------------------------
DROP SEQUENCE SEQ_BASE_REPORT_GROUP_HEADER;
CREATE SEQUENCE SEQ_BASE_REPORT_GROUP_HEADER
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_REPORT_HEADER
-- ----------------------------
DROP SEQUENCE SEQ_BASE_REPORT_HEADER;
CREATE SEQUENCE SEQ_BASE_REPORT_HEADER
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 2
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_REPORT_LINE
-- ----------------------------
DROP SEQUENCE SEQ_BASE_REPORT_LINE;
CREATE SEQUENCE SEQ_BASE_REPORT_LINE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 7
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_REQUEST_LOG
-- ----------------------------
DROP SEQUENCE SEQ_BASE_REQUEST_LOG;
CREATE SEQUENCE SEQ_BASE_REQUEST_LOG
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_RESOURCE
-- ----------------------------
DROP SEQUENCE SEQ_BASE_RESOURCE;
CREATE SEQUENCE SEQ_BASE_RESOURCE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 111
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_RESOURCE_LAN
-- ----------------------------
DROP SEQUENCE SEQ_BASE_RESOURCE_LAN;
CREATE SEQUENCE SEQ_BASE_RESOURCE_LAN
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_RESPONSIBILITY
-- ----------------------------
DROP SEQUENCE SEQ_BASE_RESPONSIBILITY;
CREATE SEQUENCE SEQ_BASE_RESPONSIBILITY
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_RESPONSIBILITY_LAN
-- ----------------------------
DROP SEQUENCE SEQ_BASE_RESPONSIBILITY_LAN;
CREATE SEQUENCE SEQ_BASE_RESPONSIBILITY_LAN
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_RESPONSIBILITY_ROLE
-- ----------------------------
DROP SEQUENCE SEQ_BASE_RESPONSIBILITY_ROLE;
CREATE SEQUENCE SEQ_BASE_RESPONSIBILITY_ROLE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 3
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_RESPONSIBILITY_ROLE_L
-- ----------------------------
DROP SEQUENCE SEQ_BASE_RESPONSIBILITY_ROLE_L;
CREATE SEQUENCE SEQ_BASE_RESPONSIBILITY_ROLE_L
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_ROLE
-- ----------------------------
DROP SEQUENCE SEQ_BASE_ROLE;
CREATE SEQUENCE SEQ_BASE_ROLE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_ROLE_LANGUAGE
-- ----------------------------
DROP SEQUENCE SEQ_BASE_ROLE_LANGUAGE;
CREATE SEQUENCE SEQ_BASE_ROLE_LANGUAGE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_ROLE_MENU
-- ----------------------------
DROP SEQUENCE SEQ_BASE_ROLE_MENU;
CREATE SEQUENCE SEQ_BASE_ROLE_MENU
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 7188
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_ROLE_RESOURCE
-- ----------------------------
DROP SEQUENCE SEQ_BASE_ROLE_RESOURCE;
CREATE SEQUENCE SEQ_BASE_ROLE_RESOURCE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 17304
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_SYSTEM_SSO
-- ----------------------------
DROP SEQUENCE SEQ_BASE_SYSTEM_SSO;
CREATE SEQUENCE SEQ_BASE_SYSTEM_SSO
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_TASK_COLLECTION
-- ----------------------------
DROP SEQUENCE SEQ_BASE_TASK_COLLECTION;
CREATE SEQUENCE SEQ_BASE_TASK_COLLECTION
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_USER_RESPONSIBILITY
-- ----------------------------
DROP SEQUENCE SEQ_BASE_USER_RESPONSIBILITY;
CREATE SEQUENCE SEQ_BASE_USER_RESPONSIBILITY
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 12
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_USERS
-- ----------------------------
DROP SEQUENCE SEQ_BASE_USERS;
CREATE SEQUENCE SEQ_BASE_USERS
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 53
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_USERS_LANGUAGE
-- ----------------------------
DROP SEQUENCE SEQ_BASE_USERS_LANGUAGE;
CREATE SEQUENCE SEQ_BASE_USERS_LANGUAGE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_WAREHOUSE_MAPPING
-- ----------------------------
DROP SEQUENCE SEQ_BASE_WAREHOUSE_MAPPING;
CREATE SEQUENCE SEQ_BASE_WAREHOUSE_MAPPING
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_BASE_WECHAT_MNG
-- ----------------------------
DROP SEQUENCE SEQ_BASE_WECHAT_MNG;
CREATE SEQUENCE SEQ_BASE_WECHAT_MNG
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_CUX_CDM_ACCESS_BASEDATA
-- ----------------------------
DROP SEQUENCE SEQ_CUX_CDM_ACCESS_BASEDATA;
CREATE SEQUENCE SEQ_CUX_CDM_ACCESS_BASEDATA
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_DEMO
-- ----------------------------
DROP SEQUENCE SEQ_DEMO;
CREATE SEQUENCE SEQ_DEMO
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_DOMAIN_WX
-- ----------------------------
DROP SEQUENCE SEQ_DOMAIN_WX;
CREATE SEQUENCE SEQ_DOMAIN_WX
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_EW_CONFIGURATION_HEAD
-- ----------------------------
DROP SEQUENCE SEQ_EW_CONFIGURATION_HEAD;
CREATE SEQUENCE SEQ_EW_CONFIGURATION_HEAD
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_EW_CONFIGURATION_LINE
-- ----------------------------
DROP SEQUENCE SEQ_EW_CONFIGURATION_LINE;
CREATE SEQUENCE SEQ_EW_CONFIGURATION_LINE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_EW_CONFIGURATION_MAN
-- ----------------------------
DROP SEQUENCE SEQ_EW_CONFIGURATION_MAN;
CREATE SEQUENCE SEQ_EW_CONFIGURATION_MAN
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_EW_HANDLE
-- ----------------------------
DROP SEQUENCE SEQ_EW_HANDLE;
CREATE SEQUENCE SEQ_EW_HANDLE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_MSG_CFG
-- ----------------------------
DROP SEQUENCE SEQ_MSG_CFG;
CREATE SEQUENCE SEQ_MSG_CFG
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_MSG_HISTORY
-- ----------------------------
DROP SEQUENCE SEQ_MSG_HISTORY;
CREATE SEQUENCE SEQ_MSG_HISTORY
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_MSG_INSTANCE
-- ----------------------------
DROP SEQUENCE SEQ_MSG_INSTANCE;
CREATE SEQUENCE SEQ_MSG_INSTANCE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_MSG_LOG
-- ----------------------------
DROP SEQUENCE SEQ_MSG_LOG;
CREATE SEQUENCE SEQ_MSG_LOG
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_MSG_RECEIVE_SQL
-- ----------------------------
DROP SEQUENCE SEQ_MSG_RECEIVE_SQL;
CREATE SEQUENCE SEQ_MSG_RECEIVE_SQL
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_MSG_SOURCE_CFG
-- ----------------------------
DROP SEQUENCE SEQ_MSG_SOURCE_CFG;
CREATE SEQUENCE SEQ_MSG_SOURCE_CFG
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_MSG_TD
-- ----------------------------
DROP SEQUENCE SEQ_MSG_TD;
CREATE SEQUENCE SEQ_MSG_TD
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_MSG_TEMPLE_CFG
-- ----------------------------
DROP SEQUENCE SEQ_MSG_TEMPLE_CFG;
CREATE SEQUENCE SEQ_MSG_TEMPLE_CFG
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_MSG_USER
-- ----------------------------
DROP SEQUENCE SEQ_MSG_USER;
CREATE SEQUENCE SEQ_MSG_USER
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_NEWBREED_EDIT_ID
-- ----------------------------
DROP SEQUENCE SEQ_NEWBREED_EDIT_ID;
CREATE SEQUENCE SEQ_NEWBREED_EDIT_ID
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 99999999999999999999999
 START WITH 21
 CACHE 20;

-- ----------------------------
-- Sequence structure for SEQ_PAGE_MODEL_GROUP_DETAIL
-- ----------------------------
DROP SEQUENCE SEQ_PAGE_MODEL_GROUP_DETAIL;
CREATE SEQUENCE SEQ_PAGE_MODEL_GROUP_DETAIL
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_PAGE_MODEL_GROUP_INFO
-- ----------------------------
DROP SEQUENCE SEQ_PAGE_MODEL_GROUP_INFO;
CREATE SEQUENCE SEQ_PAGE_MODEL_GROUP_INFO
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_PAGE_MODEL_INFO
-- ----------------------------
DROP SEQUENCE SEQ_PAGE_MODEL_INFO;
CREATE SEQUENCE SEQ_PAGE_MODEL_INFO
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_PER_ALL_ASSIGNMENTS_F
-- ----------------------------
DROP SEQUENCE SEQ_PER_ALL_ASSIGNMENTS_F;
CREATE SEQUENCE SEQ_PER_ALL_ASSIGNMENTS_F
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_PER_ALL_PEOPLE_F
-- ----------------------------
DROP SEQUENCE SEQ_PER_ALL_PEOPLE_F;
CREATE SEQUENCE SEQ_PER_ALL_PEOPLE_F
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_PUB_USERS_ORGANIZATION
-- ----------------------------
DROP SEQUENCE SEQ_PUB_USERS_ORGANIZATION;
CREATE SEQUENCE SEQ_PUB_USERS_ORGANIZATION
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_QRTZ_BLOB_TRIGGERS
-- ----------------------------
DROP SEQUENCE SEQ_QRTZ_BLOB_TRIGGERS;
CREATE SEQUENCE SEQ_QRTZ_BLOB_TRIGGERS
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_QRTZ_CALENDARS
-- ----------------------------
DROP SEQUENCE SEQ_QRTZ_CALENDARS;
CREATE SEQUENCE SEQ_QRTZ_CALENDARS
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_QRTZ_CRON_TRIGGERS
-- ----------------------------
DROP SEQUENCE SEQ_QRTZ_CRON_TRIGGERS;
CREATE SEQUENCE SEQ_QRTZ_CRON_TRIGGERS
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_QRTZ_FIRED_TRIGGERS
-- ----------------------------
DROP SEQUENCE SEQ_QRTZ_FIRED_TRIGGERS;
CREATE SEQUENCE SEQ_QRTZ_FIRED_TRIGGERS
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_QRTZ_JOB_DETAILS
-- ----------------------------
DROP SEQUENCE SEQ_QRTZ_JOB_DETAILS;
CREATE SEQUENCE SEQ_QRTZ_JOB_DETAILS
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_QRTZ_LOCKS
-- ----------------------------
DROP SEQUENCE SEQ_QRTZ_LOCKS;
CREATE SEQUENCE SEQ_QRTZ_LOCKS
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_QRTZ_PAUSED_TRIGGER_GRPS
-- ----------------------------
DROP SEQUENCE SEQ_QRTZ_PAUSED_TRIGGER_GRPS;
CREATE SEQUENCE SEQ_QRTZ_PAUSED_TRIGGER_GRPS
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_QRTZ_SCHEDULER_STATE
-- ----------------------------
DROP SEQUENCE SEQ_QRTZ_SCHEDULER_STATE;
CREATE SEQUENCE SEQ_QRTZ_SCHEDULER_STATE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_QRTZ_SIMPLE_TRIGGERS
-- ----------------------------
DROP SEQUENCE SEQ_QRTZ_SIMPLE_TRIGGERS;
CREATE SEQUENCE SEQ_QRTZ_SIMPLE_TRIGGERS
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_QRTZ_SIMPROP_TRIGGERS
-- ----------------------------
DROP SEQUENCE SEQ_QRTZ_SIMPROP_TRIGGERS;
CREATE SEQUENCE SEQ_QRTZ_SIMPROP_TRIGGERS
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_QRTZ_TRIGGERS
-- ----------------------------
DROP SEQUENCE SEQ_QRTZ_TRIGGERS;
CREATE SEQUENCE SEQ_QRTZ_TRIGGERS
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_RULE_BUSINESS_LINE
-- ----------------------------
DROP SEQUENCE SEQ_RULE_BUSINESS_LINE;
CREATE SEQUENCE SEQ_RULE_BUSINESS_LINE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_RULE_DIM
-- ----------------------------
DROP SEQUENCE SEQ_RULE_DIM;
CREATE SEQUENCE SEQ_RULE_DIM
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_RULE_EXPRESSION
-- ----------------------------
DROP SEQUENCE SEQ_RULE_EXPRESSION;
CREATE SEQUENCE SEQ_RULE_EXPRESSION
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_RULE_EXPRESSIONDIM
-- ----------------------------
DROP SEQUENCE SEQ_RULE_EXPRESSIONDIM;
CREATE SEQUENCE SEQ_RULE_EXPRESSIONDIM
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_RULE_MAPPING_BUSINESS
-- ----------------------------
DROP SEQUENCE SEQ_RULE_MAPPING_BUSINESS;
CREATE SEQUENCE SEQ_RULE_MAPPING_BUSINESS
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_SAAF_FILE_UPLOAD
-- ----------------------------
DROP SEQUENCE SEQ_SAAF_FILE_UPLOAD;
CREATE SEQUENCE SEQ_SAAF_FILE_UPLOAD
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_SAAF_WEBSERVICE_INFO
-- ----------------------------
DROP SEQUENCE SEQ_SAAF_WEBSERVICE_INFO;
CREATE SEQUENCE SEQ_SAAF_WEBSERVICE_INFO
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_SAAF_WEBSERVICE_PARAM_INFO
-- ----------------------------
DROP SEQUENCE SEQ_SAAF_WEBSERVICE_PARAM_INFO;
CREATE SEQUENCE SEQ_SAAF_WEBSERVICE_PARAM_INFO
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_SCHEDULE_JOB_ACCESS_ORGS
-- ----------------------------
DROP SEQUENCE SEQ_SCHEDULE_JOB_ACCESS_ORGS;
CREATE SEQUENCE SEQ_SCHEDULE_JOB_ACCESS_ORGS
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_SCHEDULE_JOB_PARAMETERS
-- ----------------------------
DROP SEQUENCE SEQ_SCHEDULE_JOB_PARAMETERS;
CREATE SEQUENCE SEQ_SCHEDULE_JOB_PARAMETERS
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_SCHEDULE_JOB_RESP
-- ----------------------------
DROP SEQUENCE SEQ_SCHEDULE_JOB_RESP;
CREATE SEQUENCE SEQ_SCHEDULE_JOB_RESP
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_SCHEDULE_JOBS
-- ----------------------------
DROP SEQUENCE SEQ_SCHEDULE_JOBS;
CREATE SEQUENCE SEQ_SCHEDULE_JOBS
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 2
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_SCHEDULE_LOG
-- ----------------------------
DROP SEQUENCE SEQ_SCHEDULE_LOG;
CREATE SEQUENCE SEQ_SCHEDULE_LOG
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_SCHEDULE_SCHEDULES
-- ----------------------------
DROP SEQUENCE SEQ_SCHEDULE_SCHEDULES;
CREATE SEQUENCE SEQ_SCHEDULE_SCHEDULES
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 15
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_SCHEDULE_SCHEDULES_ERROR
-- ----------------------------
DROP SEQUENCE SEQ_SCHEDULE_SCHEDULES_ERROR;
CREATE SEQUENCE SEQ_SCHEDULE_SCHEDULES_ERROR
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TA_PROPOSAL_TERMS_HEADER
-- ----------------------------
DROP SEQUENCE SEQ_TA_PROPOSAL_TERMS_HEADER;
CREATE SEQUENCE SEQ_TA_PROPOSAL_TERMS_HEADER
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_ACTUAL_COST_RULE
-- ----------------------------
DROP SEQUENCE SEQ_TTA_ACTUAL_COST_RULE;
CREATE SEQUENCE SEQ_TTA_ACTUAL_COST_RULE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 14
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_BASE_RULE
-- ----------------------------
DROP SEQUENCE SEQ_TTA_BASE_RULE;
CREATE SEQUENCE SEQ_TTA_BASE_RULE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_BRAND
-- ----------------------------
DROP SEQUENCE SEQ_TTA_BRAND;
CREATE SEQUENCE SEQ_TTA_BRAND
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 CACHE 20;

-- ----------------------------
-- Sequence structure for SEQ_TTA_BRANDPLN_HEADER
-- ----------------------------
DROP SEQUENCE SEQ_TTA_BRANDPLN_HEADER;
CREATE SEQUENCE SEQ_TTA_BRANDPLN_HEADER
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 121
 CACHE 20;

-- ----------------------------
-- Sequence structure for SEQ_TTA_BRANDPLN_LINE
-- ----------------------------
DROP SEQUENCE SEQ_TTA_BRANDPLN_LINE;
CREATE SEQUENCE SEQ_TTA_BRANDPLN_LINE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 9
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_CLAUSE_TREE
-- ----------------------------
DROP SEQUENCE SEQ_TTA_CLAUSE_TREE;
CREATE SEQUENCE SEQ_TTA_CLAUSE_TREE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 2994
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_CLAUSE_TREE_H
-- ----------------------------
DROP SEQUENCE SEQ_TTA_CLAUSE_TREE_H;
CREATE SEQUENCE SEQ_TTA_CLAUSE_TREE_H
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 8704
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_COLLECT_TYPE_LINE
-- ----------------------------
DROP SEQUENCE SEQ_TTA_COLLECT_TYPE_LINE;
CREATE SEQUENCE SEQ_TTA_COLLECT_TYPE_LINE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 999999999999999999999999
 START WITH 3881
 CACHE 20;

-- ----------------------------
-- Sequence structure for SEQ_TTA_COLLECT_TYPE_LINE_H
-- ----------------------------
DROP SEQUENCE SEQ_TTA_COLLECT_TYPE_LINE_H;
CREATE SEQUENCE SEQ_TTA_COLLECT_TYPE_LINE_H
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999
 START WITH 13781
 CACHE 20;

-- ----------------------------
-- Sequence structure for SEQ_TTA_CONTRACT_DETAIL
-- ----------------------------
DROP SEQUENCE SEQ_TTA_CONTRACT_DETAIL;
CREATE SEQUENCE SEQ_TTA_CONTRACT_DETAIL
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 CACHE 20;

-- ----------------------------
-- Sequence structure for SEQ_TTA_CONTRACT_HEADER
-- ----------------------------
DROP SEQUENCE SEQ_TTA_CONTRACT_HEADER;
CREATE SEQUENCE SEQ_TTA_CONTRACT_HEADER
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 101
 CACHE 20;

-- ----------------------------
-- Sequence structure for SEQ_TTA_CONTRACT_LINE
-- ----------------------------
DROP SEQUENCE SEQ_TTA_CONTRACT_LINE;
CREATE SEQUENCE SEQ_TTA_CONTRACT_LINE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1881
 CACHE 20;

-- ----------------------------
-- Sequence structure for SEQ_TTA_CONTRACT_LINE_H
-- ----------------------------
DROP SEQUENCE SEQ_TTA_CONTRACT_LINE_H;
CREATE SEQUENCE SEQ_TTA_CONTRACT_LINE_H
 INCREMENT BY 1
 MINVALUE 0
 MAXVALUE 99999999999999999999999999
 START WITH 261
 CACHE 20;

-- ----------------------------
-- Sequence structure for SEQ_TTA_DEPT_FEE
-- ----------------------------
DROP SEQUENCE SEQ_TTA_DEPT_FEE;
CREATE SEQUENCE SEQ_TTA_DEPT_FEE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 601
 CACHE 20;

-- ----------------------------
-- Sequence structure for SEQ_TTA_DEPT_FEE_HEADER
-- ----------------------------
DROP SEQUENCE SEQ_TTA_DEPT_FEE_HEADER;
CREATE SEQUENCE SEQ_TTA_DEPT_FEE_HEADER
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 161
 CACHE 20;

-- ----------------------------
-- Sequence structure for SEQ_TTA_DEPT_FEE_LINE
-- ----------------------------
DROP SEQUENCE SEQ_TTA_DEPT_FEE_LINE;
CREATE SEQUENCE SEQ_TTA_DEPT_FEE_LINE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 21
 CACHE 20;

-- ----------------------------
-- Sequence structure for SEQ_TTA_DEPT_IN
-- ----------------------------
DROP SEQUENCE SEQ_TTA_DEPT_IN;
CREATE SEQUENCE SEQ_TTA_DEPT_IN
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 30
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_FEE_DEPT_DETAIL
-- ----------------------------
DROP SEQUENCE SEQ_TTA_FEE_DEPT_DETAIL;
CREATE SEQUENCE SEQ_TTA_FEE_DEPT_DETAIL
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 125
 CACHE 20;

-- ----------------------------
-- Sequence structure for SEQ_TTA_FEE_DEPT_EADER
-- ----------------------------
DROP SEQUENCE SEQ_TTA_FEE_DEPT_EADER;
CREATE SEQUENCE SEQ_TTA_FEE_DEPT_EADER
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_FEE_DEPT_HEADER
-- ----------------------------
DROP SEQUENCE SEQ_TTA_FEE_DEPT_HEADER;
CREATE SEQUENCE SEQ_TTA_FEE_DEPT_HEADER
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 80
 CACHE 20;

-- ----------------------------
-- Sequence structure for SEQ_TTA_FEE_DEPT_LINE
-- ----------------------------
DROP SEQUENCE SEQ_TTA_FEE_DEPT_LINE;
CREATE SEQUENCE SEQ_TTA_FEE_DEPT_LINE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 220
 CACHE 20;

-- ----------------------------
-- Sequence structure for SEQ_TTA_GROUP
-- ----------------------------
DROP SEQUENCE SEQ_TTA_GROUP;
CREATE SEQUENCE SEQ_TTA_GROUP
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 CACHE 20;


-- ----------------------------
-- Sequence structure for SEQ_TTA_MARKET_IN
-- ----------------------------
DROP SEQUENCE SEQ_TTA_MARKET_IN;
CREATE SEQUENCE SEQ_TTA_MARKET_IN
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 36
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_NEW_FEE
-- ----------------------------
DROP SEQUENCE SEQ_TTA_NEW_FEE;
CREATE SEQUENCE SEQ_TTA_NEW_FEE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 CACHE 20;

-- ----------------------------
-- Sequence structure for SEQ_TTA_NEWBREED_EXTEND_HEADER
-- ----------------------------
DROP SEQUENCE SEQ_TTA_NEWBREED_EXTEND_HEADER;
CREATE SEQUENCE SEQ_TTA_NEWBREED_EXTEND_HEADER
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 23
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_NEWBREED_EXTEND_LINE
-- ----------------------------
DROP SEQUENCE SEQ_TTA_NEWBREED_EXTEND_LINE;
CREATE SEQUENCE SEQ_TTA_NEWBREED_EXTEND_LINE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 89
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_NEWBREED_SET_HEADER
-- ----------------------------
DROP SEQUENCE SEQ_TTA_NEWBREED_SET_HEADER;
CREATE SEQUENCE SEQ_TTA_NEWBREED_SET_HEADER
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 999999999999999999999999
 START WITH 81
 CACHE 20;

-- ----------------------------
-- Sequence structure for SEQ_TTA_NEWBREED_SET_LINE
-- ----------------------------
DROP SEQUENCE SEQ_TTA_NEWBREED_SET_LINE;
CREATE SEQUENCE SEQ_TTA_NEWBREED_SET_LINE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 99999999999999999
 START WITH 101
 CACHE 20;

-- ----------------------------
-- Sequence structure for SEQ_TTA_OI_BILL_LINE
-- ----------------------------
DROP SEQUENCE SEQ_TTA_OI_BILL_LINE;
CREATE SEQUENCE SEQ_TTA_OI_BILL_LINE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 99999999999999999999999999
 START WITH 21
 CACHE 20;

-- ----------------------------
-- Sequence structure for SEQ_TTA_ORG_IN
-- ----------------------------
DROP SEQUENCE SEQ_TTA_ORG_IN;
CREATE SEQUENCE SEQ_TTA_ORG_IN
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 37416
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_OSD_MONTHLY_CHECKING
-- ----------------------------
DROP SEQUENCE SEQ_TTA_OSD_MONTHLY_CHECKING;
CREATE SEQUENCE SEQ_TTA_OSD_MONTHLY_CHECKING
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999
 START WITH 1
 NOCACHE 
 CYCLE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_OSD_SALES_SITE
-- ----------------------------
DROP SEQUENCE SEQ_TTA_OSD_SALES_SITE;
CREATE SEQUENCE SEQ_TTA_OSD_SALES_SITE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999
 START WITH 1
 NOCACHE 
 CYCLE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_PERSON_IN
-- ----------------------------
DROP SEQUENCE SEQ_TTA_PERSON_IN;
CREATE SEQUENCE SEQ_TTA_PERSON_IN
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 98064
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_PRINT_RECORD
-- ----------------------------
DROP SEQUENCE SEQ_TTA_PRINT_RECORD;
CREATE SEQUENCE SEQ_TTA_PRINT_RECORD
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 4
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_PROMOTION_GUIDELINE
-- ----------------------------
DROP SEQUENCE SEQ_TTA_PROMOTION_GUIDELINE;
CREATE SEQUENCE SEQ_TTA_PROMOTION_GUIDELINE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999
 START WITH 5
 NOCACHE 
 CYCLE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_PROPOSAL_HEADER
-- ----------------------------
DROP SEQUENCE SEQ_TTA_PROPOSAL_HEADER;
CREATE SEQUENCE SEQ_TTA_PROPOSAL_HEADER
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 101
 CACHE 20;

-- ----------------------------
-- Sequence structure for SEQ_TTA_PROPOSAL_TERMS_HEADER
-- ----------------------------
DROP SEQUENCE SEQ_TTA_PROPOSAL_TERMS_HEADER;
CREATE SEQUENCE SEQ_TTA_PROPOSAL_TERMS_HEADER
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 31
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_PROPOSAL_TERMS_LINE
-- ----------------------------
DROP SEQUENCE SEQ_TTA_PROPOSAL_TERMS_LINE;
CREATE SEQUENCE SEQ_TTA_PROPOSAL_TERMS_LINE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 3981
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_PURCHASE
-- ----------------------------
DROP SEQUENCE SEQ_TTA_PURCHASE;
CREATE SEQUENCE SEQ_TTA_PURCHASE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_QUESTIONNAIRE_CHOICE
-- ----------------------------
DROP SEQUENCE SEQ_TTA_QUESTIONNAIRE_CHOICE;
CREATE SEQUENCE SEQ_TTA_QUESTIONNAIRE_CHOICE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 96
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_QUESTIONNAIRE_LINE
-- ----------------------------
DROP SEQUENCE SEQ_TTA_QUESTIONNAIRE_LINE;
CREATE SEQUENCE SEQ_TTA_QUESTIONNAIRE_LINE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 22
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_QUESTIONNAIRE_PUBLISH
-- ----------------------------
DROP SEQUENCE SEQ_TTA_QUESTIONNAIRE_PUBLISH;
CREATE SEQUENCE SEQ_TTA_QUESTIONNAIRE_PUBLISH
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_QUESTIONNAIRE_RESULT
-- ----------------------------
DROP SEQUENCE SEQ_TTA_QUESTIONNAIRE_RESULT;
CREATE SEQUENCE SEQ_TTA_QUESTIONNAIRE_RESULT
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 112
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_REL_SUPPLIER
-- ----------------------------
DROP SEQUENCE SEQ_TTA_REL_SUPPLIER;
CREATE SEQUENCE SEQ_TTA_REL_SUPPLIER
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 13
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_REL_SUPPLIER_BRAND
-- ----------------------------
DROP SEQUENCE SEQ_TTA_REL_SUPPLIER_BRAND;
CREATE SEQUENCE SEQ_TTA_REL_SUPPLIER_BRAND
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 8
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_REL_SUPPLIER_DEPT
-- ----------------------------
DROP SEQUENCE SEQ_TTA_REL_SUPPLIER_DEPT;
CREATE SEQUENCE SEQ_TTA_REL_SUPPLIER_DEPT
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 14
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_REPORT_RELATIONSHIP_IN
-- ----------------------------
DROP SEQUENCE SEQ_TTA_REPORT_RELATIONSHIP_IN;
CREATE SEQUENCE SEQ_TTA_REPORT_RELATIONSHIP_IN
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 181979
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_RULE_FILE_TEMPLATE
-- ----------------------------
DROP SEQUENCE SEQ_TTA_RULE_FILE_TEMPLATE;
CREATE SEQUENCE SEQ_TTA_RULE_FILE_TEMPLATE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 2
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_SOLE_AGRT
-- ----------------------------
DROP SEQUENCE SEQ_TTA_SOLE_AGRT;
CREATE SEQUENCE SEQ_TTA_SOLE_AGRT
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 14
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_SOLE_AGRT_INFO
-- ----------------------------
DROP SEQUENCE SEQ_TTA_SOLE_AGRT_INFO;
CREATE SEQUENCE SEQ_TTA_SOLE_AGRT_INFO
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 9
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_SOLE_ITEM
-- ----------------------------
DROP SEQUENCE SEQ_TTA_SOLE_ITEM;
CREATE SEQUENCE SEQ_TTA_SOLE_ITEM
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 5
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_SOLE_SUPPLIER
-- ----------------------------
DROP SEQUENCE SEQ_TTA_SOLE_SUPPLIER;
CREATE SEQUENCE SEQ_TTA_SOLE_SUPPLIER
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 12
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_SUBJECT_CHOICE_SEC_MID
-- ----------------------------
DROP SEQUENCE SEQ_TTA_SUBJECT_CHOICE_SEC_MID;
CREATE SEQUENCE SEQ_TTA_SUBJECT_CHOICE_SEC_MID
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 26
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_SUPPLIER
-- ----------------------------
DROP SEQUENCE SEQ_TTA_SUPPLIER;
CREATE SEQUENCE SEQ_TTA_SUPPLIER
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 7
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_SUPPLIER_ITEM_HEADER
-- ----------------------------
DROP SEQUENCE SEQ_TTA_SUPPLIER_ITEM_HEADER;
CREATE SEQUENCE SEQ_TTA_SUPPLIER_ITEM_HEADER
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_SUPPLIER_ITEM_LINE
-- ----------------------------
DROP SEQUENCE SEQ_TTA_SUPPLIER_ITEM_LINE;
CREATE SEQUENCE SEQ_TTA_SUPPLIER_ITEM_LINE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 CACHE 20;

-- ----------------------------
-- Sequence structure for SEQ_TTA_SUPPLIER_ITEM_ORIGINAL
-- ----------------------------
DROP SEQUENCE SEQ_TTA_SUPPLIER_ITEM_ORIGINAL;
CREATE SEQUENCE SEQ_TTA_SUPPLIER_ITEM_ORIGINAL
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_TEMP_PARAM_DEF
-- ----------------------------
DROP SEQUENCE SEQ_TTA_TEMP_PARAM_DEF;
CREATE SEQUENCE SEQ_TTA_TEMP_PARAM_DEF
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_TEMP_PARAM_RULE_MIDLE
-- ----------------------------
DROP SEQUENCE SEQ_TTA_TEMP_PARAM_RULE_MIDLE;
CREATE SEQUENCE SEQ_TTA_TEMP_PARAM_RULE_MIDLE
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 12
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_TEMP_RULE_DEF
-- ----------------------------
DROP SEQUENCE SEQ_TTA_TEMP_RULE_DEF;
CREATE SEQUENCE SEQ_TTA_TEMP_RULE_DEF
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 140
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_TERMS_FRAME_HEADER
-- ----------------------------
DROP SEQUENCE SEQ_TTA_TERMS_FRAME_HEADER;
CREATE SEQUENCE SEQ_TTA_TERMS_FRAME_HEADER
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 209
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_TERMS_FRAME_HEADER_H
-- ----------------------------
DROP SEQUENCE SEQ_TTA_TERMS_FRAME_HEADER_H;
CREATE SEQUENCE SEQ_TTA_TERMS_FRAME_HEADER_H
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 568
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_TEST_CHOICE_MID
-- ----------------------------
DROP SEQUENCE SEQ_TTA_TEST_CHOICE_MID;
CREATE SEQUENCE SEQ_TTA_TEST_CHOICE_MID
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_TEST_QUESTIONNAIRE_CHO
-- ----------------------------
DROP SEQUENCE SEQ_TTA_TEST_QUESTIONNAIRE_CHO;
CREATE SEQUENCE SEQ_TTA_TEST_QUESTIONNAIRE_CHO
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 160
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_TEST_QUESTIONNAIRE_H
-- ----------------------------
DROP SEQUENCE SEQ_TTA_TEST_QUESTIONNAIRE_H;
CREATE SEQUENCE SEQ_TTA_TEST_QUESTIONNAIRE_H
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 2
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_TEST_QUESTIONNAIRE_L
-- ----------------------------
DROP SEQUENCE SEQ_TTA_TEST_QUESTIONNAIRE_L;
CREATE SEQUENCE SEQ_TTA_TEST_QUESTIONNAIRE_L
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 100
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_USER_GROUP_DEPT_BRAND
-- ----------------------------
DROP SEQUENCE SEQ_TTA_USER_GROUP_DEPT_BRAND;
CREATE SEQUENCE SEQ_TTA_USER_GROUP_DEPT_BRAND
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 27
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_TTA_VENDOR_IN
-- ----------------------------
DROP SEQUENCE SEQ_TTA_VENDOR_IN;
CREATE SEQUENCE SEQ_TTA_VENDOR_IN
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_USER_PWD_TEMP
-- ----------------------------
DROP SEQUENCE SEQ_USER_PWD_TEMP;
CREATE SEQUENCE SEQ_USER_PWD_TEMP
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_WX_USER
-- ----------------------------
DROP SEQUENCE SEQ_WX_USER;
CREATE SEQUENCE SEQ_WX_USER
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_Z_TEST
-- ----------------------------
DROP SEQUENCE SEQ_Z_TEST;
CREATE SEQUENCE SEQ_Z_TEST
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 NOCACHE ;

-- ----------------------------
-- Indexes structure for table ACT_BPM_CATEGORY
-- ----------------------------

-- ----------------------------
-- Checks structure for table ACT_BPM_CATEGORY
-- ----------------------------
ALTER TABLE ACT_BPM_CATEGORY ADD CHECK (CATEGORY_ID IS NOT NULL);
ALTER TABLE ACT_BPM_CATEGORY ADD CHECK (PARENT_ID IS NOT NULL);
ALTER TABLE ACT_BPM_CATEGORY ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE ACT_BPM_CATEGORY ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);
ALTER TABLE ACT_BPM_CATEGORY ADD CHECK (LAST_UPDATED_BY IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table ACT_BPM_CATEGORY
-- ----------------------------
ALTER TABLE ACT_BPM_CATEGORY ADD PRIMARY KEY (CATEGORY_ID);

-- ----------------------------
-- Indexes structure for table ACT_BPM_COMMUNICATE
-- ----------------------------
CREATE INDEX IDX_BPM_CREATED_BY
ON ACT_BPM_COMMUNICATE (CREATED_BY ASC)
LOGGING
VISIBLE;
CREATE INDEX IDX_BPM_PROCDEFKEY
ON ACT_BPM_COMMUNICATE (PROC_DEF_KEY ASC)
LOGGING
VISIBLE;
CREATE INDEX IDX_BPM_PROCINSTID
ON ACT_BPM_COMMUNICATE (PROC_INST_ID ASC)
LOGGING
VISIBLE;
CREATE INDEX IDX_BPM_RECEIVER_ID
ON ACT_BPM_COMMUNICATE (RECEIVER_ID ASC)
LOGGING
VISIBLE;
CREATE INDEX IDX_BPM_TASKID
ON ACT_BPM_COMMUNICATE (TASK_ID ASC)
LOGGING
VISIBLE;
CREATE INDEX IDX_BPM_TYPE
ON ACT_BPM_COMMUNICATE (TYPE ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table ACT_BPM_COMMUNICATE
-- ----------------------------
ALTER TABLE ACT_BPM_COMMUNICATE ADD CHECK (COMMUNICATE_ID IS NOT NULL);
ALTER TABLE ACT_BPM_COMMUNICATE ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE ACT_BPM_COMMUNICATE ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table ACT_BPM_COMMUNICATE
-- ----------------------------
ALTER TABLE ACT_BPM_COMMUNICATE ADD PRIMARY KEY (COMMUNICATE_ID);

-- ----------------------------
-- Indexes structure for table ACT_BPM_CONFIG
-- ----------------------------

-- ----------------------------
-- Checks structure for table ACT_BPM_CONFIG
-- ----------------------------
ALTER TABLE ACT_BPM_CONFIG ADD CHECK (CONFIG_ID IS NOT NULL);
ALTER TABLE ACT_BPM_CONFIG ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE ACT_BPM_CONFIG ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);
ALTER TABLE ACT_BPM_CONFIG ADD CHECK (LAST_UPDATED_BY IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table ACT_BPM_CONFIG
-- ----------------------------
ALTER TABLE ACT_BPM_CONFIG ADD PRIMARY KEY (CONFIG_ID);

-- ----------------------------
-- Indexes structure for table ACT_BPM_EXCEPTION
-- ----------------------------
CREATE INDEX IDX_BPM_EXCEPTION_CREATED_BY
ON ACT_BPM_EXCEPTION (CREATED_BY ASC)
LOGGING
VISIBLE;
CREATE INDEX IDX_BPM_EXCEPTION_PROCDEFKEY
ON ACT_BPM_EXCEPTION (PROC_DEF_KEY ASC)
LOGGING
VISIBLE;
CREATE INDEX IDX_BPM_EXCEPTION_PROCINSTID
ON ACT_BPM_EXCEPTION (PROC_INST_ID ASC)
LOGGING
VISIBLE;
CREATE INDEX IDX_BPM_EXCEPTION_TASKID
ON ACT_BPM_EXCEPTION (TASK_ID ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table ACT_BPM_EXCEPTION
-- ----------------------------
ALTER TABLE ACT_BPM_EXCEPTION ADD CHECK (EXCEPTION_ID IS NOT NULL);
ALTER TABLE ACT_BPM_EXCEPTION ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE ACT_BPM_EXCEPTION ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table ACT_BPM_EXCEPTION
-- ----------------------------
ALTER TABLE ACT_BPM_EXCEPTION ADD PRIMARY KEY (EXCEPTION_ID);

-- ----------------------------
-- Indexes structure for table ACT_BPM_LIST
-- ----------------------------
CREATE INDEX IDX_BPM_LIST_BUSINESSKEY
ON ACT_BPM_LIST (BUSINESS_KEY ASC)
LOGGING
VISIBLE;
CREATE INDEX IDX_BPM_LIST_CATEGORYID
ON ACT_BPM_LIST (CATEGORY_ID ASC)
LOGGING
VISIBLE;
CREATE INDEX IDX_BPM_LIST_CREATEDBY
ON ACT_BPM_LIST (CREATED_BY ASC)
LOGGING
VISIBLE;
CREATE INDEX IDX_BPM_LIST_LISTCODE
ON ACT_BPM_LIST (LIST_CODE ASC)
LOGGING
VISIBLE;
CREATE INDEX IDX_BPM_LIST_PROCINSTID
ON ACT_BPM_LIST (PROC_INST_ID ASC)
LOGGING
VISIBLE;
CREATE INDEX IDX_BPM_LIST_TITEL
ON ACT_BPM_LIST (TITLE ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table ACT_BPM_LIST
-- ----------------------------
ALTER TABLE ACT_BPM_LIST ADD CHECK (LIST_ID IS NOT NULL);
ALTER TABLE ACT_BPM_LIST ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE ACT_BPM_LIST ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table ACT_BPM_LIST
-- ----------------------------
ALTER TABLE ACT_BPM_LIST ADD PRIMARY KEY (LIST_ID);

-- ----------------------------
-- Indexes structure for table ACT_BPM_NOTIFY_TASK
-- ----------------------------

-- ----------------------------
-- Checks structure for table ACT_BPM_NOTIFY_TASK
-- ----------------------------
ALTER TABLE ACT_BPM_NOTIFY_TASK ADD CHECK (NOTIFY_ID IS NOT NULL);
ALTER TABLE ACT_BPM_NOTIFY_TASK ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE ACT_BPM_NOTIFY_TASK ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table ACT_BPM_NOTIFY_TASK
-- ----------------------------
ALTER TABLE ACT_BPM_NOTIFY_TASK ADD PRIMARY KEY (NOTIFY_ID);

-- ----------------------------
-- Indexes structure for table ACT_BPM_PERMISSION
-- ----------------------------

-- ----------------------------
-- Checks structure for table ACT_BPM_PERMISSION
-- ----------------------------
ALTER TABLE ACT_BPM_PERMISSION ADD CHECK (PERMISSION_ID IS NOT NULL);
ALTER TABLE ACT_BPM_PERMISSION ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE ACT_BPM_PERMISSION ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table ACT_BPM_PERMISSION
-- ----------------------------
ALTER TABLE ACT_BPM_PERMISSION ADD PRIMARY KEY (PERMISSION_ID);

-- ----------------------------
-- Indexes structure for table ACT_BPM_ROLE
-- ----------------------------

-- ----------------------------
-- Checks structure for table ACT_BPM_ROLE
-- ----------------------------
ALTER TABLE ACT_BPM_ROLE ADD CHECK (ROLE_ID IS NOT NULL);
ALTER TABLE ACT_BPM_ROLE ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE ACT_BPM_ROLE ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);
ALTER TABLE ACT_BPM_ROLE ADD CHECK (LAST_UPDATED_BY IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table ACT_BPM_ROLE
-- ----------------------------
ALTER TABLE ACT_BPM_ROLE ADD PRIMARY KEY (ROLE_ID);

-- ----------------------------
-- Indexes structure for table ACT_BPM_TASK_CONFIG
-- ----------------------------

-- ----------------------------
-- Checks structure for table ACT_BPM_TASK_CONFIG
-- ----------------------------
ALTER TABLE ACT_BPM_TASK_CONFIG ADD CHECK (CONFIG_ID IS NOT NULL);
ALTER TABLE ACT_BPM_TASK_CONFIG ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE ACT_BPM_TASK_CONFIG ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);
ALTER TABLE ACT_BPM_TASK_CONFIG ADD CHECK (LAST_UPDATED_BY IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table ACT_BPM_TASK_CONFIG
-- ----------------------------
ALTER TABLE ACT_BPM_TASK_CONFIG ADD PRIMARY KEY (CONFIG_ID);

-- ----------------------------
-- Indexes structure for table ACT_BPM_TASK_DELEGATE
-- ----------------------------

-- ----------------------------
-- Checks structure for table ACT_BPM_TASK_DELEGATE
-- ----------------------------
ALTER TABLE ACT_BPM_TASK_DELEGATE ADD CHECK (DELEGATE_ID IS NOT NULL);
ALTER TABLE ACT_BPM_TASK_DELEGATE ADD CHECK (CLIENT_USER_ID IS NOT NULL);
ALTER TABLE ACT_BPM_TASK_DELEGATE ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE ACT_BPM_TASK_DELEGATE ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);
ALTER TABLE ACT_BPM_TASK_DELEGATE ADD CHECK (LAST_UPDATED_BY IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table ACT_BPM_TASK_DELEGATE
-- ----------------------------
ALTER TABLE ACT_BPM_TASK_DELEGATE ADD PRIMARY KEY (DELEGATE_ID);

-- ----------------------------
-- Indexes structure for table ACT_BPM_TASK_DELEGATE_CONFIG
-- ----------------------------

-- ----------------------------
-- Checks structure for table ACT_BPM_TASK_DELEGATE_CONFIG
-- ----------------------------
ALTER TABLE ACT_BPM_TASK_DELEGATE_CONFIG ADD CHECK (CONFIG_ID IS NOT NULL);
ALTER TABLE ACT_BPM_TASK_DELEGATE_CONFIG ADD CHECK (CLIENT_USER_ID IS NOT NULL);
ALTER TABLE ACT_BPM_TASK_DELEGATE_CONFIG ADD CHECK (DELEGATE_USER_ID IS NOT NULL);
ALTER TABLE ACT_BPM_TASK_DELEGATE_CONFIG ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE ACT_BPM_TASK_DELEGATE_CONFIG ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);
ALTER TABLE ACT_BPM_TASK_DELEGATE_CONFIG ADD CHECK (LAST_UPDATED_BY IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table ACT_BPM_TASK_DELEGATE_CONFIG
-- ----------------------------
ALTER TABLE ACT_BPM_TASK_DELEGATE_CONFIG ADD PRIMARY KEY (CONFIG_ID);

-- ----------------------------
-- Indexes structure for table ACT_BPM_TASK_LEAVEL
-- ----------------------------
CREATE INDEX IDX_PARENTTASKID
ON ACT_BPM_TASK_LEAVEL (PARENT_TASK_ID ASC)
LOGGING
VISIBLE;
CREATE INDEX IDX_TOPPROCINSTID
ON ACT_BPM_TASK_LEAVEL (TOP_PROC_INST_ID ASC)
LOGGING
VISIBLE;
CREATE INDEX IDX_TOPTASKID
ON ACT_BPM_TASK_LEAVEL (TOP_TASK_ID ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table ACT_BPM_TASK_LEAVEL
-- ----------------------------
ALTER TABLE ACT_BPM_TASK_LEAVEL ADD CHECK (TASK_ID IS NOT NULL);
ALTER TABLE ACT_BPM_TASK_LEAVEL ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE ACT_BPM_TASK_LEAVEL ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);
ALTER TABLE ACT_BPM_TASK_LEAVEL ADD CHECK (LAST_UPDATED_BY IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table ACT_BPM_TASK_LEAVEL
-- ----------------------------
ALTER TABLE ACT_BPM_TASK_LEAVEL ADD PRIMARY KEY (TASK_ID);

-- ----------------------------
-- Indexes structure for table ACT_BPM_TASK_PROCESSER
-- ----------------------------

-- ----------------------------
-- Checks structure for table ACT_BPM_TASK_PROCESSER
-- ----------------------------
ALTER TABLE ACT_BPM_TASK_PROCESSER ADD CHECK (PROCESSER_ID IS NOT NULL);
ALTER TABLE ACT_BPM_TASK_PROCESSER ADD CHECK (CONFIG_ID IS NOT NULL);
ALTER TABLE ACT_BPM_TASK_PROCESSER ADD CHECK (DISABLED IS NOT NULL);
ALTER TABLE ACT_BPM_TASK_PROCESSER ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE ACT_BPM_TASK_PROCESSER ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);
ALTER TABLE ACT_BPM_TASK_PROCESSER ADD CHECK (LAST_UPDATED_BY IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table ACT_BPM_TASK_PROCESSER
-- ----------------------------
ALTER TABLE ACT_BPM_TASK_PROCESSER ADD PRIMARY KEY (PROCESSER_ID);

-- ----------------------------
-- Indexes structure for table ACT_BPM_TASK_URGE_CONFIG
-- ----------------------------

-- ----------------------------
-- Checks structure for table ACT_BPM_TASK_URGE_CONFIG
-- ----------------------------
ALTER TABLE ACT_BPM_TASK_URGE_CONFIG ADD CHECK (CONFIG_ID IS NOT NULL);
ALTER TABLE ACT_BPM_TASK_URGE_CONFIG ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE ACT_BPM_TASK_URGE_CONFIG ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);
ALTER TABLE ACT_BPM_TASK_URGE_CONFIG ADD CHECK (LAST_UPDATED_BY IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table ACT_BPM_TASK_URGE_CONFIG
-- ----------------------------
ALTER TABLE ACT_BPM_TASK_URGE_CONFIG ADD PRIMARY KEY (CONFIG_ID);

-- ----------------------------
-- Indexes structure for table ACT_EVT_LOG
-- ----------------------------

-- ----------------------------
-- Checks structure for table ACT_EVT_LOG
-- ----------------------------
ALTER TABLE ACT_EVT_LOG ADD CHECK (LOG_NR_ IS NOT NULL);
ALTER TABLE ACT_EVT_LOG ADD CHECK (TIME_STAMP_ IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table ACT_EVT_LOG
-- ----------------------------
ALTER TABLE ACT_EVT_LOG ADD PRIMARY KEY (LOG_NR_);

-- ----------------------------
-- Indexes structure for table ACT_GE_BYTEARRAY
-- ----------------------------

-- ----------------------------
-- Checks structure for table ACT_GE_BYTEARRAY
-- ----------------------------
ALTER TABLE ACT_GE_BYTEARRAY ADD CHECK (ID_ IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table ACT_GE_BYTEARRAY
-- ----------------------------
ALTER TABLE ACT_GE_BYTEARRAY ADD PRIMARY KEY (ID_);

-- ----------------------------
-- Indexes structure for table ACT_GE_PROPERTY
-- ----------------------------

-- ----------------------------
-- Checks structure for table ACT_GE_PROPERTY
-- ----------------------------
ALTER TABLE ACT_GE_PROPERTY ADD CHECK (NAME_ IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table ACT_GE_PROPERTY
-- ----------------------------
ALTER TABLE ACT_GE_PROPERTY ADD PRIMARY KEY (NAME_);

-- ----------------------------
-- Indexes structure for table ACT_HI_ACTINST
-- ----------------------------
CREATE INDEX ACT_IDX_HI_ACT_INST_END
ON ACT_HI_ACTINST (END_TIME_ ASC)
LOGGING
VISIBLE;
CREATE INDEX ACT_IDX_HI_ACT_INST_EXEC
ON ACT_HI_ACTINST (EXECUTION_ID_ ASC, ACT_ID_ ASC)
LOGGING
VISIBLE;
CREATE INDEX ACT_IDX_HI_ACT_INST_PROCINST
ON ACT_HI_ACTINST (PROC_INST_ID_ ASC, ACT_ID_ ASC)
LOGGING
VISIBLE;
CREATE INDEX ACT_IDX_HI_ACT_INST_START
ON ACT_HI_ACTINST (START_TIME_ ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table ACT_HI_ACTINST
-- ----------------------------
ALTER TABLE ACT_HI_ACTINST ADD CHECK (ID_ IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table ACT_HI_ACTINST
-- ----------------------------
ALTER TABLE ACT_HI_ACTINST ADD PRIMARY KEY (ID_);

-- ----------------------------
-- Indexes structure for table ACT_HI_ATTACHMENT
-- ----------------------------

-- ----------------------------
-- Checks structure for table ACT_HI_ATTACHMENT
-- ----------------------------
ALTER TABLE ACT_HI_ATTACHMENT ADD CHECK (ID_ IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table ACT_HI_ATTACHMENT
-- ----------------------------
ALTER TABLE ACT_HI_ATTACHMENT ADD PRIMARY KEY (ID_);

-- ----------------------------
-- Indexes structure for table ACT_HI_COMMENT
-- ----------------------------

-- ----------------------------
-- Checks structure for table ACT_HI_COMMENT
-- ----------------------------
ALTER TABLE ACT_HI_COMMENT ADD CHECK (ID_ IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table ACT_HI_COMMENT
-- ----------------------------
ALTER TABLE ACT_HI_COMMENT ADD PRIMARY KEY (ID_);

-- ----------------------------
-- Indexes structure for table ACT_HI_DETAIL
-- ----------------------------
CREATE INDEX ACT_IDX_HI_DETAIL_ACT_INST
ON ACT_HI_DETAIL (ACT_INST_ID_ ASC)
LOGGING
VISIBLE;
CREATE INDEX ACT_IDX_HI_DETAIL_NAME
ON ACT_HI_DETAIL (NAME_ ASC)
LOGGING
VISIBLE;
CREATE INDEX ACT_IDX_HI_DETAIL_PROC_INST
ON ACT_HI_DETAIL (PROC_INST_ID_ ASC)
LOGGING
VISIBLE;
CREATE INDEX ACT_IDX_HI_DETAIL_TASK_ID
ON ACT_HI_DETAIL (TASK_ID_ ASC)
LOGGING
VISIBLE;
CREATE INDEX ACT_IDX_HI_DETAIL_TIME
ON ACT_HI_DETAIL (TIME_ ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table ACT_HI_DETAIL
-- ----------------------------
ALTER TABLE ACT_HI_DETAIL ADD CHECK (ID_ IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table ACT_HI_DETAIL
-- ----------------------------
ALTER TABLE ACT_HI_DETAIL ADD PRIMARY KEY (ID_);

-- ----------------------------
-- Indexes structure for table ACT_HI_IDENTITYLINK
-- ----------------------------
CREATE INDEX ACT_IDX_HI_IDENT_LNK_PROCINST
ON ACT_HI_IDENTITYLINK (PROC_INST_ID_ ASC)
LOGGING
VISIBLE;
CREATE INDEX ACT_IDX_HI_IDENT_LNK_TASK
ON ACT_HI_IDENTITYLINK (TASK_ID_ ASC)
LOGGING
VISIBLE;
CREATE INDEX ACT_IDX_HI_IDENT_LNK_USER
ON ACT_HI_IDENTITYLINK (USER_ID_ ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table ACT_HI_IDENTITYLINK
-- ----------------------------
ALTER TABLE ACT_HI_IDENTITYLINK ADD CHECK (ID_ IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table ACT_HI_IDENTITYLINK
-- ----------------------------
ALTER TABLE ACT_HI_IDENTITYLINK ADD PRIMARY KEY (ID_);

-- ----------------------------
-- Indexes structure for table ACT_HI_PROCINST
-- ----------------------------
CREATE INDEX ACT_IDX_HI_PRO_INST_END
ON ACT_HI_PROCINST (END_TIME_ ASC)
LOGGING
VISIBLE;
CREATE INDEX ACT_IDX_HI_PRO_I_BUSKEY
ON ACT_HI_PROCINST (BUSINESS_KEY_ ASC)
LOGGING
VISIBLE;
CREATE UNIQUE INDEX PROC_INST_ID_
ON ACT_HI_PROCINST (PROC_INST_ID_ ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table ACT_HI_PROCINST
-- ----------------------------
ALTER TABLE ACT_HI_PROCINST ADD CHECK (ID_ IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table ACT_HI_PROCINST
-- ----------------------------
ALTER TABLE ACT_HI_PROCINST ADD PRIMARY KEY (ID_);

-- ----------------------------
-- Indexes structure for table ACT_HI_TASKINST
-- ----------------------------
CREATE INDEX ACT_IDX_HI_TASK_INST_PROCINST
ON ACT_HI_TASKINST (PROC_INST_ID_ ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table ACT_HI_TASKINST
-- ----------------------------
ALTER TABLE ACT_HI_TASKINST ADD CHECK (ID_ IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table ACT_HI_TASKINST
-- ----------------------------
ALTER TABLE ACT_HI_TASKINST ADD PRIMARY KEY (ID_);

-- ----------------------------
-- Indexes structure for table ACT_HI_VARINST
-- ----------------------------
CREATE INDEX ACT_IDX_HI_PROCVAR_NAME_TYPE
ON ACT_HI_VARINST (NAME_ ASC, VAR_TYPE_ ASC)
LOGGING
VISIBLE;
CREATE INDEX ACT_IDX_HI_PROCVAR_PROC_INST
ON ACT_HI_VARINST (PROC_INST_ID_ ASC)
LOGGING
VISIBLE;
CREATE INDEX ACT_IDX_HI_PROCVAR_TASK_ID
ON ACT_HI_VARINST (TASK_ID_ ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table ACT_HI_VARINST
-- ----------------------------
ALTER TABLE ACT_HI_VARINST ADD CHECK (ID_ IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table ACT_HI_VARINST
-- ----------------------------
ALTER TABLE ACT_HI_VARINST ADD PRIMARY KEY (ID_);

-- ----------------------------
-- Indexes structure for table ACT_ID_GROUP
-- ----------------------------

-- ----------------------------
-- Checks structure for table ACT_ID_GROUP
-- ----------------------------
ALTER TABLE ACT_ID_GROUP ADD CHECK (ID_ IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table ACT_ID_GROUP
-- ----------------------------
ALTER TABLE ACT_ID_GROUP ADD PRIMARY KEY (ID_);

-- ----------------------------
-- Indexes structure for table ACT_ID_INFO
-- ----------------------------

-- ----------------------------
-- Checks structure for table ACT_ID_INFO
-- ----------------------------
ALTER TABLE ACT_ID_INFO ADD CHECK (ID_ IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table ACT_ID_INFO
-- ----------------------------
ALTER TABLE ACT_ID_INFO ADD PRIMARY KEY (ID_);

-- ----------------------------
-- Indexes structure for table ACT_ID_MEMBERSHIP
-- ----------------------------

-- ----------------------------
-- Checks structure for table ACT_ID_MEMBERSHIP
-- ----------------------------
ALTER TABLE ACT_ID_MEMBERSHIP ADD CHECK (USER_ID_ IS NOT NULL);
ALTER TABLE ACT_ID_MEMBERSHIP ADD CHECK (GROUP_ID_ IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table ACT_ID_MEMBERSHIP
-- ----------------------------
ALTER TABLE ACT_ID_MEMBERSHIP ADD PRIMARY KEY (USER_ID_, GROUP_ID_);

-- ----------------------------
-- Indexes structure for table ACT_ID_USER
-- ----------------------------

-- ----------------------------
-- Checks structure for table ACT_ID_USER
-- ----------------------------
ALTER TABLE ACT_ID_USER ADD CHECK (ID_ IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table ACT_ID_USER
-- ----------------------------
ALTER TABLE ACT_ID_USER ADD PRIMARY KEY (ID_);

-- ----------------------------
-- Indexes structure for table ACT_PROCDEF_INFO
-- ----------------------------
CREATE UNIQUE INDEX ACT_UNIQ_INFO_PROCDEF
ON ACT_PROCDEF_INFO (PROC_DEF_ID_ ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table ACT_PROCDEF_INFO
-- ----------------------------
ALTER TABLE ACT_PROCDEF_INFO ADD CHECK (ID_ IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table ACT_PROCDEF_INFO
-- ----------------------------
ALTER TABLE ACT_PROCDEF_INFO ADD PRIMARY KEY (ID_);

-- ----------------------------
-- Indexes structure for table ACT_RE_DEPLOYMENT
-- ----------------------------

-- ----------------------------
-- Checks structure for table ACT_RE_DEPLOYMENT
-- ----------------------------
ALTER TABLE ACT_RE_DEPLOYMENT ADD CHECK (ID_ IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table ACT_RE_DEPLOYMENT
-- ----------------------------
ALTER TABLE ACT_RE_DEPLOYMENT ADD PRIMARY KEY (ID_);

-- ----------------------------
-- Indexes structure for table ACT_RE_MODEL
-- ----------------------------

-- ----------------------------
-- Checks structure for table ACT_RE_MODEL
-- ----------------------------
ALTER TABLE ACT_RE_MODEL ADD CHECK (ID_ IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table ACT_RE_MODEL
-- ----------------------------
ALTER TABLE ACT_RE_MODEL ADD PRIMARY KEY (ID_);

-- ----------------------------
-- Indexes structure for table ACT_RE_PROCDEF
-- ----------------------------
CREATE UNIQUE INDEX ACT_UNIQ_PROCDEF
ON ACT_RE_PROCDEF (KEY_ ASC, VERSION_ ASC, TENANT_ID_ ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table ACT_RE_PROCDEF
-- ----------------------------
ALTER TABLE ACT_RE_PROCDEF ADD CHECK (ID_ IS NOT NULL);
ALTER TABLE ACT_RE_PROCDEF ADD CHECK (VERSION_ IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table ACT_RE_PROCDEF
-- ----------------------------
ALTER TABLE ACT_RE_PROCDEF ADD PRIMARY KEY (ID_);

-- ----------------------------
-- Indexes structure for table ACT_RU_EVENT_SUBSCR
-- ----------------------------

-- ----------------------------
-- Checks structure for table ACT_RU_EVENT_SUBSCR
-- ----------------------------
ALTER TABLE ACT_RU_EVENT_SUBSCR ADD CHECK (ID_ IS NOT NULL);
ALTER TABLE ACT_RU_EVENT_SUBSCR ADD CHECK (CREATED_ IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table ACT_RU_EVENT_SUBSCR
-- ----------------------------
ALTER TABLE ACT_RU_EVENT_SUBSCR ADD PRIMARY KEY (ID_);

-- ----------------------------
-- Indexes structure for table ACT_RU_EXECUTION
-- ----------------------------
CREATE INDEX ACT_IDX_EXEC_BUSKEY
ON ACT_RU_EXECUTION (BUSINESS_KEY_ ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table ACT_RU_EXECUTION
-- ----------------------------
ALTER TABLE ACT_RU_EXECUTION ADD CHECK (ID_ IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table ACT_RU_EXECUTION
-- ----------------------------
ALTER TABLE ACT_RU_EXECUTION ADD PRIMARY KEY (ID_);

-- ----------------------------
-- Indexes structure for table ACT_RU_IDENTITYLINK
-- ----------------------------
CREATE INDEX ACT_IDX_ATHRZ_PROCEDEF
ON ACT_RU_IDENTITYLINK (PROC_DEF_ID_ ASC)
LOGGING
VISIBLE;
CREATE INDEX ACT_IDX_IDENT_LNK_GROUP
ON ACT_RU_IDENTITYLINK (GROUP_ID_ ASC)
LOGGING
VISIBLE;
CREATE INDEX ACT_IDX_IDENT_LNK_USER
ON ACT_RU_IDENTITYLINK (USER_ID_ ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table ACT_RU_IDENTITYLINK
-- ----------------------------
ALTER TABLE ACT_RU_IDENTITYLINK ADD CHECK (ID_ IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table ACT_RU_IDENTITYLINK
-- ----------------------------
ALTER TABLE ACT_RU_IDENTITYLINK ADD PRIMARY KEY (ID_);

-- ----------------------------
-- Indexes structure for table ACT_RU_JOB
-- ----------------------------

-- ----------------------------
-- Checks structure for table ACT_RU_JOB
-- ----------------------------
ALTER TABLE ACT_RU_JOB ADD CHECK (ID_ IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table ACT_RU_JOB
-- ----------------------------
ALTER TABLE ACT_RU_JOB ADD PRIMARY KEY (ID_);

-- ----------------------------
-- Indexes structure for table ACT_RU_TASK
-- ----------------------------
CREATE INDEX ACT_IDX_TASK_CREATE
ON ACT_RU_TASK (CREATE_TIME_ ASC)
LOGGING
VISIBLE;
CREATE INDEX IDX_ACT_RU_TASK_N1
ON ACT_RU_TASK (PARENT_TASK_ID_ ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table ACT_RU_TASK
-- ----------------------------
ALTER TABLE ACT_RU_TASK ADD CHECK (ID_ IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table ACT_RU_TASK
-- ----------------------------
ALTER TABLE ACT_RU_TASK ADD PRIMARY KEY (ID_);

-- ----------------------------
-- Indexes structure for table ACT_RU_VARIABLE
-- ----------------------------
CREATE INDEX ACT_IDX_VARIABLE_TASK_ID
ON ACT_RU_VARIABLE (TASK_ID_ ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table ACT_RU_VARIABLE
-- ----------------------------
ALTER TABLE ACT_RU_VARIABLE ADD CHECK (ID_ IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table ACT_RU_VARIABLE
-- ----------------------------
ALTER TABLE ACT_RU_VARIABLE ADD PRIMARY KEY (ID_);

-- ----------------------------
-- Indexes structure for table ADMIN_AREA_INFO
-- ----------------------------
CREATE INDEX ADMIN_AREA_INFO_N1
ON ADMIN_AREA_INFO (AREA_CODE ASC)
LOGGING
VISIBLE;
CREATE INDEX ADMIN_AREA_INFO_N2
ON ADMIN_AREA_INFO (PARENT_AREA_CODE ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table ADMIN_AREA_INFO
-- ----------------------------
ALTER TABLE ADMIN_AREA_INFO ADD CHECK (AREA_ID IS NOT NULL);
ALTER TABLE ADMIN_AREA_INFO ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE ADMIN_AREA_INFO ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE ADMIN_AREA_INFO ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE ADMIN_AREA_INFO ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table ADMIN_AREA_INFO
-- ----------------------------
ALTER TABLE ADMIN_AREA_INFO ADD PRIMARY KEY (AREA_ID);

-- ----------------------------
-- Indexes structure for table BASE_ACCESS_BASEDATA
-- ----------------------------
CREATE INDEX IDX_ACCESS_BASEDATA_N1
ON BASE_ACCESS_BASEDATA (USER_ID ASC, ACCESS_TYPE ASC, ORG_ID ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table BASE_ACCESS_BASEDATA
-- ----------------------------
ALTER TABLE BASE_ACCESS_BASEDATA ADD CHECK (ACCESS_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_ACCESS_BASEDATA
-- ----------------------------
ALTER TABLE BASE_ACCESS_BASEDATA ADD PRIMARY KEY (ACCESS_ID);

-- ----------------------------
-- Indexes structure for table BASE_ADMINSTRATIVE_REGION
-- ----------------------------
CREATE INDEX REGION_CODE_IDX
ON BASE_ADMINSTRATIVE_REGION (REGION_CODE ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table BASE_ADMINSTRATIVE_REGION
-- ----------------------------
ALTER TABLE BASE_ADMINSTRATIVE_REGION ADD CHECK (REGION_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_ADMINSTRATIVE_REGION
-- ----------------------------
ALTER TABLE BASE_ADMINSTRATIVE_REGION ADD PRIMARY KEY (REGION_ID);

-- ----------------------------
-- Indexes structure for table BASE_API_CENTER_H
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_API_CENTER_H
-- ----------------------------
ALTER TABLE BASE_API_CENTER_H ADD CHECK (APIH_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_API_CENTER_H
-- ----------------------------
ALTER TABLE BASE_API_CENTER_H ADD PRIMARY KEY (APIH_ID);

-- ----------------------------
-- Indexes structure for table BASE_API_CENTER_L
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_API_CENTER_L
-- ----------------------------
ALTER TABLE BASE_API_CENTER_L ADD CHECK (APIL_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_API_CENTER_L
-- ----------------------------
ALTER TABLE BASE_API_CENTER_L ADD PRIMARY KEY (APIL_ID);

-- ----------------------------
-- Indexes structure for table BASE_API_MANAGEMENT
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_API_MANAGEMENT
-- ----------------------------
ALTER TABLE BASE_API_MANAGEMENT ADD CHECK (API_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_API_MANAGEMENT
-- ----------------------------
ALTER TABLE BASE_API_MANAGEMENT ADD PRIMARY KEY (API_ID);

-- ----------------------------
-- Indexes structure for table BASE_APP_AUTH_CONTAIN
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_APP_AUTH_CONTAIN
-- ----------------------------
ALTER TABLE BASE_APP_AUTH_CONTAIN ADD CHECK (AUTH_APP_WAP_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_APP_AUTH_CONTAIN
-- ----------------------------
ALTER TABLE BASE_APP_AUTH_CONTAIN ADD PRIMARY KEY (AUTH_APP_WAP_ID);

-- ----------------------------
-- Indexes structure for table BASE_APP_AUTH_EXCLUDE
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_APP_AUTH_EXCLUDE
-- ----------------------------
ALTER TABLE BASE_APP_AUTH_EXCLUDE ADD CHECK (AUTH_APP_WAP_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_APP_AUTH_EXCLUDE
-- ----------------------------
ALTER TABLE BASE_APP_AUTH_EXCLUDE ADD PRIMARY KEY (AUTH_APP_WAP_ID);

-- ----------------------------
-- Indexes structure for table BASE_APP_DEPLOYEE_INFO
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_APP_DEPLOYEE_INFO
-- ----------------------------
ALTER TABLE BASE_APP_DEPLOYEE_INFO ADD CHECK (APP_WAP_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_APP_DEPLOYEE_INFO
-- ----------------------------
ALTER TABLE BASE_APP_DEPLOYEE_INFO ADD PRIMARY KEY (APP_WAP_ID);

-- ----------------------------
-- Indexes structure for table BASE_APP_DEPLOYEE_MENU
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_APP_DEPLOYEE_MENU
-- ----------------------------
ALTER TABLE BASE_APP_DEPLOYEE_MENU ADD CHECK (APP_MENU_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_APP_DEPLOYEE_MENU
-- ----------------------------
ALTER TABLE BASE_APP_DEPLOYEE_MENU ADD PRIMARY KEY (APP_MENU_ID);

-- ----------------------------
-- Indexes structure for table BASE_ATTACHMENT
-- ----------------------------
CREATE INDEX BUSINESS_ID_IDX
ON BASE_ATTACHMENT (BUSINESS_ID ASC)
LOGGING
VISIBLE;
CREATE INDEX FILE_STORE_SYSTEM_IDX
ON BASE_ATTACHMENT (FILE_STORE_SYSTEM ASC)
LOGGING
VISIBLE;
CREATE INDEX FUNCTION_ID_IDX
ON BASE_ATTACHMENT (FUNCTION_ID ASC)
LOGGING
VISIBLE;
CREATE INDEX STATUS_IDX
ON BASE_ATTACHMENT (STATUS ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table BASE_ATTACHMENT
-- ----------------------------
ALTER TABLE BASE_ATTACHMENT ADD CHECK (FILE_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_ATTACHMENT
-- ----------------------------
ALTER TABLE BASE_ATTACHMENT ADD PRIMARY KEY (FILE_ID);

-- ----------------------------
-- Indexes structure for table BASE_BUTTON_DATA
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_BUTTON_DATA
-- ----------------------------
ALTER TABLE BASE_BUTTON_DATA ADD CHECK (BBD_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_BUTTON_DATA
-- ----------------------------
ALTER TABLE BASE_BUTTON_DATA ADD PRIMARY KEY (BBD_ID);

-- ----------------------------
-- Indexes structure for table BASE_BUTTON_DATA_LANGUAGE
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_BUTTON_DATA_LANGUAGE
-- ----------------------------
ALTER TABLE BASE_BUTTON_DATA_LANGUAGE ADD CHECK (BBD_LANGUAGE_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_BUTTON_DATA_LANGUAGE
-- ----------------------------
ALTER TABLE BASE_BUTTON_DATA_LANGUAGE ADD PRIMARY KEY (BBD_LANGUAGE_ID);

-- ----------------------------
-- Indexes structure for table BASE_CHANNEL
-- ----------------------------
CREATE INDEX INDEX_BC_V1
ON BASE_CHANNEL (CHANNEL_CODE ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table BASE_CHANNEL
-- ----------------------------
ALTER TABLE BASE_CHANNEL ADD CHECK (CHANNEL_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_CHANNEL
-- ----------------------------
ALTER TABLE BASE_CHANNEL ADD PRIMARY KEY (CHANNEL_ID);

-- ----------------------------
-- Indexes structure for table BASE_CHANNEL_PRIVILEGE
-- ----------------------------
CREATE INDEX BASE_CHANNEL_PRI_N1
ON BASE_CHANNEL_PRIVILEGE (ITEM_CODE ASC, ACCESS_TYPE ASC)
LOGGING
VISIBLE;
CREATE INDEX BASE_CHANNEL_PRI_N2
ON BASE_CHANNEL_PRIVILEGE (TRANSACTION_TYPE_ID ASC, ACCESS_TYPE ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table BASE_CHANNEL_PRIVILEGE
-- ----------------------------
ALTER TABLE BASE_CHANNEL_PRIVILEGE ADD CHECK (CHANNEL_PRIVILEGE_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_CHANNEL_PRIVILEGE
-- ----------------------------
ALTER TABLE BASE_CHANNEL_PRIVILEGE ADD PRIMARY KEY (CHANNEL_PRIVILEGE_ID);

-- ----------------------------
-- Indexes structure for table BASE_CMS_ARTICLE
-- ----------------------------
CREATE INDEX ARTICLE_CATEGORY_IDX
ON BASE_CMS_ARTICLE (ARTICLE_CATEGORY ASC)
LOGGING
VISIBLE;
CREATE INDEX COMPANY_ID_IDX
ON BASE_CMS_ARTICLE (COMPANY_ID ASC)
LOGGING
VISIBLE;
CREATE INDEX TOP_FLAG_IDX
ON BASE_CMS_ARTICLE (TOP_FLAG ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table BASE_CMS_ARTICLE
-- ----------------------------
ALTER TABLE BASE_CMS_ARTICLE ADD CHECK (ARTICLE_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_CMS_ARTICLE
-- ----------------------------
ALTER TABLE BASE_CMS_ARTICLE ADD PRIMARY KEY (ARTICLE_ID);

-- ----------------------------
-- Indexes structure for table BASE_CMS_CAROUSEL
-- ----------------------------
CREATE INDEX CPY_ID_IDX
ON BASE_CMS_CAROUSEL (COMPANY_ID ASC)
LOGGING
VISIBLE;
CREATE INDEX DISPLAY_FLAG_IDX
ON BASE_CMS_CAROUSEL (DISPLAY_FLAG ASC)
LOGGING
VISIBLE;
CREATE INDEX ORDER_SEQUENCE_IDX
ON BASE_CMS_CAROUSEL (ORDER_SEQUENCE ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table BASE_CMS_CAROUSEL
-- ----------------------------
ALTER TABLE BASE_CMS_CAROUSEL ADD CHECK (CAROUSEL_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_CMS_CAROUSEL
-- ----------------------------
ALTER TABLE BASE_CMS_CAROUSEL ADD PRIMARY KEY (CAROUSEL_ID);

-- ----------------------------
-- Indexes structure for table BASE_CMS_CAROUSEL_CITY
-- ----------------------------
CREATE INDEX CAROUSEL_ID_IDX
ON BASE_CMS_CAROUSEL_CITY (CAROUSEL_ID ASC)
LOGGING
VISIBLE;
CREATE INDEX CITY_ID_IDX
ON BASE_CMS_CAROUSEL_CITY (CITY_ID ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table BASE_CMS_CAROUSEL_CITY
-- ----------------------------
ALTER TABLE BASE_CMS_CAROUSEL_CITY ADD CHECK (CAROUSEL_CITY_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_CMS_CAROUSEL_CITY
-- ----------------------------
ALTER TABLE BASE_CMS_CAROUSEL_CITY ADD PRIMARY KEY (CAROUSEL_CITY_ID);

-- ----------------------------
-- Indexes structure for table BASE_CMS_CATEGORY
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_CMS_CATEGORY
-- ----------------------------
ALTER TABLE BASE_CMS_CATEGORY ADD CHECK (CATEGORY_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_CMS_CATEGORY
-- ----------------------------
ALTER TABLE BASE_CMS_CATEGORY ADD PRIMARY KEY (CATEGORY_ID);

-- ----------------------------
-- Indexes structure for table BASE_CMS_WEB_NOTICE
-- ----------------------------
CREATE INDEX IS_DISPLAY_IDX
ON BASE_CMS_WEB_NOTICE (IS_DISPLAY ASC)
LOGGING
VISIBLE;
CREATE INDEX NOTICE_COMPANY_ID_IDX
ON BASE_CMS_WEB_NOTICE (COMPANY_ID ASC)
LOGGING
VISIBLE;
CREATE INDEX NOTICE_ORDER_IDX
ON BASE_CMS_WEB_NOTICE (NOTICE_ORDER ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table BASE_CMS_WEB_NOTICE
-- ----------------------------
ALTER TABLE BASE_CMS_WEB_NOTICE ADD CHECK (NOTICE_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_CMS_WEB_NOTICE
-- ----------------------------
ALTER TABLE BASE_CMS_WEB_NOTICE ADD PRIMARY KEY (NOTICE_ID);

-- ----------------------------
-- Indexes structure for table BASE_CMS_WEB_NOTICE_CITY
-- ----------------------------
CREATE INDEX NOTICE_CITY_ID_IDX
ON BASE_CMS_WEB_NOTICE_CITY (CITY_ID ASC)
LOGGING
VISIBLE;
CREATE INDEX NOTICE_ID_IDX
ON BASE_CMS_WEB_NOTICE_CITY (NOTICE_ID ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table BASE_CMS_WEB_NOTICE_CITY
-- ----------------------------
ALTER TABLE BASE_CMS_WEB_NOTICE_CITY ADD CHECK (NOTICE_CITY_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_CMS_WEB_NOTICE_CITY
-- ----------------------------
ALTER TABLE BASE_CMS_WEB_NOTICE_CITY ADD PRIMARY KEY (NOTICE_CITY_ID);

-- ----------------------------
-- Indexes structure for table BASE_COMMON_MESSAGE_CONFIRM
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_COMMON_MESSAGE_CONFIRM
-- ----------------------------
ALTER TABLE BASE_COMMON_MESSAGE_CONFIRM ADD CHECK (CONFIRMID IS NOT NULL);
ALTER TABLE BASE_COMMON_MESSAGE_CONFIRM ADD CHECK (MESSAGEINDEX IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_COMMON_MESSAGE_CONFIRM
-- ----------------------------
ALTER TABLE BASE_COMMON_MESSAGE_CONFIRM ADD PRIMARY KEY (CONFIRMID);

-- ----------------------------
-- Indexes structure for table BASE_COMMON_TRANSACTION_CONFIR
-- ----------------------------
CREATE UNIQUE INDEX MESSAGEINDEX_UNIQUE
ON BASE_COMMON_TRANSACTION_CONFIR (MESSAGEINDEX ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table BASE_COMMON_TRANSACTION_CONFIR
-- ----------------------------
ALTER TABLE BASE_COMMON_TRANSACTION_CONFIR ADD CHECK (CONFIRMID IS NOT NULL);
ALTER TABLE BASE_COMMON_TRANSACTION_CONFIR ADD CHECK (MESSAGEINDEX IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_COMMON_TRANSACTION_CONFIR
-- ----------------------------
ALTER TABLE BASE_COMMON_TRANSACTION_CONFIR ADD PRIMARY KEY (CONFIRMID);

-- ----------------------------
-- Indexes structure for table BASE_COMMON_TXN_CONFIRM
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_COMMON_TXN_CONFIRM
-- ----------------------------
ALTER TABLE BASE_COMMON_TXN_CONFIRM ADD CHECK (CONFIRMID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_COMMON_TXN_CONFIRM
-- ----------------------------
ALTER TABLE BASE_COMMON_TXN_CONFIRM ADD PRIMARY KEY (CONFIRMID);

-- ----------------------------
-- Indexes structure for table BASE_CUST_PDA_USER_RELATION
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_CUST_PDA_USER_RELATION
-- ----------------------------
ALTER TABLE BASE_CUST_PDA_USER_RELATION ADD CHECK (RELATION_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_CUST_PDA_USER_RELATION
-- ----------------------------
ALTER TABLE BASE_CUST_PDA_USER_RELATION ADD PRIMARY KEY (RELATION_ID);

-- ----------------------------
-- Indexes structure for table BASE_DATA_EXPORT
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_DATA_EXPORT
-- ----------------------------
ALTER TABLE BASE_DATA_EXPORT ADD CHECK (DATA_EXP_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_DATA_EXPORT
-- ----------------------------
ALTER TABLE BASE_DATA_EXPORT ADD PRIMARY KEY (DATA_EXP_ID);

-- ----------------------------
-- Indexes structure for table BASE_DEPARTMENT
-- ----------------------------
CREATE INDEX IDX_BASE_DEPARTMENT_N1
ON BASE_DEPARTMENT (DEPARTMENT_NAME ASC)
LOGGING
VISIBLE;
CREATE INDEX IDX_BASE_DEPARTMENT_N2
ON BASE_DEPARTMENT (PARENT_DEPARTMENT_ID ASC)
LOGGING
VISIBLE;
CREATE INDEX IDX_BASE_DEPARTMENT_N3
ON BASE_DEPARTMENT (DEPARTMENT_CODE ASC)
LOGGING
VISIBLE;
CREATE INDEX IDX_BASE_DEPARTMENT_N4
ON BASE_DEPARTMENT (CHANNEL ASC)
LOGGING
VISIBLE;
CREATE INDEX IDX_BASE_DEPARTMENT_N5
ON BASE_DEPARTMENT (DEPARTMENT_TYPE ASC)
LOGGING
VISIBLE;
CREATE INDEX IDX_BASE_DEPARTMENT_N6
ON BASE_DEPARTMENT (BIZ_LINE_TYPE ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table BASE_DEPARTMENT
-- ----------------------------
ALTER TABLE BASE_DEPARTMENT ADD CHECK (DEPARTMENT_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_DEPARTMENT
-- ----------------------------
ALTER TABLE BASE_DEPARTMENT ADD PRIMARY KEY (DEPARTMENT_ID);

-- ----------------------------
-- Indexes structure for table BASE_DEPARTMENT_CUST
-- ----------------------------
CREATE INDEX BASE_ORGANIZATION_CUST_N1
ON BASE_DEPARTMENT_CUST (OU_ID ASC, DEPARTMENT_ID ASC, CUST_ACCOUNT_ID ASC, PRIMARY_FLAG ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table BASE_DEPARTMENT_CUST
-- ----------------------------
ALTER TABLE BASE_DEPARTMENT_CUST ADD CHECK (DEPARTMENT_CUST_ID IS NOT NULL);
ALTER TABLE BASE_DEPARTMENT_CUST ADD CHECK (OU_ID IS NOT NULL);
ALTER TABLE BASE_DEPARTMENT_CUST ADD CHECK (DEPARTMENT_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_DEPARTMENT_CUST
-- ----------------------------
ALTER TABLE BASE_DEPARTMENT_CUST ADD PRIMARY KEY (DEPARTMENT_CUST_ID);

-- ----------------------------
-- Indexes structure for table BASE_DEPARTMENT_HIERARCHY
-- ----------------------------
CREATE INDEX IDX_BASE_DEPT_HIERARCHY_N1
ON BASE_DEPARTMENT_HIERARCHY (OU_ID ASC, DEPARTMENT_ID ASC, SUBORDINATE_DEPARTMENT_ID ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table BASE_DEPARTMENT_HIERARCHY
-- ----------------------------
ALTER TABLE BASE_DEPARTMENT_HIERARCHY ADD CHECK (SEQ_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_DEPARTMENT_HIERARCHY
-- ----------------------------
ALTER TABLE BASE_DEPARTMENT_HIERARCHY ADD PRIMARY KEY (SEQ_ID);

-- ----------------------------
-- Indexes structure for table BASE_DEPARTMENT_LAN
-- ----------------------------
CREATE INDEX IDDEX_BDPL_V1
ON BASE_DEPARTMENT_LAN (DEPARTMENT_ID ASC)
LOGGING
VISIBLE;
CREATE INDEX IDDEX_BDPL_V2
ON BASE_DEPARTMENT_LAN (DEPARTMENT_NAME ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table BASE_DEPARTMENT_LAN
-- ----------------------------
ALTER TABLE BASE_DEPARTMENT_LAN ADD CHECK (DEPARTMENT_LAN_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_DEPARTMENT_LAN
-- ----------------------------
ALTER TABLE BASE_DEPARTMENT_LAN ADD PRIMARY KEY (DEPARTMENT_LAN_ID);

-- ----------------------------
-- Indexes structure for table BASE_DEPLOYEE_APP_HOST_INFO
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_DEPLOYEE_APP_HOST_INFO
-- ----------------------------
ALTER TABLE BASE_DEPLOYEE_APP_HOST_INFO ADD CHECK (HOST_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_DEPLOYEE_APP_HOST_INFO
-- ----------------------------
ALTER TABLE BASE_DEPLOYEE_APP_HOST_INFO ADD PRIMARY KEY (HOST_ID);

-- ----------------------------
-- Indexes structure for table BASE_DEPLOYEE_APP_INFO
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_DEPLOYEE_APP_INFO
-- ----------------------------
ALTER TABLE BASE_DEPLOYEE_APP_INFO ADD CHECK (APP_WAP_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_DEPLOYEE_APP_INFO
-- ----------------------------
ALTER TABLE BASE_DEPLOYEE_APP_INFO ADD PRIMARY KEY (APP_WAP_ID);

-- ----------------------------
-- Indexes structure for table BASE_DEPLOYEE_APP_MENU
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_DEPLOYEE_APP_MENU
-- ----------------------------
ALTER TABLE BASE_DEPLOYEE_APP_MENU ADD CHECK (APP_MENU_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_DEPLOYEE_APP_MENU
-- ----------------------------
ALTER TABLE BASE_DEPLOYEE_APP_MENU ADD PRIMARY KEY (APP_MENU_ID);

-- ----------------------------
-- Indexes structure for table BASE_EXPORT_RECORD
-- ----------------------------
CREATE UNIQUE INDEX EXPORT_ID_UNIQUE
ON BASE_EXPORT_RECORD (EXPORT_ID ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table BASE_EXPORT_RECORD
-- ----------------------------
ALTER TABLE BASE_EXPORT_RECORD ADD CHECK (ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_EXPORT_RECORD
-- ----------------------------
ALTER TABLE BASE_EXPORT_RECORD ADD PRIMARY KEY (ID);

-- ----------------------------
-- Indexes structure for table BASE_FAQ_HELP
-- ----------------------------
CREATE INDEX FAQ_ORDER_IDX
ON BASE_FAQ_HELP (FAQ_ORDER ASC)
LOGGING
VISIBLE;
CREATE INDEX FAQ_TYPE_IDX
ON BASE_FAQ_HELP (FAQ_TYPE ASC)
LOGGING
VISIBLE;
CREATE INDEX HELP_COMPANY_ID_IDX
ON BASE_FAQ_HELP (COMPANY_ID ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table BASE_FAQ_HELP
-- ----------------------------
ALTER TABLE BASE_FAQ_HELP ADD CHECK (FAQ_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_FAQ_HELP
-- ----------------------------
ALTER TABLE BASE_FAQ_HELP ADD PRIMARY KEY (FAQ_ID);

-- ----------------------------
-- Indexes structure for table BASE_FUNCTION_COLLECTION
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_FUNCTION_COLLECTION
-- ----------------------------
ALTER TABLE BASE_FUNCTION_COLLECTION ADD CHECK (FUNCTION_COLLECTION_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_FUNCTION_COLLECTION
-- ----------------------------
ALTER TABLE BASE_FUNCTION_COLLECTION ADD PRIMARY KEY (FUNCTION_COLLECTION_ID);

-- ----------------------------
-- Indexes structure for table BASE_FUNCTION_COLLECTION_LAN
-- ----------------------------
CREATE INDEX INDEX_COLLECTION_V1
ON BASE_FUNCTION_COLLECTION_LAN (FUNCTION_COLLECTION_ID ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table BASE_FUNCTION_COLLECTION_LAN
-- ----------------------------
ALTER TABLE BASE_FUNCTION_COLLECTION_LAN ADD CHECK (COLLECTION_LA_ID IS NOT NULL);
ALTER TABLE BASE_FUNCTION_COLLECTION_LAN ADD CHECK (FUNCTION_COLLECTION_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_FUNCTION_COLLECTION_LAN
-- ----------------------------
ALTER TABLE BASE_FUNCTION_COLLECTION_LAN ADD PRIMARY KEY (COLLECTION_LA_ID);

-- ----------------------------
-- Indexes structure for table BASE_FUNCTION_COLLECTION_USER
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_FUNCTION_COLLECTION_USER
-- ----------------------------
ALTER TABLE BASE_FUNCTION_COLLECTION_USER ADD CHECK (FUNCTION_COLLECTION_USER_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_FUNCTION_COLLECTION_USER
-- ----------------------------
ALTER TABLE BASE_FUNCTION_COLLECTION_USER ADD PRIMARY KEY (FUNCTION_COLLECTION_USER_ID);

-- ----------------------------
-- Indexes structure for table BASE_INV_STORE_CONTACT_T
-- ----------------------------
CREATE INDEX BASE_INV_STORE_CONTACT_T_N1
ON BASE_INV_STORE_CONTACT_T (START_DATE ASC, END_DATE ASC)
LOGGING
VISIBLE;
CREATE INDEX BASE_INV_STORE_CONTACT_T_N2
ON BASE_INV_STORE_CONTACT_T (STORE_CODE ASC)
LOGGING
VISIBLE;
CREATE INDEX BASE_INV_STORE_CONTACT_T_N3
ON BASE_INV_STORE_CONTACT_T (PERSON_ID ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table BASE_INV_STORE_CONTACT_T
-- ----------------------------
ALTER TABLE BASE_INV_STORE_CONTACT_T ADD CHECK (STORE_CONTACT_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_INV_STORE_CONTACT_T
-- ----------------------------
ALTER TABLE BASE_INV_STORE_CONTACT_T ADD PRIMARY KEY (STORE_CONTACT_ID);

-- ----------------------------
-- Indexes structure for table BASE_INV_STORE_T
-- ----------------------------
CREATE INDEX BASE_INV_STORE_T_N1
ON BASE_INV_STORE_T (STORE_CODE ASC)
LOGGING
VISIBLE;
CREATE INDEX BASE_INV_STORE_T_N2
ON BASE_INV_STORE_T (SUBINV_CODE ASC)
LOGGING
VISIBLE;
CREATE INDEX BASE_INV_STORE_T_N3
ON BASE_INV_STORE_T (ACCOUNT_NUMBER ASC)
LOGGING
VISIBLE;
CREATE INDEX BASE_INV_STORE_T_N4
ON BASE_INV_STORE_T (MAIN_SUBINV_CODE ASC)
LOGGING
VISIBLE;
CREATE INDEX BASE_INV_STORE_T_N5
ON BASE_INV_STORE_T (PROVINCE ASC)
LOGGING
VISIBLE;
CREATE INDEX BASE_INV_STORE_T_N6
ON BASE_INV_STORE_T (CITY ASC)
LOGGING
VISIBLE;
CREATE INDEX BASE_INV_STORE_T_N7
ON BASE_INV_STORE_T (MAIN_SUBINV_CODE ASC, START_DATE ASC, END_DATE ASC)
LOGGING
VISIBLE;
CREATE INDEX BASE_INV_STORE_T_N8
ON BASE_INV_STORE_T (OU_ID ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table BASE_INV_STORE_T
-- ----------------------------
ALTER TABLE BASE_INV_STORE_T ADD CHECK (STORE_CUST_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_INV_STORE_T
-- ----------------------------
ALTER TABLE BASE_INV_STORE_T ADD PRIMARY KEY (STORE_CUST_ID);

-- ----------------------------
-- Indexes structure for table BASE_ISSUE_FEEDBACK
-- ----------------------------
CREATE INDEX IDX_BASE_ISSUE_FEEDBACK_N1
ON BASE_ISSUE_FEEDBACK (SYSTEM_CODE ASC, OU_ID ASC, STATUS ASC)
LOGGING
VISIBLE;
CREATE INDEX IDX_BASE_ISSUE_FEEDBACK_N2
ON BASE_ISSUE_FEEDBACK (TITLE ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table BASE_ISSUE_FEEDBACK
-- ----------------------------
ALTER TABLE BASE_ISSUE_FEEDBACK ADD CHECK (FEEDBACK_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_ISSUE_FEEDBACK
-- ----------------------------
ALTER TABLE BASE_ISSUE_FEEDBACK ADD PRIMARY KEY (FEEDBACK_ID);

-- ----------------------------
-- Indexes structure for table BASE_JOB
-- ----------------------------
CREATE UNIQUE INDEX IDX_BASE_JOB_U1
ON BASE_JOB (OU_ID ASC, JOB_NAME ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table BASE_JOB
-- ----------------------------
ALTER TABLE BASE_JOB ADD CHECK (JOB_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_JOB
-- ----------------------------
ALTER TABLE BASE_JOB ADD PRIMARY KEY (JOB_ID);

-- ----------------------------
-- Indexes structure for table BASE_JOB_LAN
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_JOB_LAN
-- ----------------------------
ALTER TABLE BASE_JOB_LAN ADD CHECK (JOB_LAN_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_JOB_LAN
-- ----------------------------
ALTER TABLE BASE_JOB_LAN ADD PRIMARY KEY (JOB_LAN_ID);

-- ----------------------------
-- Indexes structure for table BASE_LOGIN_LOG
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_LOGIN_LOG
-- ----------------------------
ALTER TABLE BASE_LOGIN_LOG ADD CHECK (ID IS NOT NULL);
ALTER TABLE BASE_LOGIN_LOG ADD CHECK (USER_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_LOGIN_LOG
-- ----------------------------
ALTER TABLE BASE_LOGIN_LOG ADD PRIMARY KEY (ID);

-- ----------------------------
-- Indexes structure for table BASE_LOOKUP_TYPES
-- ----------------------------
CREATE INDEX IND_BASE_LOOKUP_TYPES_N1
ON BASE_LOOKUP_TYPES (LOOKUP_TYPE ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table BASE_LOOKUP_TYPES
-- ----------------------------
ALTER TABLE BASE_LOOKUP_TYPES ADD CHECK (LOOKUP_TYPE_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_LOOKUP_TYPES
-- ----------------------------
ALTER TABLE BASE_LOOKUP_TYPES ADD PRIMARY KEY (LOOKUP_TYPE_ID);

-- ----------------------------
-- Indexes structure for table BASE_LOOKUP_TYPES_LAN
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_LOOKUP_TYPES_LAN
-- ----------------------------
ALTER TABLE BASE_LOOKUP_TYPES_LAN ADD CHECK (LOOKUP_TYPE_LAN_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_LOOKUP_TYPES_LAN
-- ----------------------------
ALTER TABLE BASE_LOOKUP_TYPES_LAN ADD PRIMARY KEY (LOOKUP_TYPE_LAN_ID);

-- ----------------------------
-- Indexes structure for table BASE_LOOKUP_VALUES
-- ----------------------------
CREATE INDEX IND_BASE_LOOKUP_VALUES_N1
ON BASE_LOOKUP_VALUES (LOOKUP_TYPE ASC, LOOKUP_CODE ASC, SYSTEM_CODE ASC)
LOGGING
VISIBLE;
CREATE INDEX IND_BASE_LOOKUP_VALUES_N2
ON BASE_LOOKUP_VALUES (PARENT_LOOKUP_VALUES_ID ASC)
LOGGING
VISIBLE;
CREATE INDEX NORMAL_INDEX_LOOKUP_CODE
ON BASE_LOOKUP_VALUES (LOOKUP_CODE ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table BASE_LOOKUP_VALUES
-- ----------------------------
ALTER TABLE BASE_LOOKUP_VALUES ADD CHECK (LOOKUP_VALUES_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_LOOKUP_VALUES
-- ----------------------------
ALTER TABLE BASE_LOOKUP_VALUES ADD PRIMARY KEY (LOOKUP_VALUES_ID);

-- ----------------------------
-- Indexes structure for table BASE_LOOKUP_VALUES_LAN
-- ----------------------------
CREATE INDEX INDEX_BLVL_V1
ON BASE_LOOKUP_VALUES_LAN (LOOKUP_VALUES_ID ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table BASE_LOOKUP_VALUES_LAN
-- ----------------------------
ALTER TABLE BASE_LOOKUP_VALUES_LAN ADD CHECK (LOOKUP_VALUES_LAN_ID IS NOT NULL);
ALTER TABLE BASE_LOOKUP_VALUES_LAN ADD CHECK (LOOKUP_VALUES_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_LOOKUP_VALUES_LAN
-- ----------------------------
ALTER TABLE BASE_LOOKUP_VALUES_LAN ADD PRIMARY KEY (LOOKUP_VALUES_LAN_ID);

-- ----------------------------
-- Indexes structure for table BASE_MANUAL_SUPPLEMENT
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_MANUAL_SUPPLEMENT
-- ----------------------------
ALTER TABLE BASE_MANUAL_SUPPLEMENT ADD CHECK (MANUAL_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_MANUAL_SUPPLEMENT
-- ----------------------------
ALTER TABLE BASE_MANUAL_SUPPLEMENT ADD PRIMARY KEY (MANUAL_ID);

-- ----------------------------
-- Indexes structure for table BASE_MENU
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_MENU
-- ----------------------------
ALTER TABLE BASE_MENU ADD CHECK (MENU_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_MENU
-- ----------------------------
ALTER TABLE BASE_MENU ADD PRIMARY KEY (MENU_ID);

-- ----------------------------
-- Indexes structure for table BASE_MENU_LANGUAGE
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_MENU_LANGUAGE
-- ----------------------------
ALTER TABLE BASE_MENU_LANGUAGE ADD CHECK (LAN_MENU_ID IS NOT NULL);
ALTER TABLE BASE_MENU_LANGUAGE ADD CHECK (MENU_ID IS NOT NULL);
ALTER TABLE BASE_MENU_LANGUAGE ADD CHECK (LANGUAGE IS NOT NULL);
ALTER TABLE BASE_MENU_LANGUAGE ADD CHECK (VERSION_NUM IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_MENU_LANGUAGE
-- ----------------------------
ALTER TABLE BASE_MENU_LANGUAGE ADD PRIMARY KEY (LAN_MENU_ID, VERSION_NUM);

-- ----------------------------
-- Indexes structure for table BASE_MESSAGE_BU
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_MESSAGE_BU
-- ----------------------------
ALTER TABLE BASE_MESSAGE_BU ADD CHECK (BU_MESS_ID IS NOT NULL);
ALTER TABLE BASE_MESSAGE_BU ADD CHECK (CON_MESS_ID IS NOT NULL);
ALTER TABLE BASE_MESSAGE_BU ADD CHECK (BU_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_MESSAGE_BU
-- ----------------------------
ALTER TABLE BASE_MESSAGE_BU ADD PRIMARY KEY (BU_MESS_ID);

-- ----------------------------
-- Indexes structure for table BASE_MESSAGE_CONTENT
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_MESSAGE_CONTENT
-- ----------------------------
ALTER TABLE BASE_MESSAGE_CONTENT ADD CHECK (CON_MESS_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_MESSAGE_CONTENT
-- ----------------------------
ALTER TABLE BASE_MESSAGE_CONTENT ADD PRIMARY KEY (CON_MESS_ID);

-- ----------------------------
-- Indexes structure for table BASE_MESSAGE_DEPARTMENT
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_MESSAGE_DEPARTMENT
-- ----------------------------
ALTER TABLE BASE_MESSAGE_DEPARTMENT ADD CHECK (DEP_MESS_ID IS NOT NULL);
ALTER TABLE BASE_MESSAGE_DEPARTMENT ADD CHECK (CON_MESS_ID IS NOT NULL);
ALTER TABLE BASE_MESSAGE_DEPARTMENT ADD CHECK (BU_MESS_ID IS NOT NULL);
ALTER TABLE BASE_MESSAGE_DEPARTMENT ADD CHECK (DEPT_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_MESSAGE_DEPARTMENT
-- ----------------------------
ALTER TABLE BASE_MESSAGE_DEPARTMENT ADD PRIMARY KEY (DEP_MESS_ID);

-- ----------------------------
-- Indexes structure for table BASE_MESSAGE_INSTATION
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_MESSAGE_INSTATION
-- ----------------------------
ALTER TABLE BASE_MESSAGE_INSTATION ADD CHECK (INS_MESS_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_MESSAGE_INSTATION
-- ----------------------------
ALTER TABLE BASE_MESSAGE_INSTATION ADD PRIMARY KEY (INS_MESS_ID);

-- ----------------------------
-- Indexes structure for table BASE_MESSAGE_PERSON
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_MESSAGE_PERSON
-- ----------------------------
ALTER TABLE BASE_MESSAGE_PERSON ADD CHECK (PER_MESS_ID IS NOT NULL);
ALTER TABLE BASE_MESSAGE_PERSON ADD CHECK (CON_MESS_ID IS NOT NULL);
ALTER TABLE BASE_MESSAGE_PERSON ADD CHECK (BU_MESS_ID IS NOT NULL);
ALTER TABLE BASE_MESSAGE_PERSON ADD CHECK (DEP_MESS_ID IS NOT NULL);
ALTER TABLE BASE_MESSAGE_PERSON ADD CHECK (DEPT_ID IS NOT NULL);
ALTER TABLE BASE_MESSAGE_PERSON ADD CHECK (USER_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_MESSAGE_PERSON
-- ----------------------------
ALTER TABLE BASE_MESSAGE_PERSON ADD PRIMARY KEY (PER_MESS_ID);

-- ----------------------------
-- Indexes structure for table BASE_ORG_RESPONSIBILITY
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_ORG_RESPONSIBILITY
-- ----------------------------
ALTER TABLE BASE_ORG_RESPONSIBILITY ADD CHECK (ORG_RESP_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_ORG_RESPONSIBILITY
-- ----------------------------
ALTER TABLE BASE_ORG_RESPONSIBILITY ADD PRIMARY KEY (ORG_RESP_ID);

-- ----------------------------
-- Indexes structure for table BASE_ORGANIZATION
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_ORGANIZATION
-- ----------------------------
ALTER TABLE BASE_ORGANIZATION ADD CHECK (ORG_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_ORGANIZATION
-- ----------------------------
ALTER TABLE BASE_ORGANIZATION ADD PRIMARY KEY (ORG_ID);

-- ----------------------------
-- Indexes structure for table BASE_ORGANIZATION_LAN
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_ORGANIZATION_LAN
-- ----------------------------
ALTER TABLE BASE_ORGANIZATION_LAN ADD CHECK (ORG_EN_ID IS NOT NULL);
ALTER TABLE BASE_ORGANIZATION_LAN ADD CHECK (ORG_ID IS NOT NULL);
ALTER TABLE BASE_ORGANIZATION_LAN ADD CHECK (PARENT_ORG_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_ORGANIZATION_LAN
-- ----------------------------
ALTER TABLE BASE_ORGANIZATION_LAN ADD PRIMARY KEY (ORG_EN_ID);

-- ----------------------------
-- Indexes structure for table BASE_PDA_INV_CFG
-- ----------------------------
CREATE INDEX INDEX_INV_CODE
ON BASE_PDA_INV_CFG (SUB_INV_CODE ASC)
LOGGING
VISIBLE;
CREATE INDEX INDEX_USER_ID
ON BASE_PDA_INV_CFG (USER_ID ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table BASE_PDA_INV_CFG
-- ----------------------------
ALTER TABLE BASE_PDA_INV_CFG ADD CHECK (CFG_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_PDA_INV_CFG
-- ----------------------------
ALTER TABLE BASE_PDA_INV_CFG ADD PRIMARY KEY (CFG_ID);

-- ----------------------------
-- Indexes structure for table BASE_PDA_ROLE_CFG
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_PDA_ROLE_CFG
-- ----------------------------
ALTER TABLE BASE_PDA_ROLE_CFG ADD CHECK (PDA_ROLE_CFG_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_PDA_ROLE_CFG
-- ----------------------------
ALTER TABLE BASE_PDA_ROLE_CFG ADD PRIMARY KEY (PDA_ROLE_CFG_ID);

-- ----------------------------
-- Indexes structure for table BASE_PERSON
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_PERSON
-- ----------------------------
ALTER TABLE BASE_PERSON ADD CHECK (PERSON_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_PERSON
-- ----------------------------
ALTER TABLE BASE_PERSON ADD PRIMARY KEY (PERSON_ID);

-- ----------------------------
-- Indexes structure for table BASE_PERSON_ASSIGN
-- ----------------------------
CREATE INDEX IDX_BASE_PERSON_ASSIGN_N1
ON BASE_PERSON_ASSIGN (PERSON_ID ASC)
LOGGING
VISIBLE;
CREATE INDEX IDX_BASE_PERSON_ASSIGN_N2
ON BASE_PERSON_ASSIGN (POSITION_ID ASC)
LOGGING
VISIBLE;
CREATE INDEX IDX_BASE_PERSON_ASSIGN_N3
ON BASE_PERSON_ASSIGN (JOB_ID ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table BASE_PERSON_ASSIGN
-- ----------------------------
ALTER TABLE BASE_PERSON_ASSIGN ADD CHECK (ASSIGN_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_PERSON_ASSIGN
-- ----------------------------
ALTER TABLE BASE_PERSON_ASSIGN ADD PRIMARY KEY (ASSIGN_ID);

-- ----------------------------
-- Indexes structure for table BASE_PERSON_CUST
-- ----------------------------
CREATE INDEX BASE_PERSON_CUST_N1
ON BASE_PERSON_CUST (OU_ID ASC, PERSON_ID ASC, CUST_ACCOUNT_ID ASC, PRIMARY_FLAG ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table BASE_PERSON_CUST
-- ----------------------------
ALTER TABLE BASE_PERSON_CUST ADD CHECK (PERSON_CUST_ID IS NOT NULL);
ALTER TABLE BASE_PERSON_CUST ADD CHECK (OU_ID IS NOT NULL);
ALTER TABLE BASE_PERSON_CUST ADD CHECK (PERSON_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_PERSON_CUST
-- ----------------------------
ALTER TABLE BASE_PERSON_CUST ADD PRIMARY KEY (PERSON_CUST_ID);

-- ----------------------------
-- Indexes structure for table BASE_PERSON_LAN
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_PERSON_LAN
-- ----------------------------
ALTER TABLE BASE_PERSON_LAN ADD CHECK (PERSON_ID_EN IS NOT NULL);
ALTER TABLE BASE_PERSON_LAN ADD CHECK (PERSON_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_PERSON_LAN
-- ----------------------------
ALTER TABLE BASE_PERSON_LAN ADD PRIMARY KEY (PERSON_ID_EN);

-- ----------------------------
-- Indexes structure for table BASE_PERSON_LEVEL
-- ----------------------------
CREATE INDEX IDX_BASE_PERSON_LEVEL_N1
ON BASE_PERSON_LEVEL (POSITION_ID ASC)
LOGGING
VISIBLE;
CREATE INDEX IDX_BASE_PERSON_LEVEL_N2
ON BASE_PERSON_LEVEL (MGR_POSITION_ID ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table BASE_PERSON_LEVEL
-- ----------------------------
ALTER TABLE BASE_PERSON_LEVEL ADD CHECK (LEVEL_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_PERSON_LEVEL
-- ----------------------------
ALTER TABLE BASE_PERSON_LEVEL ADD PRIMARY KEY (LEVEL_ID);

-- ----------------------------
-- Indexes structure for table BASE_PERSON_ORGANIZATION
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_PERSON_ORGANIZATION
-- ----------------------------
ALTER TABLE BASE_PERSON_ORGANIZATION ADD CHECK (PERSON_ORG_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_PERSON_ORGANIZATION
-- ----------------------------
ALTER TABLE BASE_PERSON_ORGANIZATION ADD PRIMARY KEY (PERSON_ORG_ID);

-- ----------------------------
-- Indexes structure for table BASE_POSITION
-- ----------------------------
CREATE INDEX IDX_BASE_POSITION_N1
ON BASE_POSITION (POSITION_NAME ASC)
LOGGING
VISIBLE;
CREATE INDEX IDX_BASE_POSITION_N2
ON BASE_POSITION (DEPARTMENT_ID ASC)
LOGGING
VISIBLE;
CREATE INDEX IDX_BASE_POSITION_N3
ON BASE_POSITION (JOB_ID ASC)
LOGGING
VISIBLE;
CREATE INDEX IDX_BASE_POSITION_U1
ON BASE_POSITION (OU_ID ASC, POSITION_NAME ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table BASE_POSITION
-- ----------------------------
ALTER TABLE BASE_POSITION ADD CHECK (POSITION_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_POSITION
-- ----------------------------
ALTER TABLE BASE_POSITION ADD PRIMARY KEY (POSITION_ID);

-- ----------------------------
-- Indexes structure for table BASE_POSITION_LAN
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_POSITION_LAN
-- ----------------------------
ALTER TABLE BASE_POSITION_LAN ADD CHECK (POSITION_ID_LAN IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_POSITION_LAN
-- ----------------------------
ALTER TABLE BASE_POSITION_LAN ADD PRIMARY KEY (POSITION_ID_LAN);

-- ----------------------------
-- Indexes structure for table BASE_PRIVILEGE_DETAIL
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_PRIVILEGE_DETAIL
-- ----------------------------
ALTER TABLE BASE_PRIVILEGE_DETAIL ADD CHECK (PRIVILEGE_DETAIL_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_PRIVILEGE_DETAIL
-- ----------------------------
ALTER TABLE BASE_PRIVILEGE_DETAIL ADD PRIMARY KEY (PRIVILEGE_DETAIL_ID);

-- ----------------------------
-- Indexes structure for table BASE_PRIVILEGE_RECORD
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_PRIVILEGE_RECORD
-- ----------------------------
ALTER TABLE BASE_PRIVILEGE_RECORD ADD CHECK (PRIVILEGE_RECORD_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_PRIVILEGE_RECORD
-- ----------------------------
ALTER TABLE BASE_PRIVILEGE_RECORD ADD PRIMARY KEY (PRIVILEGE_RECORD_ID);

-- ----------------------------
-- Indexes structure for table BASE_PRODUCT_INFO
-- ----------------------------

-- ----------------------------
-- Uniques structure for table BASE_PRODUCT_INFO
-- ----------------------------
ALTER TABLE BASE_PRODUCT_INFO ADD UNIQUE (ITEM_CODE, ORGANIZATION_ID);
ALTER TABLE BASE_PRODUCT_INFO ADD UNIQUE (ITEM_ID, ORGANIZATION_ID);

-- ----------------------------
-- Checks structure for table BASE_PRODUCT_INFO
-- ----------------------------
ALTER TABLE BASE_PRODUCT_INFO ADD CHECK (PRODUCT_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_PRODUCT_INFO
-- ----------------------------
ALTER TABLE BASE_PRODUCT_INFO ADD PRIMARY KEY (PRODUCT_ID);

-- ----------------------------
-- Indexes structure for table BASE_PRODUCT_INV
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_PRODUCT_INV
-- ----------------------------
ALTER TABLE BASE_PRODUCT_INV ADD CHECK (PRODUCT_INV_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_PRODUCT_INV
-- ----------------------------
ALTER TABLE BASE_PRODUCT_INV ADD PRIMARY KEY (PRODUCT_INV_ID);

-- ----------------------------
-- Indexes structure for table BASE_PROFILE
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_PROFILE
-- ----------------------------
ALTER TABLE BASE_PROFILE ADD CHECK (PROFILE_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_PROFILE
-- ----------------------------
ALTER TABLE BASE_PROFILE ADD PRIMARY KEY (PROFILE_ID);

-- ----------------------------
-- Indexes structure for table BASE_PROFILE_LAN
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_PROFILE_LAN
-- ----------------------------
ALTER TABLE BASE_PROFILE_LAN ADD CHECK (PROFILE_LAN_ID IS NOT NULL);
ALTER TABLE BASE_PROFILE_LAN ADD CHECK (PROFILE_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_PROFILE_LAN
-- ----------------------------
ALTER TABLE BASE_PROFILE_LAN ADD PRIMARY KEY (PROFILE_LAN_ID);

-- ----------------------------
-- Indexes structure for table BASE_PROFILE_VALUE
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_PROFILE_VALUE
-- ----------------------------
ALTER TABLE BASE_PROFILE_VALUE ADD CHECK (PROFILE_VALUE_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_PROFILE_VALUE
-- ----------------------------
ALTER TABLE BASE_PROFILE_VALUE ADD PRIMARY KEY (PROFILE_VALUE_ID);

-- ----------------------------
-- Indexes structure for table BASE_PROFILE_VALUE_LAN
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_PROFILE_VALUE_LAN
-- ----------------------------
ALTER TABLE BASE_PROFILE_VALUE_LAN ADD CHECK (PROFILE_VALUE_LAN_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_PROFILE_VALUE_LAN
-- ----------------------------
ALTER TABLE BASE_PROFILE_VALUE_LAN ADD PRIMARY KEY (PROFILE_VALUE_LAN_ID);

-- ----------------------------
-- Indexes structure for table BASE_PUBLISH_APP_INFO
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_PUBLISH_APP_INFO
-- ----------------------------
ALTER TABLE BASE_PUBLISH_APP_INFO ADD CHECK (APP_WAP_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_PUBLISH_APP_INFO
-- ----------------------------
ALTER TABLE BASE_PUBLISH_APP_INFO ADD PRIMARY KEY (APP_WAP_ID);

-- ----------------------------
-- Indexes structure for table BASE_REPORT_CHARTS_TYPE
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_REPORT_CHARTS_TYPE
-- ----------------------------
ALTER TABLE BASE_REPORT_CHARTS_TYPE ADD CHECK (CHARTS_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_REPORT_CHARTS_TYPE
-- ----------------------------
ALTER TABLE BASE_REPORT_CHARTS_TYPE ADD PRIMARY KEY (CHARTS_ID);

-- ----------------------------
-- Indexes structure for table BASE_REPORT_CHARTS_TYPE_LAN
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_REPORT_CHARTS_TYPE_LAN
-- ----------------------------
ALTER TABLE BASE_REPORT_CHARTS_TYPE_LAN ADD CHECK (CHARTS_LAN_ID IS NOT NULL);
ALTER TABLE BASE_REPORT_CHARTS_TYPE_LAN ADD CHECK (CHARTS_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_REPORT_CHARTS_TYPE_LAN
-- ----------------------------
ALTER TABLE BASE_REPORT_CHARTS_TYPE_LAN ADD PRIMARY KEY (CHARTS_LAN_ID);

-- ----------------------------
-- Indexes structure for table BASE_REPORT_DATASOURCE
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_REPORT_DATASOURCE
-- ----------------------------
ALTER TABLE BASE_REPORT_DATASOURCE ADD CHECK (DS_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_REPORT_DATASOURCE
-- ----------------------------
ALTER TABLE BASE_REPORT_DATASOURCE ADD PRIMARY KEY (DS_ID);

-- ----------------------------
-- Indexes structure for table BASE_REPORT_DATASOURCE_LAN
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_REPORT_DATASOURCE_LAN
-- ----------------------------
ALTER TABLE BASE_REPORT_DATASOURCE_LAN ADD CHECK (EN_ID IS NOT NULL);
ALTER TABLE BASE_REPORT_DATASOURCE_LAN ADD CHECK (DS_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_REPORT_DATASOURCE_LAN
-- ----------------------------
ALTER TABLE BASE_REPORT_DATASOURCE_LAN ADD PRIMARY KEY (EN_ID);

-- ----------------------------
-- Indexes structure for table BASE_REPORT_GROUP
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_REPORT_GROUP
-- ----------------------------
ALTER TABLE BASE_REPORT_GROUP ADD CHECK (REPORT_GROUP_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_REPORT_GROUP
-- ----------------------------
ALTER TABLE BASE_REPORT_GROUP ADD PRIMARY KEY (REPORT_GROUP_ID);

-- ----------------------------
-- Indexes structure for table BASE_REPORT_GROUP_HEADER
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_REPORT_GROUP_HEADER
-- ----------------------------
ALTER TABLE BASE_REPORT_GROUP_HEADER ADD CHECK (REPORT_GROUP_HEADER_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_REPORT_GROUP_HEADER
-- ----------------------------
ALTER TABLE BASE_REPORT_GROUP_HEADER ADD PRIMARY KEY (REPORT_GROUP_HEADER_ID);

-- ----------------------------
-- Indexes structure for table BASE_REPORT_HEADER
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_REPORT_HEADER
-- ----------------------------
ALTER TABLE BASE_REPORT_HEADER ADD CHECK (REPORT_HEADER_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_REPORT_HEADER
-- ----------------------------
ALTER TABLE BASE_REPORT_HEADER ADD PRIMARY KEY (REPORT_HEADER_ID);

-- ----------------------------
-- Indexes structure for table BASE_REPORT_LINE
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_REPORT_LINE
-- ----------------------------
ALTER TABLE BASE_REPORT_LINE ADD CHECK (REPORT_LINE_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_REPORT_LINE
-- ----------------------------
ALTER TABLE BASE_REPORT_LINE ADD PRIMARY KEY (REPORT_LINE_ID);

-- ----------------------------
-- Indexes structure for table BASE_REQUEST_LOG
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_REQUEST_LOG
-- ----------------------------
ALTER TABLE BASE_REQUEST_LOG ADD CHECK (ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_REQUEST_LOG
-- ----------------------------
ALTER TABLE BASE_REQUEST_LOG ADD PRIMARY KEY (ID);

-- ----------------------------
-- Indexes structure for table BASE_RESOURCE
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_RESOURCE
-- ----------------------------
ALTER TABLE BASE_RESOURCE ADD CHECK (RESOURCE_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_RESOURCE
-- ----------------------------
ALTER TABLE BASE_RESOURCE ADD PRIMARY KEY (RESOURCE_ID);

-- ----------------------------
-- Indexes structure for table BASE_RESOURCE_LAN
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_RESOURCE_LAN
-- ----------------------------
ALTER TABLE BASE_RESOURCE_LAN ADD CHECK (RESOURCE_LANGUAGE_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_RESOURCE_LAN
-- ----------------------------
ALTER TABLE BASE_RESOURCE_LAN ADD PRIMARY KEY (RESOURCE_LANGUAGE_ID);

-- ----------------------------
-- Indexes structure for table BASE_RESPONSIBILITY
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_RESPONSIBILITY
-- ----------------------------
ALTER TABLE BASE_RESPONSIBILITY ADD CHECK (RESPONSIBILITY_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_RESPONSIBILITY
-- ----------------------------
ALTER TABLE BASE_RESPONSIBILITY ADD PRIMARY KEY (RESPONSIBILITY_ID);

-- ----------------------------
-- Indexes structure for table BASE_RESPONSIBILITY_LAN
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_RESPONSIBILITY_LAN
-- ----------------------------
ALTER TABLE BASE_RESPONSIBILITY_LAN ADD CHECK (LAN_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_RESPONSIBILITY_LAN
-- ----------------------------
ALTER TABLE BASE_RESPONSIBILITY_LAN ADD PRIMARY KEY (LAN_ID);

-- ----------------------------
-- Indexes structure for table BASE_RESPONSIBILITY_ROLE
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_RESPONSIBILITY_ROLE
-- ----------------------------
ALTER TABLE BASE_RESPONSIBILITY_ROLE ADD CHECK (RESP_ROLE_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_RESPONSIBILITY_ROLE
-- ----------------------------
ALTER TABLE BASE_RESPONSIBILITY_ROLE ADD PRIMARY KEY (RESP_ROLE_ID);

-- ----------------------------
-- Indexes structure for table BASE_RESPONSIBILITY_ROLE_LAN
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_RESPONSIBILITY_ROLE_LAN
-- ----------------------------
ALTER TABLE BASE_RESPONSIBILITY_ROLE_LAN ADD CHECK (LAN_ROLE_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_RESPONSIBILITY_ROLE_LAN
-- ----------------------------
ALTER TABLE BASE_RESPONSIBILITY_ROLE_LAN ADD PRIMARY KEY (LAN_ROLE_ID);

-- ----------------------------
-- Indexes structure for table BASE_ROLE
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_ROLE
-- ----------------------------
ALTER TABLE BASE_ROLE ADD CHECK (ROLE_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_ROLE
-- ----------------------------
ALTER TABLE BASE_ROLE ADD PRIMARY KEY (ROLE_ID);

-- ----------------------------
-- Indexes structure for table BASE_ROLE_LANGUAGE
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_ROLE_LANGUAGE
-- ----------------------------
ALTER TABLE BASE_ROLE_LANGUAGE ADD CHECK (ROLE_LANGUAGE_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_ROLE_LANGUAGE
-- ----------------------------
ALTER TABLE BASE_ROLE_LANGUAGE ADD PRIMARY KEY (ROLE_LANGUAGE_ID);

-- ----------------------------
-- Indexes structure for table BASE_ROLE_MENU
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_ROLE_MENU
-- ----------------------------
ALTER TABLE BASE_ROLE_MENU ADD CHECK (ROLE_MENU_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_ROLE_MENU
-- ----------------------------
ALTER TABLE BASE_ROLE_MENU ADD PRIMARY KEY (ROLE_MENU_ID);

-- ----------------------------
-- Indexes structure for table BASE_ROLE_RESOURCE
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_ROLE_RESOURCE
-- ----------------------------
ALTER TABLE BASE_ROLE_RESOURCE ADD CHECK (ROLE_RESOURCE_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_ROLE_RESOURCE
-- ----------------------------
ALTER TABLE BASE_ROLE_RESOURCE ADD PRIMARY KEY (ROLE_RESOURCE_ID);

-- ----------------------------
-- Indexes structure for table BASE_SYSTEM_SSO
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_SYSTEM_SSO
-- ----------------------------
ALTER TABLE BASE_SYSTEM_SSO ADD CHECK (SYS_SSO_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_SYSTEM_SSO
-- ----------------------------
ALTER TABLE BASE_SYSTEM_SSO ADD PRIMARY KEY (SYS_SSO_ID);

-- ----------------------------
-- Indexes structure for table BASE_TASK_COLLECTION
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_TASK_COLLECTION
-- ----------------------------
ALTER TABLE BASE_TASK_COLLECTION ADD CHECK (TASK_COLLECTION_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_TASK_COLLECTION
-- ----------------------------
ALTER TABLE BASE_TASK_COLLECTION ADD PRIMARY KEY (TASK_COLLECTION_ID);

-- ----------------------------
-- Indexes structure for table BASE_USER_RESPONSIBILITY
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_USER_RESPONSIBILITY
-- ----------------------------
ALTER TABLE BASE_USER_RESPONSIBILITY ADD CHECK (RESP_USER_ID IS NOT NULL);
ALTER TABLE BASE_USER_RESPONSIBILITY ADD CHECK (USER_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_USER_RESPONSIBILITY
-- ----------------------------
ALTER TABLE BASE_USER_RESPONSIBILITY ADD PRIMARY KEY (RESP_USER_ID);

-- ----------------------------
-- Indexes structure for table BASE_USERS
-- ----------------------------
CREATE INDEX NORMAL_INDEX_PERSON_ID
ON BASE_USERS (PERSON_ID ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table BASE_USERS
-- ----------------------------
ALTER TABLE BASE_USERS ADD CHECK (USER_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_USERS
-- ----------------------------
ALTER TABLE BASE_USERS ADD PRIMARY KEY (USER_ID);

-- ----------------------------
-- Indexes structure for table BASE_USERS_LANGUAGE
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_USERS_LANGUAGE
-- ----------------------------
ALTER TABLE BASE_USERS_LANGUAGE ADD CHECK (USER_LANGUAGE_ID IS NOT NULL);
ALTER TABLE BASE_USERS_LANGUAGE ADD CHECK (USER_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_USERS_LANGUAGE
-- ----------------------------
ALTER TABLE BASE_USERS_LANGUAGE ADD PRIMARY KEY (USER_LANGUAGE_ID);

-- ----------------------------
-- Indexes structure for table BASE_WAREHOUSE_MAPPING
-- ----------------------------
CREATE INDEX INDEX_ACCOUNT_CODE
ON BASE_WAREHOUSE_MAPPING (ACCOUNT_CODE ASC)
LOGGING
VISIBLE;
CREATE INDEX INDEX_ORG_ID
ON BASE_WAREHOUSE_MAPPING (ORG_ID ASC)
LOGGING
VISIBLE;
CREATE INDEX INDEX_WAREHOUSE_CODE
ON BASE_WAREHOUSE_MAPPING (WAREHOUSE_CODE ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table BASE_WAREHOUSE_MAPPING
-- ----------------------------
ALTER TABLE BASE_WAREHOUSE_MAPPING ADD CHECK (WAREHOUSE_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_WAREHOUSE_MAPPING
-- ----------------------------
ALTER TABLE BASE_WAREHOUSE_MAPPING ADD PRIMARY KEY (WAREHOUSE_ID);

-- ----------------------------
-- Indexes structure for table BASE_WECHAT_MNG
-- ----------------------------

-- ----------------------------
-- Checks structure for table BASE_WECHAT_MNG
-- ----------------------------
ALTER TABLE BASE_WECHAT_MNG ADD CHECK (WX_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table BASE_WECHAT_MNG
-- ----------------------------
ALTER TABLE BASE_WECHAT_MNG ADD PRIMARY KEY (WX_ID);

-- ----------------------------
-- Indexes structure for table CUX_CDM_ACCESS_BASEDATA
-- ----------------------------

-- ----------------------------
-- Checks structure for table CUX_CDM_ACCESS_BASEDATA
-- ----------------------------
ALTER TABLE CUX_CDM_ACCESS_BASEDATA ADD CHECK (ORG_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table CUX_CDM_ACCESS_BASEDATA
-- ----------------------------
ALTER TABLE CUX_CDM_ACCESS_BASEDATA ADD PRIMARY KEY (ORG_ID);

-- ----------------------------
-- Indexes structure for table DOMAIN_WX
-- ----------------------------

-- ----------------------------
-- Checks structure for table DOMAIN_WX
-- ----------------------------
ALTER TABLE DOMAIN_WX ADD CHECK (CONFIGURE_ID IS NOT NULL);
ALTER TABLE DOMAIN_WX ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE DOMAIN_WX ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE DOMAIN_WX ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE DOMAIN_WX ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);
ALTER TABLE DOMAIN_WX ADD CHECK (LAST_UPDATE_LOGIN IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table DOMAIN_WX
-- ----------------------------
ALTER TABLE DOMAIN_WX ADD PRIMARY KEY (CONFIGURE_ID);

-- ----------------------------
-- Indexes structure for table EW_CONFIGURATION_HEAD
-- ----------------------------
CREATE INDEX VR_EW_CONFIGURATION_HEAD_N1
ON EW_CONFIGURATION_HEAD (RULE_BUSINESS_LINE_CODE ASC)
LOGGING
VISIBLE;
CREATE INDEX VR_EW_CONFIGURATION_HEAD_N2
ON EW_CONFIGURATION_HEAD (RULE_EXP_CODE ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table EW_CONFIGURATION_HEAD
-- ----------------------------
ALTER TABLE EW_CONFIGURATION_HEAD ADD CHECK (EWC_HEAD_ID IS NOT NULL);
ALTER TABLE EW_CONFIGURATION_HEAD ADD CHECK (START_DATE_ACTIVE IS NOT NULL);
ALTER TABLE EW_CONFIGURATION_HEAD ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE EW_CONFIGURATION_HEAD ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE EW_CONFIGURATION_HEAD ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE EW_CONFIGURATION_HEAD ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table EW_CONFIGURATION_HEAD
-- ----------------------------
ALTER TABLE EW_CONFIGURATION_HEAD ADD PRIMARY KEY (EWC_HEAD_ID);

-- ----------------------------
-- Indexes structure for table EW_CONFIGURATION_LINE
-- ----------------------------
CREATE INDEX VR_EW_CONFIGURATION_LINE_N1
ON EW_CONFIGURATION_LINE (EWC_HEAD_ID ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table EW_CONFIGURATION_LINE
-- ----------------------------
ALTER TABLE EW_CONFIGURATION_LINE ADD CHECK (EWC_LINE_ID IS NOT NULL);
ALTER TABLE EW_CONFIGURATION_LINE ADD CHECK (START_DATE_ACTIVE IS NOT NULL);
ALTER TABLE EW_CONFIGURATION_LINE ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE EW_CONFIGURATION_LINE ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE EW_CONFIGURATION_LINE ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE EW_CONFIGURATION_LINE ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table EW_CONFIGURATION_LINE
-- ----------------------------
ALTER TABLE EW_CONFIGURATION_LINE ADD PRIMARY KEY (EWC_LINE_ID);

-- ----------------------------
-- Indexes structure for table EW_CONFIGURATION_MAN
-- ----------------------------
CREATE INDEX VR_EW_CONFIGURATION_MAN_N1
ON EW_CONFIGURATION_MAN (EWC_LINE_ID ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table EW_CONFIGURATION_MAN
-- ----------------------------
ALTER TABLE EW_CONFIGURATION_MAN ADD CHECK (EWC_MAN_ID IS NOT NULL);
ALTER TABLE EW_CONFIGURATION_MAN ADD CHECK (START_DATE_ACTIVE IS NOT NULL);
ALTER TABLE EW_CONFIGURATION_MAN ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE EW_CONFIGURATION_MAN ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE EW_CONFIGURATION_MAN ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE EW_CONFIGURATION_MAN ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table EW_CONFIGURATION_MAN
-- ----------------------------
ALTER TABLE EW_CONFIGURATION_MAN ADD PRIMARY KEY (EWC_MAN_ID);

-- ----------------------------
-- Indexes structure for table EW_HANDLE
-- ----------------------------

-- ----------------------------
-- Checks structure for table EW_HANDLE
-- ----------------------------
ALTER TABLE EW_HANDLE ADD CHECK (HANDLE_ID IS NOT NULL);
ALTER TABLE EW_HANDLE ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE EW_HANDLE ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE EW_HANDLE ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);
ALTER TABLE EW_HANDLE ADD CHECK (LAST_UPDATED_BY IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table EW_HANDLE
-- ----------------------------
ALTER TABLE EW_HANDLE ADD PRIMARY KEY (HANDLE_ID);

-- ----------------------------
-- Indexes structure for table MSG_CFG
-- ----------------------------

-- ----------------------------
-- Checks structure for table MSG_CFG
-- ----------------------------
ALTER TABLE MSG_CFG ADD CHECK (MSG_CFG_ID IS NOT NULL);
ALTER TABLE MSG_CFG ADD CHECK (ORG_ID IS NOT NULL);
ALTER TABLE MSG_CFG ADD CHECK (CHANNEL_TYPE IS NOT NULL);
ALTER TABLE MSG_CFG ADD CHECK (MSG_TYPE_CODE IS NOT NULL);
ALTER TABLE MSG_CFG ADD CHECK (MSG_SOURCE_ID IS NOT NULL);
ALTER TABLE MSG_CFG ADD CHECK (ENABLED_FLAG IS NOT NULL);
ALTER TABLE MSG_CFG ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);
ALTER TABLE MSG_CFG ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE MSG_CFG ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE MSG_CFG ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE MSG_CFG ADD CHECK (IS_DELETE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table MSG_CFG
-- ----------------------------
ALTER TABLE MSG_CFG ADD PRIMARY KEY (MSG_CFG_ID);

-- ----------------------------
-- Indexes structure for table MSG_HISTORY
-- ----------------------------

-- ----------------------------
-- Checks structure for table MSG_HISTORY
-- ----------------------------
ALTER TABLE MSG_HISTORY ADD CHECK (MSG_HISTORY_ID IS NOT NULL);
ALTER TABLE MSG_HISTORY ADD CHECK (ORG_ID IS NOT NULL);
ALTER TABLE MSG_HISTORY ADD CHECK (CHANNEL_TYPE IS NOT NULL);
ALTER TABLE MSG_HISTORY ADD CHECK (MSG_TYPE_CODE IS NOT NULL);
ALTER TABLE MSG_HISTORY ADD CHECK (BIZ_TYPE IS NOT NULL);
ALTER TABLE MSG_HISTORY ADD CHECK (BIZ_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table MSG_HISTORY
-- ----------------------------
ALTER TABLE MSG_HISTORY ADD PRIMARY KEY (MSG_HISTORY_ID);

-- ----------------------------
-- Indexes structure for table MSG_INSTANCE
-- ----------------------------
CREATE INDEX MSG_INSTANCE_INDEX1
ON MSG_INSTANCE (CHANNEL_TYPE ASC)
LOGGING
VISIBLE;
CREATE INDEX MSG_INSTANCE_INDEX2
ON MSG_INSTANCE (ORG_ID ASC)
LOGGING
VISIBLE;
CREATE INDEX MSG_INSTANCE_INDEX3
ON MSG_INSTANCE (MSG_TYPE_CODE ASC)
LOGGING
VISIBLE;
CREATE INDEX MSG_INSTANCE_INDEX4
ON MSG_INSTANCE (SEND_STATUS ASC)
LOGGING
VISIBLE;
CREATE INDEX MSG_INSTANCE_INDEX5
ON MSG_INSTANCE (MSG_TRANSACTION_DATE ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table MSG_INSTANCE
-- ----------------------------
ALTER TABLE MSG_INSTANCE ADD CHECK (MSG_INSTANCE_ID IS NOT NULL);
ALTER TABLE MSG_INSTANCE ADD CHECK (ORG_ID IS NOT NULL);
ALTER TABLE MSG_INSTANCE ADD CHECK (CHANNEL_TYPE IS NOT NULL);
ALTER TABLE MSG_INSTANCE ADD CHECK (MSG_TYPE_CODE IS NOT NULL);
ALTER TABLE MSG_INSTANCE ADD CHECK (MSG_CFG_ID IS NOT NULL);
ALTER TABLE MSG_INSTANCE ADD CHECK (BIZ_TYPE IS NOT NULL);
ALTER TABLE MSG_INSTANCE ADD CHECK (BIZ_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table MSG_INSTANCE
-- ----------------------------
ALTER TABLE MSG_INSTANCE ADD PRIMARY KEY (MSG_INSTANCE_ID);

-- ----------------------------
-- Indexes structure for table MSG_LOG
-- ----------------------------

-- ----------------------------
-- Checks structure for table MSG_LOG
-- ----------------------------
ALTER TABLE MSG_LOG ADD CHECK (LOG_ID IS NOT NULL);
ALTER TABLE MSG_LOG ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);
ALTER TABLE MSG_LOG ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE MSG_LOG ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE MSG_LOG ADD CHECK (CREATED_BY IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table MSG_LOG
-- ----------------------------
ALTER TABLE MSG_LOG ADD PRIMARY KEY (LOG_ID);

-- ----------------------------
-- Indexes structure for table MSG_RECEIVE_SQL
-- ----------------------------

-- ----------------------------
-- Checks structure for table MSG_RECEIVE_SQL
-- ----------------------------
ALTER TABLE MSG_RECEIVE_SQL ADD CHECK (SQL_ID IS NOT NULL);
ALTER TABLE MSG_RECEIVE_SQL ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);
ALTER TABLE MSG_RECEIVE_SQL ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE MSG_RECEIVE_SQL ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE MSG_RECEIVE_SQL ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE MSG_RECEIVE_SQL ADD CHECK (VERSION_NUM IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table MSG_RECEIVE_SQL
-- ----------------------------
ALTER TABLE MSG_RECEIVE_SQL ADD PRIMARY KEY (SQL_ID);

-- ----------------------------
-- Indexes structure for table MSG_SOURCE_CFG
-- ----------------------------

-- ----------------------------
-- Checks structure for table MSG_SOURCE_CFG
-- ----------------------------
ALTER TABLE MSG_SOURCE_CFG ADD CHECK (MSG_SOURCE_ID IS NOT NULL);
ALTER TABLE MSG_SOURCE_CFG ADD CHECK (ORG_ID IS NOT NULL);
ALTER TABLE MSG_SOURCE_CFG ADD CHECK (MSG_TYPE_CODE IS NOT NULL);
ALTER TABLE MSG_SOURCE_CFG ADD CHECK (SOURCE_NAME IS NOT NULL);
ALTER TABLE MSG_SOURCE_CFG ADD CHECK (ENABLED_FLAG IS NOT NULL);
ALTER TABLE MSG_SOURCE_CFG ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);
ALTER TABLE MSG_SOURCE_CFG ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE MSG_SOURCE_CFG ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE MSG_SOURCE_CFG ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE MSG_SOURCE_CFG ADD CHECK (IS_DELETE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table MSG_SOURCE_CFG
-- ----------------------------
ALTER TABLE MSG_SOURCE_CFG ADD PRIMARY KEY (MSG_SOURCE_ID);

-- ----------------------------
-- Indexes structure for table MSG_TD
-- ----------------------------

-- ----------------------------
-- Checks structure for table MSG_TD
-- ----------------------------
ALTER TABLE MSG_TD ADD CHECK (TD_ID IS NOT NULL);
ALTER TABLE MSG_TD ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);
ALTER TABLE MSG_TD ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE MSG_TD ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE MSG_TD ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE MSG_TD ADD CHECK (VERSION_NUM IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table MSG_TD
-- ----------------------------
ALTER TABLE MSG_TD ADD PRIMARY KEY (TD_ID);

-- ----------------------------
-- Indexes structure for table MSG_TEMPLE_CFG
-- ----------------------------

-- ----------------------------
-- Checks structure for table MSG_TEMPLE_CFG
-- ----------------------------
ALTER TABLE MSG_TEMPLE_CFG ADD CHECK (TEMPLE_ID IS NOT NULL);
ALTER TABLE MSG_TEMPLE_CFG ADD CHECK (TEMPLE_CONTENT IS NOT NULL);
ALTER TABLE MSG_TEMPLE_CFG ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE MSG_TEMPLE_CFG ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE MSG_TEMPLE_CFG ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE MSG_TEMPLE_CFG ADD CHECK (IS_DELETE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table MSG_TEMPLE_CFG
-- ----------------------------
ALTER TABLE MSG_TEMPLE_CFG ADD PRIMARY KEY (TEMPLE_ID);

-- ----------------------------
-- Indexes structure for table MSG_USER
-- ----------------------------

-- ----------------------------
-- Checks structure for table MSG_USER
-- ----------------------------
ALTER TABLE MSG_USER ADD CHECK (MSG_USER_ID IS NOT NULL);
ALTER TABLE MSG_USER ADD CHECK (ENABLED_FLAG IS NOT NULL);
ALTER TABLE MSG_USER ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);
ALTER TABLE MSG_USER ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE MSG_USER ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE MSG_USER ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE MSG_USER ADD CHECK (VERSION_NUM IS NOT NULL);
ALTER TABLE MSG_USER ADD CHECK (IS_DELETE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table MSG_USER
-- ----------------------------
ALTER TABLE MSG_USER ADD PRIMARY KEY (MSG_USER_ID);

-- ----------------------------
-- Indexes structure for table PAGE_MODEL_GROUP_DETAIL
-- ----------------------------
CREATE INDEX GROUP_CODE_INDEX
ON PAGE_MODEL_GROUP_DETAIL (GROUP_CODE ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table PAGE_MODEL_GROUP_DETAIL
-- ----------------------------
ALTER TABLE PAGE_MODEL_GROUP_DETAIL ADD CHECK (GROUP_DET_ID IS NOT NULL);
ALTER TABLE PAGE_MODEL_GROUP_DETAIL ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE PAGE_MODEL_GROUP_DETAIL ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE PAGE_MODEL_GROUP_DETAIL ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE PAGE_MODEL_GROUP_DETAIL ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table PAGE_MODEL_GROUP_DETAIL
-- ----------------------------
ALTER TABLE PAGE_MODEL_GROUP_DETAIL ADD PRIMARY KEY (GROUP_DET_ID);

-- ----------------------------
-- Indexes structure for table PAGE_MODEL_GROUP_INFO
-- ----------------------------
CREATE UNIQUE INDEX GROUP_CODE_UNIQUE
ON PAGE_MODEL_GROUP_INFO (GROUP_CODE ASC)
LOGGING
VISIBLE;
CREATE INDEX GROUP_PARENT_CODE
ON PAGE_MODEL_GROUP_INFO (GROUP_PARENT_CODE ASC)
LOGGING
VISIBLE;
CREATE INDEX MODEL_CODE_INDEX
ON PAGE_MODEL_GROUP_INFO (MODEL_CODE ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table PAGE_MODEL_GROUP_INFO
-- ----------------------------
ALTER TABLE PAGE_MODEL_GROUP_INFO ADD CHECK (GROUP_ID IS NOT NULL);
ALTER TABLE PAGE_MODEL_GROUP_INFO ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE PAGE_MODEL_GROUP_INFO ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE PAGE_MODEL_GROUP_INFO ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE PAGE_MODEL_GROUP_INFO ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table PAGE_MODEL_GROUP_INFO
-- ----------------------------
ALTER TABLE PAGE_MODEL_GROUP_INFO ADD PRIMARY KEY (GROUP_ID);

-- ----------------------------
-- Indexes structure for table PAGE_MODEL_INFO
-- ----------------------------
CREATE UNIQUE INDEX MODEL_CODE_UNIQUE
ON PAGE_MODEL_INFO (MODEL_CODE ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table PAGE_MODEL_INFO
-- ----------------------------
ALTER TABLE PAGE_MODEL_INFO ADD CHECK (MODEL_ID IS NOT NULL);
ALTER TABLE PAGE_MODEL_INFO ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE PAGE_MODEL_INFO ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE PAGE_MODEL_INFO ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE PAGE_MODEL_INFO ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table PAGE_MODEL_INFO
-- ----------------------------
ALTER TABLE PAGE_MODEL_INFO ADD PRIMARY KEY (MODEL_ID);

-- ----------------------------
-- Indexes structure for table PER_ALL_ASSIGNMENTS_F
-- ----------------------------

-- ----------------------------
-- Checks structure for table PER_ALL_ASSIGNMENTS_F
-- ----------------------------
ALTER TABLE PER_ALL_ASSIGNMENTS_F ADD CHECK (ASSIGNMENT_ID IS NOT NULL);
ALTER TABLE PER_ALL_ASSIGNMENTS_F ADD CHECK (ASSIGNMENT_SEQUENCE IS NOT NULL);
ALTER TABLE PER_ALL_ASSIGNMENTS_F ADD CHECK (ASSIGNMENT_STATUS_TYPE_ID IS NOT NULL);
ALTER TABLE PER_ALL_ASSIGNMENTS_F ADD CHECK (ASSIGNMENT_TYPE IS NOT NULL);
ALTER TABLE PER_ALL_ASSIGNMENTS_F ADD CHECK (BUSINESS_GROUP_ID IS NOT NULL);
ALTER TABLE PER_ALL_ASSIGNMENTS_F ADD CHECK (EFFECTIVE_END_DATETIME IS NOT NULL);
ALTER TABLE PER_ALL_ASSIGNMENTS_F ADD CHECK (EFFECTIVE_START_DATETIME IS NOT NULL);
ALTER TABLE PER_ALL_ASSIGNMENTS_F ADD CHECK (ORGANIZATION_ID IS NOT NULL);
ALTER TABLE PER_ALL_ASSIGNMENTS_F ADD CHECK (PERSON_ID IS NOT NULL);
ALTER TABLE PER_ALL_ASSIGNMENTS_F ADD CHECK (PRIMARY_FLAG IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table PER_ALL_ASSIGNMENTS_F
-- ----------------------------
ALTER TABLE PER_ALL_ASSIGNMENTS_F ADD PRIMARY KEY (ASSIGNMENT_ID);

-- ----------------------------
-- Indexes structure for table PER_ALL_PEOPLE_F
-- ----------------------------

-- ----------------------------
-- Checks structure for table PER_ALL_PEOPLE_F
-- ----------------------------
ALTER TABLE PER_ALL_PEOPLE_F ADD CHECK (PERSON_ID IS NOT NULL);
ALTER TABLE PER_ALL_PEOPLE_F ADD CHECK (BUSINESS_GROUP_ID IS NOT NULL);
ALTER TABLE PER_ALL_PEOPLE_F ADD CHECK (EFFECTIVE_END_DATETIME IS NOT NULL);
ALTER TABLE PER_ALL_PEOPLE_F ADD CHECK (EFFECTIVE_START_DATETIME IS NOT NULL);
ALTER TABLE PER_ALL_PEOPLE_F ADD CHECK (LAST_NAME IS NOT NULL);
ALTER TABLE PER_ALL_PEOPLE_F ADD CHECK (PERSON_TYPE_ID IS NOT NULL);
ALTER TABLE PER_ALL_PEOPLE_F ADD CHECK (START_DATETIME IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table PER_ALL_PEOPLE_F
-- ----------------------------
ALTER TABLE PER_ALL_PEOPLE_F ADD PRIMARY KEY (PERSON_ID);

-- ----------------------------
-- Indexes structure for table PUB_USERS_ORGANIZATION
-- ----------------------------
CREATE INDEX PUB_USERS_ORGANIZATION_N
ON PUB_USERS_ORGANIZATION (USER_ID ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table PUB_USERS_ORGANIZATION
-- ----------------------------
ALTER TABLE PUB_USERS_ORGANIZATION ADD CHECK (USER_ORG_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table PUB_USERS_ORGANIZATION
-- ----------------------------
ALTER TABLE PUB_USERS_ORGANIZATION ADD PRIMARY KEY (USER_ORG_ID);

-- ----------------------------
-- Indexes structure for table QRTZ_BLOB_TRIGGERS
-- ----------------------------

-- ----------------------------
-- Checks structure for table QRTZ_BLOB_TRIGGERS
-- ----------------------------
ALTER TABLE QRTZ_BLOB_TRIGGERS ADD CHECK (SCHED_NAME IS NOT NULL);
ALTER TABLE QRTZ_BLOB_TRIGGERS ADD CHECK (TRIGGER_NAME IS NOT NULL);
ALTER TABLE QRTZ_BLOB_TRIGGERS ADD CHECK (TRIGGER_GROUP IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table QRTZ_BLOB_TRIGGERS
-- ----------------------------
ALTER TABLE QRTZ_BLOB_TRIGGERS ADD PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);

-- ----------------------------
-- Indexes structure for table QRTZ_CALENDARS
-- ----------------------------

-- ----------------------------
-- Checks structure for table QRTZ_CALENDARS
-- ----------------------------
ALTER TABLE QRTZ_CALENDARS ADD CHECK (SCHED_NAME IS NOT NULL);
ALTER TABLE QRTZ_CALENDARS ADD CHECK (CALENDAR_NAME IS NOT NULL);
ALTER TABLE QRTZ_CALENDARS ADD CHECK (CALENDAR IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table QRTZ_CALENDARS
-- ----------------------------
ALTER TABLE QRTZ_CALENDARS ADD PRIMARY KEY (SCHED_NAME, CALENDAR_NAME);

-- ----------------------------
-- Indexes structure for table QRTZ_CRON_TRIGGERS
-- ----------------------------

-- ----------------------------
-- Checks structure for table QRTZ_CRON_TRIGGERS
-- ----------------------------
ALTER TABLE QRTZ_CRON_TRIGGERS ADD CHECK (SCHED_NAME IS NOT NULL);
ALTER TABLE QRTZ_CRON_TRIGGERS ADD CHECK (TRIGGER_NAME IS NOT NULL);
ALTER TABLE QRTZ_CRON_TRIGGERS ADD CHECK (TRIGGER_GROUP IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table QRTZ_CRON_TRIGGERS
-- ----------------------------
ALTER TABLE QRTZ_CRON_TRIGGERS ADD PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);

-- ----------------------------
-- Indexes structure for table QRTZ_FIRED_TRIGGERS
-- ----------------------------
CREATE INDEX IDX_QRTZ_FT_INST_JOB_REQ_RCVRY
ON QRTZ_FIRED_TRIGGERS (SCHED_NAME ASC, INSTANCE_NAME ASC, REQUESTS_RECOVERY ASC)
LOGGING
VISIBLE;
CREATE INDEX IDX_QRTZ_FT_JG
ON QRTZ_FIRED_TRIGGERS (SCHED_NAME ASC, JOB_GROUP ASC)
LOGGING
VISIBLE;
CREATE INDEX IDX_QRTZ_FT_J_G
ON QRTZ_FIRED_TRIGGERS (SCHED_NAME ASC, JOB_NAME ASC, JOB_GROUP ASC)
LOGGING
VISIBLE;
CREATE INDEX IDX_QRTZ_FT_TG
ON QRTZ_FIRED_TRIGGERS (SCHED_NAME ASC, TRIGGER_GROUP ASC)
LOGGING
VISIBLE;
CREATE INDEX IDX_QRTZ_FT_TRIG_INST_NAME
ON QRTZ_FIRED_TRIGGERS (SCHED_NAME ASC, INSTANCE_NAME ASC)
LOGGING
VISIBLE;
CREATE INDEX IDX_QRTZ_FT_T_G
ON QRTZ_FIRED_TRIGGERS (SCHED_NAME ASC, TRIGGER_NAME ASC, TRIGGER_GROUP ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table QRTZ_FIRED_TRIGGERS
-- ----------------------------
ALTER TABLE QRTZ_FIRED_TRIGGERS ADD CHECK (SCHED_NAME IS NOT NULL);
ALTER TABLE QRTZ_FIRED_TRIGGERS ADD CHECK (ENTRY_ID IS NOT NULL);
ALTER TABLE QRTZ_FIRED_TRIGGERS ADD CHECK (FIRED_TIME IS NOT NULL);
ALTER TABLE QRTZ_FIRED_TRIGGERS ADD CHECK (SCHED_TIME IS NOT NULL);
ALTER TABLE QRTZ_FIRED_TRIGGERS ADD CHECK (PRIORITY IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table QRTZ_FIRED_TRIGGERS
-- ----------------------------
ALTER TABLE QRTZ_FIRED_TRIGGERS ADD PRIMARY KEY (SCHED_NAME, ENTRY_ID);

-- ----------------------------
-- Indexes structure for table QRTZ_JOB_DETAILS
-- ----------------------------
CREATE INDEX IDX_QRTZ_J_GRP
ON QRTZ_JOB_DETAILS (SCHED_NAME ASC, JOB_GROUP ASC)
LOGGING
VISIBLE;
CREATE INDEX IDX_QRTZ_J_REQ_RECOVERY
ON QRTZ_JOB_DETAILS (SCHED_NAME ASC, REQUESTS_RECOVERY ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table QRTZ_JOB_DETAILS
-- ----------------------------
ALTER TABLE QRTZ_JOB_DETAILS ADD CHECK (SCHED_NAME IS NOT NULL);
ALTER TABLE QRTZ_JOB_DETAILS ADD CHECK (JOB_NAME IS NOT NULL);
ALTER TABLE QRTZ_JOB_DETAILS ADD CHECK (JOB_GROUP IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table QRTZ_JOB_DETAILS
-- ----------------------------
ALTER TABLE QRTZ_JOB_DETAILS ADD PRIMARY KEY (SCHED_NAME, JOB_NAME, JOB_GROUP);

-- ----------------------------
-- Indexes structure for table QRTZ_LOCKS
-- ----------------------------

-- ----------------------------
-- Checks structure for table QRTZ_LOCKS
-- ----------------------------
ALTER TABLE QRTZ_LOCKS ADD CHECK (SCHED_NAME IS NOT NULL);
ALTER TABLE QRTZ_LOCKS ADD CHECK (LOCK_NAME IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table QRTZ_LOCKS
-- ----------------------------
ALTER TABLE QRTZ_LOCKS ADD PRIMARY KEY (SCHED_NAME, LOCK_NAME);

-- ----------------------------
-- Indexes structure for table QRTZ_PAUSED_TRIGGER_GRPS
-- ----------------------------

-- ----------------------------
-- Checks structure for table QRTZ_PAUSED_TRIGGER_GRPS
-- ----------------------------
ALTER TABLE QRTZ_PAUSED_TRIGGER_GRPS ADD CHECK (SCHED_NAME IS NOT NULL);
ALTER TABLE QRTZ_PAUSED_TRIGGER_GRPS ADD CHECK (TRIGGER_GROUP IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table QRTZ_PAUSED_TRIGGER_GRPS
-- ----------------------------
ALTER TABLE QRTZ_PAUSED_TRIGGER_GRPS ADD PRIMARY KEY (SCHED_NAME, TRIGGER_GROUP);

-- ----------------------------
-- Indexes structure for table QRTZ_SCHEDULER_STATE
-- ----------------------------

-- ----------------------------
-- Checks structure for table QRTZ_SCHEDULER_STATE
-- ----------------------------
ALTER TABLE QRTZ_SCHEDULER_STATE ADD CHECK (SCHED_NAME IS NOT NULL);
ALTER TABLE QRTZ_SCHEDULER_STATE ADD CHECK (INSTANCE_NAME IS NOT NULL);
ALTER TABLE QRTZ_SCHEDULER_STATE ADD CHECK (LAST_CHECKIN_TIME IS NOT NULL);
ALTER TABLE QRTZ_SCHEDULER_STATE ADD CHECK (CHECKIN_INTERVAL IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table QRTZ_SCHEDULER_STATE
-- ----------------------------
ALTER TABLE QRTZ_SCHEDULER_STATE ADD PRIMARY KEY (SCHED_NAME, INSTANCE_NAME);

-- ----------------------------
-- Indexes structure for table QRTZ_SIMPLE_TRIGGERS
-- ----------------------------

-- ----------------------------
-- Checks structure for table QRTZ_SIMPLE_TRIGGERS
-- ----------------------------
ALTER TABLE QRTZ_SIMPLE_TRIGGERS ADD CHECK (SCHED_NAME IS NOT NULL);
ALTER TABLE QRTZ_SIMPLE_TRIGGERS ADD CHECK (TRIGGER_NAME IS NOT NULL);
ALTER TABLE QRTZ_SIMPLE_TRIGGERS ADD CHECK (TRIGGER_GROUP IS NOT NULL);
ALTER TABLE QRTZ_SIMPLE_TRIGGERS ADD CHECK (REPEAT_COUNT IS NOT NULL);
ALTER TABLE QRTZ_SIMPLE_TRIGGERS ADD CHECK (REPEAT_INTERVAL IS NOT NULL);
ALTER TABLE QRTZ_SIMPLE_TRIGGERS ADD CHECK (TIMES_TRIGGERED IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table QRTZ_SIMPLE_TRIGGERS
-- ----------------------------
ALTER TABLE QRTZ_SIMPLE_TRIGGERS ADD PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);

-- ----------------------------
-- Indexes structure for table QRTZ_SIMPROP_TRIGGERS
-- ----------------------------

-- ----------------------------
-- Checks structure for table QRTZ_SIMPROP_TRIGGERS
-- ----------------------------
ALTER TABLE QRTZ_SIMPROP_TRIGGERS ADD CHECK (SCHED_NAME IS NOT NULL);
ALTER TABLE QRTZ_SIMPROP_TRIGGERS ADD CHECK (TRIGGER_NAME IS NOT NULL);
ALTER TABLE QRTZ_SIMPROP_TRIGGERS ADD CHECK (TRIGGER_GROUP IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table QRTZ_SIMPROP_TRIGGERS
-- ----------------------------
ALTER TABLE QRTZ_SIMPROP_TRIGGERS ADD PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);

-- ----------------------------
-- Indexes structure for table QRTZ_TRIGGERS
-- ----------------------------
CREATE INDEX IDX_QRTZ_T_C
ON QRTZ_TRIGGERS (SCHED_NAME ASC, CALENDAR_NAME ASC)
LOGGING
VISIBLE;
CREATE INDEX IDX_QRTZ_T_G
ON QRTZ_TRIGGERS (SCHED_NAME ASC, TRIGGER_GROUP ASC)
LOGGING
VISIBLE;
CREATE INDEX IDX_QRTZ_T_J
ON QRTZ_TRIGGERS (SCHED_NAME ASC, JOB_NAME ASC, JOB_GROUP ASC)
LOGGING
VISIBLE;
CREATE INDEX IDX_QRTZ_T_JG
ON QRTZ_TRIGGERS (SCHED_NAME ASC, JOB_GROUP ASC)
LOGGING
VISIBLE;
CREATE INDEX IDX_QRTZ_T_NEXT_FIRE_TIME
ON QRTZ_TRIGGERS (SCHED_NAME ASC, NEXT_FIRE_TIME ASC)
LOGGING
VISIBLE;
CREATE INDEX IDX_QRTZ_T_NFT_MISFIRE
ON QRTZ_TRIGGERS (SCHED_NAME ASC, MISFIRE_INSTR ASC, NEXT_FIRE_TIME ASC)
LOGGING
VISIBLE;
CREATE INDEX IDX_QRTZ_T_NFT_ST
ON QRTZ_TRIGGERS (SCHED_NAME ASC, TRIGGER_STATE ASC, NEXT_FIRE_TIME ASC)
LOGGING
VISIBLE;
CREATE INDEX IDX_QRTZ_T_NFT_ST_MISFIRE
ON QRTZ_TRIGGERS (SCHED_NAME ASC, MISFIRE_INSTR ASC, NEXT_FIRE_TIME ASC, TRIGGER_STATE ASC)
LOGGING
VISIBLE;
CREATE INDEX IDX_QRTZ_T_NFT_ST_MISFIRE_GRP
ON QRTZ_TRIGGERS (SCHED_NAME ASC, MISFIRE_INSTR ASC, NEXT_FIRE_TIME ASC, TRIGGER_GROUP ASC, TRIGGER_STATE ASC)
LOGGING
VISIBLE;
CREATE INDEX IDX_QRTZ_T_N_G_STATE
ON QRTZ_TRIGGERS (SCHED_NAME ASC, TRIGGER_GROUP ASC, TRIGGER_STATE ASC)
LOGGING
VISIBLE;
CREATE INDEX IDX_QRTZ_T_N_STATE
ON QRTZ_TRIGGERS (SCHED_NAME ASC, TRIGGER_NAME ASC, TRIGGER_GROUP ASC, TRIGGER_STATE ASC)
LOGGING
VISIBLE;
CREATE INDEX IDX_QRTZ_T_STATE
ON QRTZ_TRIGGERS (SCHED_NAME ASC, TRIGGER_STATE ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table QRTZ_TRIGGERS
-- ----------------------------
ALTER TABLE QRTZ_TRIGGERS ADD CHECK (SCHED_NAME IS NOT NULL);
ALTER TABLE QRTZ_TRIGGERS ADD CHECK (TRIGGER_NAME IS NOT NULL);
ALTER TABLE QRTZ_TRIGGERS ADD CHECK (TRIGGER_GROUP IS NOT NULL);
ALTER TABLE QRTZ_TRIGGERS ADD CHECK (START_TIME IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table QRTZ_TRIGGERS
-- ----------------------------
ALTER TABLE QRTZ_TRIGGERS ADD PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);

-- ----------------------------
-- Indexes structure for table RULE_BUSINESS_LINE
-- ----------------------------

-- ----------------------------
-- Checks structure for table RULE_BUSINESS_LINE
-- ----------------------------
ALTER TABLE RULE_BUSINESS_LINE ADD CHECK (RULE_BUSINESS_LINE_ID IS NOT NULL);
ALTER TABLE RULE_BUSINESS_LINE ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE RULE_BUSINESS_LINE ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE RULE_BUSINESS_LINE ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE RULE_BUSINESS_LINE ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table RULE_BUSINESS_LINE
-- ----------------------------
ALTER TABLE RULE_BUSINESS_LINE ADD PRIMARY KEY (RULE_BUSINESS_LINE_ID);

-- ----------------------------
-- Indexes structure for table RULE_DIM
-- ----------------------------

-- ----------------------------
-- Checks structure for table RULE_DIM
-- ----------------------------
ALTER TABLE RULE_DIM ADD CHECK (RULE_DIM_ID IS NOT NULL);
ALTER TABLE RULE_DIM ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE RULE_DIM ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE RULE_DIM ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE RULE_DIM ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table RULE_DIM
-- ----------------------------
ALTER TABLE RULE_DIM ADD PRIMARY KEY (RULE_DIM_ID);

-- ----------------------------
-- Indexes structure for table RULE_EXPRESSION
-- ----------------------------

-- ----------------------------
-- Checks structure for table RULE_EXPRESSION
-- ----------------------------
ALTER TABLE RULE_EXPRESSION ADD CHECK (RULE_EXP_ID IS NOT NULL);
ALTER TABLE RULE_EXPRESSION ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE RULE_EXPRESSION ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE RULE_EXPRESSION ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE RULE_EXPRESSION ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table RULE_EXPRESSION
-- ----------------------------
ALTER TABLE RULE_EXPRESSION ADD PRIMARY KEY (RULE_EXP_ID);

-- ----------------------------
-- Indexes structure for table RULE_EXPRESSIONDIM
-- ----------------------------

-- ----------------------------
-- Checks structure for table RULE_EXPRESSIONDIM
-- ----------------------------
ALTER TABLE RULE_EXPRESSIONDIM ADD CHECK (RULE_EXP_DIM_ID IS NOT NULL);
ALTER TABLE RULE_EXPRESSIONDIM ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE RULE_EXPRESSIONDIM ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE RULE_EXPRESSIONDIM ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE RULE_EXPRESSIONDIM ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table RULE_EXPRESSIONDIM
-- ----------------------------
ALTER TABLE RULE_EXPRESSIONDIM ADD PRIMARY KEY (RULE_EXP_DIM_ID);

-- ----------------------------
-- Indexes structure for table RULE_MAPPING_BUSINESS
-- ----------------------------

-- ----------------------------
-- Checks structure for table RULE_MAPPING_BUSINESS
-- ----------------------------
ALTER TABLE RULE_MAPPING_BUSINESS ADD CHECK (RULE_MAPP_BUS_ID IS NOT NULL);
ALTER TABLE RULE_MAPPING_BUSINESS ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE RULE_MAPPING_BUSINESS ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE RULE_MAPPING_BUSINESS ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE RULE_MAPPING_BUSINESS ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table RULE_MAPPING_BUSINESS
-- ----------------------------
ALTER TABLE RULE_MAPPING_BUSINESS ADD PRIMARY KEY (RULE_MAPP_BUS_ID);

-- ----------------------------
-- Indexes structure for table SAAF_FILE_UPLOAD
-- ----------------------------
CREATE INDEX VR_FILE_UPLOAD_N1
ON SAAF_FILE_UPLOAD (FILE_NAME ASC)
LOGGING
VISIBLE;
CREATE INDEX VR_FILE_UPLOAD_N2
ON SAAF_FILE_UPLOAD (SOURCE_CODE ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table SAAF_FILE_UPLOAD
-- ----------------------------
ALTER TABLE SAAF_FILE_UPLOAD ADD CHECK (UPLOAD_ID IS NOT NULL);
ALTER TABLE SAAF_FILE_UPLOAD ADD CHECK (START_DATE_ACTIVE IS NOT NULL);
ALTER TABLE SAAF_FILE_UPLOAD ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE SAAF_FILE_UPLOAD ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE SAAF_FILE_UPLOAD ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE SAAF_FILE_UPLOAD ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table SAAF_FILE_UPLOAD
-- ----------------------------
ALTER TABLE SAAF_FILE_UPLOAD ADD PRIMARY KEY (UPLOAD_ID);

-- ----------------------------
-- Indexes structure for table SAAF_WEBSERVICE_INFO
-- ----------------------------
CREATE INDEX WEBSERVICE_CODE_UNIQUE
ON SAAF_WEBSERVICE_INFO (WEBSERVICE_CODE ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table SAAF_WEBSERVICE_INFO
-- ----------------------------
ALTER TABLE SAAF_WEBSERVICE_INFO ADD CHECK (WEBSERVICE_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table SAAF_WEBSERVICE_INFO
-- ----------------------------
ALTER TABLE SAAF_WEBSERVICE_INFO ADD PRIMARY KEY (WEBSERVICE_ID);

-- ----------------------------
-- Indexes structure for table SAAF_WEBSERVICE_PARAM_INFO
-- ----------------------------
CREATE INDEX WEBSERVICE_CODE
ON SAAF_WEBSERVICE_PARAM_INFO (WEBSERVICE_CODE ASC, PARAM_CODE ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table SAAF_WEBSERVICE_PARAM_INFO
-- ----------------------------
ALTER TABLE SAAF_WEBSERVICE_PARAM_INFO ADD CHECK (PARAM_ID IS NOT NULL);
ALTER TABLE SAAF_WEBSERVICE_PARAM_INFO ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE SAAF_WEBSERVICE_PARAM_INFO ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE SAAF_WEBSERVICE_PARAM_INFO ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE SAAF_WEBSERVICE_PARAM_INFO ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table SAAF_WEBSERVICE_PARAM_INFO
-- ----------------------------
ALTER TABLE SAAF_WEBSERVICE_PARAM_INFO ADD PRIMARY KEY (PARAM_ID);

-- ----------------------------
-- Indexes structure for table SCHEDULE_JOB_ACCESS_ORGS
-- ----------------------------

-- ----------------------------
-- Checks structure for table SCHEDULE_JOB_ACCESS_ORGS
-- ----------------------------
ALTER TABLE SCHEDULE_JOB_ACCESS_ORGS ADD CHECK (ACCESS_ORG_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table SCHEDULE_JOB_ACCESS_ORGS
-- ----------------------------
ALTER TABLE SCHEDULE_JOB_ACCESS_ORGS ADD PRIMARY KEY (ACCESS_ORG_ID);

-- ----------------------------
-- Indexes structure for table SCHEDULE_JOB_PARAMETERS
-- ----------------------------
CREATE INDEX IND_JOB_ID
ON SCHEDULE_JOB_PARAMETERS (JOB_ID ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table SCHEDULE_JOB_PARAMETERS
-- ----------------------------
ALTER TABLE SCHEDULE_JOB_PARAMETERS ADD CHECK (PARAM_ID IS NOT NULL);
ALTER TABLE SCHEDULE_JOB_PARAMETERS ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE SCHEDULE_JOB_PARAMETERS ADD CHECK (CREATED_BY IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table SCHEDULE_JOB_PARAMETERS
-- ----------------------------
ALTER TABLE SCHEDULE_JOB_PARAMETERS ADD PRIMARY KEY (PARAM_ID);

-- ----------------------------
-- Indexes structure for table SCHEDULE_JOB_RESP
-- ----------------------------

-- ----------------------------
-- Checks structure for table SCHEDULE_JOB_RESP
-- ----------------------------
ALTER TABLE SCHEDULE_JOB_RESP ADD CHECK (JOB_RESP_ID IS NOT NULL);
ALTER TABLE SCHEDULE_JOB_RESP ADD CHECK (JOB_ID IS NOT NULL);
ALTER TABLE SCHEDULE_JOB_RESP ADD CHECK (RESPONSIBILITY_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table SCHEDULE_JOB_RESP
-- ----------------------------
ALTER TABLE SCHEDULE_JOB_RESP ADD PRIMARY KEY (JOB_RESP_ID);

-- ----------------------------
-- Indexes structure for table SCHEDULE_JOBS
-- ----------------------------
CREATE INDEX IND_JOB_NAME
ON SCHEDULE_JOBS (JOB_NAME ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table SCHEDULE_JOBS
-- ----------------------------
ALTER TABLE SCHEDULE_JOBS ADD CHECK (JOB_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table SCHEDULE_JOBS
-- ----------------------------
ALTER TABLE SCHEDULE_JOBS ADD PRIMARY KEY (JOB_ID);

-- ----------------------------
-- Indexes structure for table SCHEDULE_LOG
-- ----------------------------

-- ----------------------------
-- Checks structure for table SCHEDULE_LOG
-- ----------------------------
ALTER TABLE SCHEDULE_LOG ADD CHECK (ID_ IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table SCHEDULE_LOG
-- ----------------------------
ALTER TABLE SCHEDULE_LOG ADD PRIMARY KEY (ID_);

-- ----------------------------
-- Indexes structure for table SCHEDULE_SCHEDULES
-- ----------------------------
CREATE INDEX IND_SCH_JOB_ID
ON SCHEDULE_SCHEDULES (JOB_ID ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table SCHEDULE_SCHEDULES
-- ----------------------------
ALTER TABLE SCHEDULE_SCHEDULES ADD CHECK (SCHEDULE_ID IS NOT NULL);
ALTER TABLE SCHEDULE_SCHEDULES ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE SCHEDULE_SCHEDULES ADD CHECK (CREATED_BY IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table SCHEDULE_SCHEDULES
-- ----------------------------
ALTER TABLE SCHEDULE_SCHEDULES ADD PRIMARY KEY (SCHEDULE_ID);

-- ----------------------------
-- Indexes structure for table SCHEDULE_SCHEDULES_ERROR
-- ----------------------------
CREATE INDEX SAAF_SCHEDRULES_ERROR_N1
ON SCHEDULE_SCHEDULES_ERROR (SCHEDULE_ID ASC)
LOGGING
VISIBLE;
CREATE INDEX SAAF_SCHEDRULES_ERROR_N2
ON SCHEDULE_SCHEDULES_ERROR (STATUS ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table SCHEDULE_SCHEDULES_ERROR
-- ----------------------------
ALTER TABLE SCHEDULE_SCHEDULES_ERROR ADD CHECK (ERROR_ID IS NOT NULL);
ALTER TABLE SCHEDULE_SCHEDULES_ERROR ADD CHECK (SCHEDULE_ID IS NOT NULL);
ALTER TABLE SCHEDULE_SCHEDULES_ERROR ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE SCHEDULE_SCHEDULES_ERROR ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE SCHEDULE_SCHEDULES_ERROR ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE SCHEDULE_SCHEDULES_ERROR ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table SCHEDULE_SCHEDULES_ERROR
-- ----------------------------
ALTER TABLE SCHEDULE_SCHEDULES_ERROR ADD PRIMARY KEY (ERROR_ID);

-- ----------------------------
-- Indexes structure for table TTA_ACTUAL_COST_RULE
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_ACTUAL_COST_RULE
-- ----------------------------
ALTER TABLE TTA_ACTUAL_COST_RULE ADD CHECK (ID IS NOT NULL);
ALTER TABLE TTA_ACTUAL_COST_RULE ADD CHECK (OI_TYPE IS NOT NULL);
ALTER TABLE TTA_ACTUAL_COST_RULE ADD CHECK (ALLOCATION_BASE IS NOT NULL);
ALTER TABLE TTA_ACTUAL_COST_RULE ADD CHECK (STATUS IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_ACTUAL_COST_RULE
-- ----------------------------
ALTER TABLE TTA_ACTUAL_COST_RULE ADD PRIMARY KEY (ID);

-- ----------------------------
-- Indexes structure for table TTA_BASE_ANSWER
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_BASE_ANSWER
-- ----------------------------
ALTER TABLE TTA_BASE_ANSWER ADD CHECK (ANSWER_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_BASE_ANSWER
-- ----------------------------
ALTER TABLE TTA_BASE_ANSWER ADD PRIMARY KEY (ANSWER_ID);

-- ----------------------------
-- Indexes structure for table TTA_BASE_RULE
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_BASE_RULE
-- ----------------------------
ALTER TABLE TTA_BASE_RULE ADD CHECK (RULE_ID IS NOT NULL);
ALTER TABLE TTA_BASE_RULE ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE TTA_BASE_RULE ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE TTA_BASE_RULE ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE TTA_BASE_RULE ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_BASE_RULE
-- ----------------------------
ALTER TABLE TTA_BASE_RULE ADD PRIMARY KEY (RULE_ID);

-- ----------------------------
-- Checks structure for table TTA_BASE_RULE_HEADER
-- ----------------------------
ALTER TABLE TTA_BASE_RULE_HEADER ADD CHECK (RULE_ID IS NOT NULL);

-- ----------------------------
-- Checks structure for table TTA_BASE_RULE_LINE
-- ----------------------------
ALTER TABLE TTA_BASE_RULE_LINE ADD CHECK (RULE_LINE_ID IS NOT NULL);

-- ----------------------------
-- Checks structure for table TTA_BASE_SUBJECT
-- ----------------------------
ALTER TABLE TTA_BASE_SUBJECT ADD CHECK (SUBJECT_ID IS NOT NULL);

-- ----------------------------
-- Checks structure for table TTA_BRAND
-- ----------------------------
ALTER TABLE TTA_BRAND ADD CHECK (BRAND_ID IS NOT NULL);
ALTER TABLE TTA_BRAND ADD CHECK (BRAND IS NOT NULL);
ALTER TABLE TTA_BRAND ADD CHECK (BRAND_EN IS NOT NULL);
ALTER TABLE TTA_BRAND ADD CHECK (BRAND_CN IS NOT NULL);

-- ----------------------------
-- Indexes structure for table TTA_BRANDPLN_HEADER
-- ----------------------------
CREATE INDEX PK_BR_PROPOSAL_ID
ON TTA_BRANDPLN_HEADER (PROPOSAL_ID ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table TTA_BRANDPLN_HEADER
-- ----------------------------
ALTER TABLE TTA_BRANDPLN_HEADER ADD CHECK (BRANDPLN_H_ID IS NOT NULL);
ALTER TABLE TTA_BRANDPLN_HEADER ADD CHECK (NEW_OR_EXISTING IS NOT NULL);
ALTER TABLE TTA_BRANDPLN_HEADER ADD CHECK (VENDOR_NBR IS NOT NULL);
ALTER TABLE TTA_BRANDPLN_HEADER ADD CHECK (VENDOR_NAME IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_BRANDPLN_HEADER
-- ----------------------------
ALTER TABLE TTA_BRANDPLN_HEADER ADD PRIMARY KEY (BRANDPLN_H_ID);

-- ----------------------------
-- Indexes structure for table TTA_BRANDPLN_LINE
-- ----------------------------
CREATE UNIQUE INDEX TTA_BRANDPLN_LINE_U1
ON TTA_BRANDPLN_LINE (BRANDPLN_H_ID ASC, BRAND_CN ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table TTA_BRANDPLN_LINE
-- ----------------------------
ALTER TABLE TTA_BRANDPLN_LINE ADD CHECK (BRANDPLN_L_ID IS NOT NULL);
ALTER TABLE TTA_BRANDPLN_LINE ADD CHECK (BRAND_DETAILS IS NOT NULL);
ALTER TABLE TTA_BRANDPLN_LINE ADD CHECK (GROUP_CODE IS NOT NULL);
ALTER TABLE TTA_BRANDPLN_LINE ADD CHECK (GROUP_DESC IS NOT NULL);
ALTER TABLE TTA_BRANDPLN_LINE ADD CHECK (DEPT_CODE IS NOT NULL);
ALTER TABLE TTA_BRANDPLN_LINE ADD CHECK (DEPT_DESC IS NOT NULL);
ALTER TABLE TTA_BRANDPLN_LINE ADD CHECK (BRAND_CN IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_BRANDPLN_LINE
-- ----------------------------
ALTER TABLE TTA_BRANDPLN_LINE ADD PRIMARY KEY (BRANDPLN_L_ID);

-- ----------------------------
-- Indexes structure for table TTA_CLAUSE_TREE
-- ----------------------------
CREATE INDEX PK_TTA_CLAUSE_TREE_U1
ON TTA_CLAUSE_TREE (OLD_CLAUSE_ID ASC)
LOGGING
VISIBLE;
CREATE INDEX PK_TTA_CLAUSE_TREE_U2
ON TTA_CLAUSE_TREE (TEAM_FRAMEWORK_ID ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table TTA_CLAUSE_TREE
-- ----------------------------
ALTER TABLE TTA_CLAUSE_TREE ADD CHECK (CLAUSE_ID IS NOT NULL);
ALTER TABLE TTA_CLAUSE_TREE ADD CHECK (CLAUSE_CN IS NOT NULL);
ALTER TABLE TTA_CLAUSE_TREE ADD CHECK (STATUS IS NOT NULL);
ALTER TABLE TTA_CLAUSE_TREE ADD CHECK (IS_HIERARCHY_SHOW IS NOT NULL);
ALTER TABLE TTA_CLAUSE_TREE ADD CHECK (PAYMENT_METHOD IS NOT NULL);
ALTER TABLE TTA_CLAUSE_TREE ADD CHECK (BUSINESS_TYPE IS NOT NULL);
ALTER TABLE TTA_CLAUSE_TREE ADD CHECK (BUSINESS_VERSION IS NOT NULL);
ALTER TABLE TTA_CLAUSE_TREE ADD CHECK (ORDER_NO IS NOT NULL);
ALTER TABLE TTA_CLAUSE_TREE ADD CHECK (TERM_CATEGORY IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_CLAUSE_TREE
-- ----------------------------
ALTER TABLE TTA_CLAUSE_TREE ADD PRIMARY KEY (CLAUSE_ID);

-- ----------------------------
-- Indexes structure for table TTA_CLAUSE_TREE_H
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_CLAUSE_TREE_H
-- ----------------------------
ALTER TABLE TTA_CLAUSE_TREE_H ADD CHECK (CLAUSE_ID IS NOT NULL);
ALTER TABLE TTA_CLAUSE_TREE_H ADD CHECK (CLAUSE_CN IS NOT NULL);
ALTER TABLE TTA_CLAUSE_TREE_H ADD CHECK (STATUS IS NOT NULL);
ALTER TABLE TTA_CLAUSE_TREE_H ADD CHECK (IS_HIERARCHY_SHOW IS NOT NULL);
ALTER TABLE TTA_CLAUSE_TREE_H ADD CHECK (PAYMENT_METHOD IS NOT NULL);
ALTER TABLE TTA_CLAUSE_TREE_H ADD CHECK (BUSINESS_TYPE IS NOT NULL);
ALTER TABLE TTA_CLAUSE_TREE_H ADD CHECK (BUSINESS_VERSION IS NOT NULL);
ALTER TABLE TTA_CLAUSE_TREE_H ADD CHECK (ORDER_NO IS NOT NULL);
ALTER TABLE TTA_CLAUSE_TREE_H ADD CHECK (IS_CHANGE IS NOT NULL);
ALTER TABLE TTA_CLAUSE_TREE_H ADD CHECK (TERM_CATEGORY IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_CLAUSE_TREE_H
-- ----------------------------
ALTER TABLE TTA_CLAUSE_TREE_H ADD PRIMARY KEY (CLAUSE_ID);

-- ----------------------------
-- Indexes structure for table TTA_COLLECT_TYPE_LINE
-- ----------------------------
CREATE INDEX TTA_COLLECT_TYPE_LINE_U1
ON TTA_COLLECT_TYPE_LINE (TEAM_FRAMEWORK_ID ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table TTA_COLLECT_TYPE_LINE
-- ----------------------------
ALTER TABLE TTA_COLLECT_TYPE_LINE ADD CHECK (COLLECT_TYPE_ID IS NOT NULL);
ALTER TABLE TTA_COLLECT_TYPE_LINE ADD CHECK (CLAUSE_ID IS NOT NULL);
ALTER TABLE TTA_COLLECT_TYPE_LINE ADD CHECK (STANDARD_VALUE IS NOT NULL);
ALTER TABLE TTA_COLLECT_TYPE_LINE ADD CHECK (UNIT_VALUE IS NOT NULL);
ALTER TABLE TTA_COLLECT_TYPE_LINE ADD CHECK (IS_ENABLE IS NOT NULL);
ALTER TABLE TTA_COLLECT_TYPE_LINE ADD CHECK (IS_DEFAULT_VALUE IS NOT NULL);
ALTER TABLE TTA_COLLECT_TYPE_LINE ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE TTA_COLLECT_TYPE_LINE ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE TTA_COLLECT_TYPE_LINE ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE TTA_COLLECT_TYPE_LINE ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);
ALTER TABLE TTA_COLLECT_TYPE_LINE ADD CHECK (TEAM_FRAMEWORK_ID IS NOT NULL);
ALTER TABLE TTA_COLLECT_TYPE_LINE ADD CHECK (DELETE_FLAG IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_COLLECT_TYPE_LINE
-- ----------------------------
ALTER TABLE TTA_COLLECT_TYPE_LINE ADD PRIMARY KEY (COLLECT_TYPE_ID);

-- ----------------------------
-- Indexes structure for table TTA_COLLECT_TYPE_LINE_H
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_COLLECT_TYPE_LINE_H
-- ----------------------------
ALTER TABLE TTA_COLLECT_TYPE_LINE_H ADD CHECK (COLLECT_TYPE_ID IS NOT NULL);
ALTER TABLE TTA_COLLECT_TYPE_LINE_H ADD CHECK (CLAUSE_ID IS NOT NULL);
ALTER TABLE TTA_COLLECT_TYPE_LINE_H ADD CHECK (STANDARD_VALUE IS NOT NULL);
ALTER TABLE TTA_COLLECT_TYPE_LINE_H ADD CHECK (UNIT_VALUE IS NOT NULL);
ALTER TABLE TTA_COLLECT_TYPE_LINE_H ADD CHECK (IS_ENABLE IS NOT NULL);
ALTER TABLE TTA_COLLECT_TYPE_LINE_H ADD CHECK (IS_DEFAULT_VALUE IS NOT NULL);
ALTER TABLE TTA_COLLECT_TYPE_LINE_H ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE TTA_COLLECT_TYPE_LINE_H ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE TTA_COLLECT_TYPE_LINE_H ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE TTA_COLLECT_TYPE_LINE_H ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);
ALTER TABLE TTA_COLLECT_TYPE_LINE_H ADD CHECK (TEAM_FRAMEWORK_ID IS NOT NULL);
ALTER TABLE TTA_COLLECT_TYPE_LINE_H ADD CHECK (DELETE_FLAG IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_COLLECT_TYPE_LINE_H
-- ----------------------------
ALTER TABLE TTA_COLLECT_TYPE_LINE_H ADD PRIMARY KEY (COLLECT_TYPE_ID);

-- ----------------------------
-- Checks structure for table TTA_CONTRACT_DETAIL
-- ----------------------------
ALTER TABLE TTA_CONTRACT_DETAIL ADD CHECK (CONTRACT_D_ID IS NOT NULL);
ALTER TABLE TTA_CONTRACT_DETAIL ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE TTA_CONTRACT_DETAIL ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE TTA_CONTRACT_DETAIL ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE TTA_CONTRACT_DETAIL ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);

-- ----------------------------
-- Indexes structure for table TTA_CONTRACT_HEADER
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_CONTRACT_HEADER
-- ----------------------------
ALTER TABLE TTA_CONTRACT_HEADER ADD CHECK (CONTRACT_H_ID IS NOT NULL);
ALTER TABLE TTA_CONTRACT_HEADER ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE TTA_CONTRACT_HEADER ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE TTA_CONTRACT_HEADER ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE TTA_CONTRACT_HEADER ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_CONTRACT_HEADER
-- ----------------------------
ALTER TABLE TTA_CONTRACT_HEADER ADD PRIMARY KEY (CONTRACT_H_ID);

-- ----------------------------
-- Indexes structure for table TTA_CONTRACT_LINE
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_CONTRACT_LINE
-- ----------------------------
ALTER TABLE TTA_CONTRACT_LINE ADD CHECK (CONTRACT_L_ID IS NOT NULL);
ALTER TABLE TTA_CONTRACT_LINE ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE TTA_CONTRACT_LINE ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE TTA_CONTRACT_LINE ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);
ALTER TABLE TTA_CONTRACT_LINE ADD CHECK (LAST_UPDATED_BY IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_CONTRACT_LINE
-- ----------------------------
ALTER TABLE TTA_CONTRACT_LINE ADD PRIMARY KEY (CONTRACT_L_ID);

-- ----------------------------
-- Indexes structure for table TTA_CONTRACT_LINE_H
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_CONTRACT_LINE_H
-- ----------------------------
ALTER TABLE TTA_CONTRACT_LINE_H ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE TTA_CONTRACT_LINE_H ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE TTA_CONTRACT_LINE_H ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);
ALTER TABLE TTA_CONTRACT_LINE_H ADD CHECK (CONTRACT_LH_ID IS NOT NULL);
ALTER TABLE TTA_CONTRACT_LINE_H ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE TTA_CONTRACT_LINE_H ADD CHECK (LAST_UPDATE_LOGIN IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_CONTRACT_LINE_H
-- ----------------------------
ALTER TABLE TTA_CONTRACT_LINE_H ADD PRIMARY KEY (CONTRACT_LH_ID);

-- ----------------------------
-- Indexes structure for table TTA_DEPT_FEE
-- ----------------------------

-- ----------------------------
-- Uniques structure for table TTA_DEPT_FEE
-- ----------------------------
ALTER TABLE TTA_DEPT_FEE ADD UNIQUE (LINE_CODE, ACCORD_TYPE, PROPOSAL_ID);

-- ----------------------------
-- Checks structure for table TTA_DEPT_FEE
-- ----------------------------
ALTER TABLE TTA_DEPT_FEE ADD CHECK (DEPTFEE_LINE_ID IS NOT NULL);
ALTER TABLE TTA_DEPT_FEE ADD CHECK (DEPT_FEE_ID IS NOT NULL);
ALTER TABLE TTA_DEPT_FEE ADD CHECK (LINE_CODE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_DEPT_FEE
-- ----------------------------
ALTER TABLE TTA_DEPT_FEE ADD PRIMARY KEY (DEPTFEE_LINE_ID);

-- ----------------------------
-- Indexes structure for table TTA_DEPT_FEE_HEADER
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_DEPT_FEE_HEADER
-- ----------------------------
ALTER TABLE TTA_DEPT_FEE_HEADER ADD CHECK (DEPT_FEE_ID IS NOT NULL);
ALTER TABLE TTA_DEPT_FEE_HEADER ADD CHECK (YEAR_CODE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_DEPT_FEE_HEADER
-- ----------------------------
ALTER TABLE TTA_DEPT_FEE_HEADER ADD PRIMARY KEY (DEPT_FEE_ID);

-- ----------------------------
-- Indexes structure for table TTA_DEPT_IN
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_DEPT_IN
-- ----------------------------
ALTER TABLE TTA_DEPT_IN ADD CHECK (CODE IS NOT NULL);
ALTER TABLE TTA_DEPT_IN ADD CHECK (NAME_CN IS NOT NULL);
ALTER TABLE TTA_DEPT_IN ADD CHECK (NAME_EN IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_DEPT_IN
-- ----------------------------
ALTER TABLE TTA_DEPT_IN ADD PRIMARY KEY (CODE);

-- ----------------------------
-- Indexes structure for table TTA_FEE_DEPT_DETAIL
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_FEE_DEPT_DETAIL
-- ----------------------------
ALTER TABLE TTA_FEE_DEPT_DETAIL ADD CHECK (FEEDEPT_DETAIL_ID IS NOT NULL);
ALTER TABLE TTA_FEE_DEPT_DETAIL ADD CHECK (FEEDEPT_ID IS NOT NULL);
ALTER TABLE TTA_FEE_DEPT_DETAIL ADD CHECK (FEEDEPT_LINE_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_FEE_DEPT_DETAIL
-- ----------------------------
ALTER TABLE TTA_FEE_DEPT_DETAIL ADD PRIMARY KEY (FEEDEPT_DETAIL_ID);

-- ----------------------------
-- Checks structure for table TTA_FEE_DEPT_HEADER
-- ----------------------------
ALTER TABLE TTA_FEE_DEPT_HEADER ADD CHECK (FEEDEPT_ID IS NOT NULL);
ALTER TABLE TTA_FEE_DEPT_HEADER ADD CHECK (YEAR_CODE IS NOT NULL);
ALTER TABLE TTA_FEE_DEPT_HEADER ADD CHECK (ACCORD_TYPE IS NOT NULL);
ALTER TABLE TTA_FEE_DEPT_HEADER ADD CHECK (STATUS IS NOT NULL);

-- ----------------------------
-- Indexes structure for table TTA_FEE_DEPT_LINE
-- ----------------------------
CREATE UNIQUE INDEX PK_TTA_FEE_DEPT_LINE
ON TTA_FEE_DEPT_LINE (LINE_CODE ASC, FEEDEPT_ID ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table TTA_FEE_DEPT_LINE
-- ----------------------------
ALTER TABLE TTA_FEE_DEPT_LINE ADD CHECK (FEEDEPT_LINE_ID IS NOT NULL);
ALTER TABLE TTA_FEE_DEPT_LINE ADD CHECK (FEEDEPT_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_FEE_DEPT_LINE
-- ----------------------------
ALTER TABLE TTA_FEE_DEPT_LINE ADD PRIMARY KEY (FEEDEPT_LINE_ID);

-- ----------------------------
-- Checks structure for table TTA_GROUP
-- ----------------------------
ALTER TABLE TTA_GROUP ADD CHECK (GROUP_ID IS NOT NULL);
ALTER TABLE TTA_GROUP ADD CHECK (GROUP_CODE IS NOT NULL);
ALTER TABLE TTA_GROUP ADD CHECK (GROUP_DESC IS NOT NULL);



-- ----------------------------
-- Indexes structure for table TTA_MARKET_IN
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_MARKET_IN
-- ----------------------------
ALTER TABLE TTA_MARKET_IN ADD CHECK (MARKET_CODE IS NOT NULL);
ALTER TABLE TTA_MARKET_IN ADD CHECK (MARKET_NAME IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_MARKET_IN
-- ----------------------------
ALTER TABLE TTA_MARKET_IN ADD PRIMARY KEY (MARKET_CODE);

-- ----------------------------
-- Checks structure for table TTA_NEW_FEE
-- ----------------------------
ALTER TABLE TTA_NEW_FEE ADD CHECK (NEW_FEE_ID IS NOT NULL);

-- ----------------------------
-- Indexes structure for table TTA_NEWBREED_EXTEND_HEADER
-- ----------------------------
CREATE UNIQUE INDEX TTA_NB_EXTEND_U1
ON TTA_NEWBREED_EXTEND_HEADER (PROPOSAL_ID ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table TTA_NEWBREED_EXTEND_HEADER
-- ----------------------------
ALTER TABLE TTA_NEWBREED_EXTEND_HEADER ADD CHECK (NEWBREED_EXTEND_H_ID IS NOT NULL);
ALTER TABLE TTA_NEWBREED_EXTEND_HEADER ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE TTA_NEWBREED_EXTEND_HEADER ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE TTA_NEWBREED_EXTEND_HEADER ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE TTA_NEWBREED_EXTEND_HEADER ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_NEWBREED_EXTEND_HEADER
-- ----------------------------
ALTER TABLE TTA_NEWBREED_EXTEND_HEADER ADD PRIMARY KEY (NEWBREED_EXTEND_H_ID);

-- ----------------------------
-- Indexes structure for table TTA_NEWBREED_EXTEND_LINE
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_NEWBREED_EXTEND_LINE
-- ----------------------------
ALTER TABLE TTA_NEWBREED_EXTEND_LINE ADD CHECK (NEWBREED_EXTEND_L_ID IS NOT NULL);
ALTER TABLE TTA_NEWBREED_EXTEND_LINE ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE TTA_NEWBREED_EXTEND_LINE ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE TTA_NEWBREED_EXTEND_LINE ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);
ALTER TABLE TTA_NEWBREED_EXTEND_LINE ADD CHECK (LAST_UPDATED_BY IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_NEWBREED_EXTEND_LINE
-- ----------------------------
ALTER TABLE TTA_NEWBREED_EXTEND_LINE ADD PRIMARY KEY (NEWBREED_EXTEND_L_ID);

-- ----------------------------
-- Indexes structure for table TTA_NEWBREED_SET_HEADER
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_NEWBREED_SET_HEADER
-- ----------------------------
ALTER TABLE TTA_NEWBREED_SET_HEADER ADD CHECK (NEWBREED_SET_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_NEWBREED_SET_HEADER
-- ----------------------------
ALTER TABLE TTA_NEWBREED_SET_HEADER ADD PRIMARY KEY (NEWBREED_SET_ID);

-- ----------------------------
-- Indexes structure for table TTA_NEWBREED_SET_LINE
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_NEWBREED_SET_LINE
-- ----------------------------
ALTER TABLE TTA_NEWBREED_SET_LINE ADD CHECK (NEWBREED_SET_LINE_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_NEWBREED_SET_LINE
-- ----------------------------
ALTER TABLE TTA_NEWBREED_SET_LINE ADD PRIMARY KEY (NEWBREED_SET_LINE_ID);

-- ----------------------------
-- Indexes structure for table TTA_OI_BILL_LINE
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_OI_BILL_LINE
-- ----------------------------
ALTER TABLE TTA_OI_BILL_LINE ADD CHECK (TTA_OI_BILL_IMPORT_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_OI_BILL_LINE
-- ----------------------------
ALTER TABLE TTA_OI_BILL_LINE ADD PRIMARY KEY (TTA_OI_BILL_IMPORT_ID);

-- ----------------------------
-- Checks structure for table TTA_ORG_IN
-- ----------------------------
ALTER TABLE TTA_ORG_IN ADD CHECK (ORG_CODE IS NOT NULL);
ALTER TABLE TTA_ORG_IN ADD CHECK (ORG_NAME IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_ORG_IN
-- ----------------------------
ALTER TABLE TTA_ORG_IN ADD PRIMARY KEY (ORG_CODE) DISABLE;

-- ----------------------------
-- Indexes structure for table TTA_OSD_MONTHLY_CHECKING
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_OSD_MONTHLY_CHECKING
-- ----------------------------
ALTER TABLE TTA_OSD_MONTHLY_CHECKING ADD CHECK (ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_OSD_MONTHLY_CHECKING
-- ----------------------------
ALTER TABLE TTA_OSD_MONTHLY_CHECKING ADD PRIMARY KEY (ID);

-- ----------------------------
-- Indexes structure for table TTA_OSD_SALES_SITE
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_OSD_SALES_SITE
-- ----------------------------
ALTER TABLE TTA_OSD_SALES_SITE ADD CHECK (SALES_SITE_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_OSD_SALES_SITE
-- ----------------------------
ALTER TABLE TTA_OSD_SALES_SITE ADD PRIMARY KEY (SALES_SITE_ID);

-- ----------------------------
-- Indexes structure for table TTA_PERSON_IN
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_PERSON_IN
-- ----------------------------
ALTER TABLE TTA_PERSON_IN ADD CHECK (CODE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_PERSON_IN
-- ----------------------------
ALTER TABLE TTA_PERSON_IN ADD PRIMARY KEY (CODE);

-- ----------------------------
-- Indexes structure for table TTA_PRINT_RECORD
-- ----------------------------

-- ----------------------------
-- Uniques structure for table TTA_PRINT_RECORD
-- ----------------------------
ALTER TABLE TTA_PRINT_RECORD ADD UNIQUE (PRINT_TYPE);

-- ----------------------------
-- Checks structure for table TTA_PRINT_RECORD
-- ----------------------------
ALTER TABLE TTA_PRINT_RECORD ADD CHECK (PRINT_RECORD_ID IS NOT NULL);
ALTER TABLE TTA_PRINT_RECORD ADD CHECK (PRINT_TYPE IS NOT NULL);
ALTER TABLE TTA_PRINT_RECORD ADD CHECK (PRINT_COUNT IS NOT NULL);
ALTER TABLE TTA_PRINT_RECORD ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE TTA_PRINT_RECORD ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_PRINT_RECORD
-- ----------------------------
ALTER TABLE TTA_PRINT_RECORD ADD PRIMARY KEY (PRINT_RECORD_ID);

-- ----------------------------
-- Indexes structure for table TTA_PROMOTION_GUIDELINE
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_PROMOTION_GUIDELINE
-- ----------------------------
ALTER TABLE TTA_PROMOTION_GUIDELINE ADD CHECK (OSD_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_PROMOTION_GUIDELINE
-- ----------------------------
ALTER TABLE TTA_PROMOTION_GUIDELINE ADD PRIMARY KEY (OSD_ID);

-- ----------------------------
-- Indexes structure for table TTA_PROPOSAL_HEADER
-- ----------------------------
CREATE INDEX PK_VENDOR_NBR
ON TTA_PROPOSAL_HEADER (VENDOR_NBR ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table TTA_PROPOSAL_HEADER
-- ----------------------------
ALTER TABLE TTA_PROPOSAL_HEADER ADD CHECK (PROPOSAL_ID IS NOT NULL);
ALTER TABLE TTA_PROPOSAL_HEADER ADD CHECK (ORDER_NBR IS NOT NULL);
ALTER TABLE TTA_PROPOSAL_HEADER ADD CHECK (VENDOR_NBR IS NOT NULL);
ALTER TABLE TTA_PROPOSAL_HEADER ADD CHECK (VENDOR_NAME IS NOT NULL);
ALTER TABLE TTA_PROPOSAL_HEADER ADD CHECK (PROPOSAL_YEAR IS NOT NULL);
ALTER TABLE TTA_PROPOSAL_HEADER ADD CHECK (STATUS IS NOT NULL);
ALTER TABLE TTA_PROPOSAL_HEADER ADD CHECK (IS_TRANSDEPART IS NOT NULL);
ALTER TABLE TTA_PROPOSAL_HEADER ADD CHECK (IS_CROSS_YEAR IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_PROPOSAL_HEADER
-- ----------------------------
ALTER TABLE TTA_PROPOSAL_HEADER ADD PRIMARY KEY (PROPOSAL_ID);

-- ----------------------------
-- Indexes structure for table TTA_PROPOSAL_TERMS_HEADER
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_PROPOSAL_TERMS_HEADER
-- ----------------------------
ALTER TABLE TTA_PROPOSAL_TERMS_HEADER ADD CHECK (TERMS_H_ID IS NOT NULL);
ALTER TABLE TTA_PROPOSAL_TERMS_HEADER ADD CHECK (AGREEMENT_EDITION IS NOT NULL);
ALTER TABLE TTA_PROPOSAL_TERMS_HEADER ADD CHECK (VENDOR_NBR IS NOT NULL);
ALTER TABLE TTA_PROPOSAL_TERMS_HEADER ADD CHECK (VENDOR_DESC IS NOT NULL);
ALTER TABLE TTA_PROPOSAL_TERMS_HEADER ADD CHECK (DEPT_CODE IS NOT NULL);
ALTER TABLE TTA_PROPOSAL_TERMS_HEADER ADD CHECK (DEPT_DESC IS NOT NULL);
ALTER TABLE TTA_PROPOSAL_TERMS_HEADER ADD CHECK (BRAND_CN IS NOT NULL);
ALTER TABLE TTA_PROPOSAL_TERMS_HEADER ADD CHECK (BRAND_EN IS NOT NULL);
ALTER TABLE TTA_PROPOSAL_TERMS_HEADER ADD CHECK (WAREHOUSE_CODE IS NOT NULL);
ALTER TABLE TTA_PROPOSAL_TERMS_HEADER ADD CHECK (WAREHOUSE_DESC IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_PROPOSAL_TERMS_HEADER
-- ----------------------------
ALTER TABLE TTA_PROPOSAL_TERMS_HEADER ADD PRIMARY KEY (TERMS_H_ID);

-- ----------------------------
-- Indexes structure for table TTA_PROPOSAL_TERMS_LINE
-- ----------------------------
CREATE INDEX PK_TERMS_L_CLA
ON TTA_PROPOSAL_TERMS_LINE (CLAUSE_ID ASC)
LOGGING
VISIBLE;
CREATE INDEX PK_TERMS_L_PRO
ON TTA_PROPOSAL_TERMS_LINE (PROPOSAL_ID ASC)
LOGGING
VISIBLE;
CREATE INDEX PK_TERMS_L_U2
ON TTA_PROPOSAL_TERMS_LINE (CLAUSE_TREE_ID ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Uniques structure for table TTA_PROPOSAL_TERMS_LINE
-- ----------------------------
ALTER TABLE TTA_PROPOSAL_TERMS_LINE ADD UNIQUE (TERMS_H_ID, INCOME_TYPE, CLAUSE_ID);

-- ----------------------------
-- Checks structure for table TTA_PROPOSAL_TERMS_LINE
-- ----------------------------
ALTER TABLE TTA_PROPOSAL_TERMS_LINE ADD CHECK (TERMS_L_ID IS NOT NULL);
ALTER TABLE TTA_PROPOSAL_TERMS_LINE ADD CHECK (TERMS_H_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_PROPOSAL_TERMS_LINE
-- ----------------------------
ALTER TABLE TTA_PROPOSAL_TERMS_LINE ADD PRIMARY KEY (TERMS_L_ID);

-- ----------------------------
-- Indexes structure for table TTA_PURCHASE
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_PURCHASE
-- ----------------------------
ALTER TABLE TTA_PURCHASE ADD CHECK (VENDOR_NBR IS NOT NULL);
ALTER TABLE TTA_PURCHASE ADD CHECK (VENDOR_NAME IS NOT NULL);
ALTER TABLE TTA_PURCHASE ADD CHECK (YEAR_MONTH_DAY IS NOT NULL);
ALTER TABLE TTA_PURCHASE ADD CHECK (IS_DSD IS NOT NULL);
ALTER TABLE TTA_PURCHASE ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE TTA_PURCHASE ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE TTA_PURCHASE ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE TTA_PURCHASE ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_PURCHASE
-- ----------------------------
ALTER TABLE TTA_PURCHASE ADD PRIMARY KEY (PURCHASE_ID);

-- ----------------------------
-- Indexes structure for table TTA_QUESTIONNAIRE_CHOICE
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_QUESTIONNAIRE_CHOICE
-- ----------------------------
ALTER TABLE TTA_QUESTIONNAIRE_CHOICE ADD CHECK (QN_CHOICE_ID IS NOT NULL);
ALTER TABLE TTA_QUESTIONNAIRE_CHOICE ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE TTA_QUESTIONNAIRE_CHOICE ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE TTA_QUESTIONNAIRE_CHOICE ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE TTA_QUESTIONNAIRE_CHOICE ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_QUESTIONNAIRE_CHOICE
-- ----------------------------
ALTER TABLE TTA_QUESTIONNAIRE_CHOICE ADD PRIMARY KEY (QN_CHOICE_ID);

-- ----------------------------
-- Indexes structure for table TTA_QUESTIONNAIRE_LINE
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_QUESTIONNAIRE_LINE
-- ----------------------------
ALTER TABLE TTA_QUESTIONNAIRE_LINE ADD CHECK (QN_LINE_ID IS NOT NULL);
ALTER TABLE TTA_QUESTIONNAIRE_LINE ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE TTA_QUESTIONNAIRE_LINE ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE TTA_QUESTIONNAIRE_LINE ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE TTA_QUESTIONNAIRE_LINE ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_QUESTIONNAIRE_LINE
-- ----------------------------
ALTER TABLE TTA_QUESTIONNAIRE_LINE ADD PRIMARY KEY (QN_LINE_ID);

-- ----------------------------
-- Indexes structure for table TTA_QUESTIONNAIRE_PUBLISH
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_QUESTIONNAIRE_PUBLISH
-- ----------------------------
ALTER TABLE TTA_QUESTIONNAIRE_PUBLISH ADD CHECK (PUBLISH_ID IS NOT NULL);
ALTER TABLE TTA_QUESTIONNAIRE_PUBLISH ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE TTA_QUESTIONNAIRE_PUBLISH ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE TTA_QUESTIONNAIRE_PUBLISH ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE TTA_QUESTIONNAIRE_PUBLISH ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_QUESTIONNAIRE_PUBLISH
-- ----------------------------
ALTER TABLE TTA_QUESTIONNAIRE_PUBLISH ADD PRIMARY KEY (PUBLISH_ID);

-- ----------------------------
-- Indexes structure for table TTA_QUESTIONNAIRE_RESULT
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_QUESTIONNAIRE_RESULT
-- ----------------------------
ALTER TABLE TTA_QUESTIONNAIRE_RESULT ADD CHECK (RESULT_CHOICE_ID IS NOT NULL);
ALTER TABLE TTA_QUESTIONNAIRE_RESULT ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE TTA_QUESTIONNAIRE_RESULT ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE TTA_QUESTIONNAIRE_RESULT ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE TTA_QUESTIONNAIRE_RESULT ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_QUESTIONNAIRE_RESULT
-- ----------------------------
ALTER TABLE TTA_QUESTIONNAIRE_RESULT ADD PRIMARY KEY (RESULT_CHOICE_ID);

-- ----------------------------
-- Indexes structure for table TTA_REL_SUPPLIER
-- ----------------------------
CREATE UNIQUE INDEX TTA_REL_SUPPLIER_U1
ON TTA_REL_SUPPLIER (REL_SUPPLIER_CODE ASC, REL_ID ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table TTA_REL_SUPPLIER
-- ----------------------------
ALTER TABLE TTA_REL_SUPPLIER ADD CHECK (REL_SUPPLIER_ID IS NOT NULL);
ALTER TABLE TTA_REL_SUPPLIER ADD CHECK (REL_SUPPLIER_CODE IS NOT NULL);
ALTER TABLE TTA_REL_SUPPLIER ADD CHECK (REL_SUPPLIER_NAME IS NOT NULL);
ALTER TABLE TTA_REL_SUPPLIER ADD CHECK (REL_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_REL_SUPPLIER
-- ----------------------------
ALTER TABLE TTA_REL_SUPPLIER ADD PRIMARY KEY (REL_SUPPLIER_ID);

-- ----------------------------
-- Indexes structure for table TTA_REL_SUPPLIER_BRAND
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_REL_SUPPLIER_BRAND
-- ----------------------------
ALTER TABLE TTA_REL_SUPPLIER_BRAND ADD CHECK (REL_SUPPLIER_ID IS NOT NULL);
ALTER TABLE TTA_REL_SUPPLIER_BRAND ADD CHECK (REL_ID IS NOT NULL);
ALTER TABLE TTA_REL_SUPPLIER_BRAND ADD CHECK (REL_BRAND_NAME IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_REL_SUPPLIER_BRAND
-- ----------------------------
ALTER TABLE TTA_REL_SUPPLIER_BRAND ADD PRIMARY KEY (REL_SUPPLIER_ID);

-- ----------------------------
-- Indexes structure for table TTA_REL_SUPPLIER_DEPT
-- ----------------------------
CREATE UNIQUE INDEX TTA_REL_SUPPLIER_DEPT_U1
ON TTA_REL_SUPPLIER_DEPT (REL_ID ASC, REL_DEPT_CODE ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table TTA_REL_SUPPLIER_DEPT
-- ----------------------------
ALTER TABLE TTA_REL_SUPPLIER_DEPT ADD CHECK (REL_SUPPLIER_ID IS NOT NULL);
ALTER TABLE TTA_REL_SUPPLIER_DEPT ADD CHECK (REL_DEPT_CODE IS NOT NULL);
ALTER TABLE TTA_REL_SUPPLIER_DEPT ADD CHECK (REL_DEPT_NAME IS NOT NULL);
ALTER TABLE TTA_REL_SUPPLIER_DEPT ADD CHECK (REL_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_REL_SUPPLIER_DEPT
-- ----------------------------
ALTER TABLE TTA_REL_SUPPLIER_DEPT ADD PRIMARY KEY (REL_SUPPLIER_ID);

-- ----------------------------
-- Indexes structure for table TTA_REPORT_RELATIONSHIP_IN
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_REPORT_RELATIONSHIP_IN
-- ----------------------------
ALTER TABLE TTA_REPORT_RELATIONSHIP_IN ADD CHECK (EMPLOYEE_NO IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_REPORT_RELATIONSHIP_IN
-- ----------------------------
ALTER TABLE TTA_REPORT_RELATIONSHIP_IN ADD PRIMARY KEY (EMPLOYEE_NO);

-- ----------------------------
-- Indexes structure for table TTA_RULE_FILE_TEMPLATE
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_RULE_FILE_TEMPLATE
-- ----------------------------
ALTER TABLE TTA_RULE_FILE_TEMPLATE ADD CHECK (FILE_TEMP_ID IS NOT NULL);
ALTER TABLE TTA_RULE_FILE_TEMPLATE ADD CHECK (FILE_TEMP_NAME IS NOT NULL);
ALTER TABLE TTA_RULE_FILE_TEMPLATE ADD CHECK (FILE_TYPE IS NOT NULL);
ALTER TABLE TTA_RULE_FILE_TEMPLATE ADD CHECK (FILE_CONTENT IS NOT NULL);
ALTER TABLE TTA_RULE_FILE_TEMPLATE ADD CHECK (BUSINESS_TYPE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_RULE_FILE_TEMPLATE
-- ----------------------------
ALTER TABLE TTA_RULE_FILE_TEMPLATE ADD PRIMARY KEY (FILE_TEMP_ID);


-- ----------------------------
-- Indexes structure for table TTA_SIDE_AGRT_HEADER
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_SIDE_AGRT_HEADER
-- ----------------------------
ALTER TABLE TTA_SIDE_AGRT_HEADER ADD CHECK (SIDE_AGRT_H_ID IS NOT NULL);
ALTER TABLE TTA_SIDE_AGRT_HEADER ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE TTA_SIDE_AGRT_HEADER ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE TTA_SIDE_AGRT_HEADER ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE TTA_SIDE_AGRT_HEADER ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_SIDE_AGRT_HEADER
-- ----------------------------
ALTER TABLE TTA_SIDE_AGRT_HEADER ADD PRIMARY KEY (SIDE_AGRT_H_ID);

-- ----------------------------
-- Indexes structure for table TTA_SIDE_AGRT_LINE
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_SIDE_AGRT_LINE
-- ----------------------------
ALTER TABLE TTA_SIDE_AGRT_LINE ADD CHECK (SIDE_AGRT_L_ID IS NOT NULL);
ALTER TABLE TTA_SIDE_AGRT_LINE ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE TTA_SIDE_AGRT_LINE ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE TTA_SIDE_AGRT_LINE ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE TTA_SIDE_AGRT_LINE ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_SIDE_AGRT_LINE
-- ----------------------------
ALTER TABLE TTA_SIDE_AGRT_LINE ADD PRIMARY KEY (SIDE_AGRT_L_ID);

-- ----------------------------
-- Indexes structure for table TTA_SOLE_AGRT
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_SOLE_AGRT
-- ----------------------------
ALTER TABLE TTA_SOLE_AGRT ADD CHECK (SOLE_AGRT_H_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_SOLE_AGRT
-- ----------------------------
ALTER TABLE TTA_SOLE_AGRT ADD PRIMARY KEY (SOLE_AGRT_H_ID);

-- ----------------------------
-- Indexes structure for table TTA_SOLE_AGRT_INFO
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_SOLE_AGRT_INFO
-- ----------------------------
ALTER TABLE TTA_SOLE_AGRT_INFO ADD CHECK (SOLE_AGRT_INFO_ID IS NOT NULL);
ALTER TABLE TTA_SOLE_AGRT_INFO ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE TTA_SOLE_AGRT_INFO ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE TTA_SOLE_AGRT_INFO ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE TTA_SOLE_AGRT_INFO ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_SOLE_AGRT_INFO
-- ----------------------------
ALTER TABLE TTA_SOLE_AGRT_INFO ADD PRIMARY KEY (SOLE_AGRT_INFO_ID);

-- ----------------------------
-- Indexes structure for table TTA_SOLE_ITEM
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_SOLE_ITEM
-- ----------------------------
ALTER TABLE TTA_SOLE_ITEM ADD CHECK (SOLE_ITEM_ID IS NOT NULL);
ALTER TABLE TTA_SOLE_ITEM ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE TTA_SOLE_ITEM ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE TTA_SOLE_ITEM ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE TTA_SOLE_ITEM ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_SOLE_ITEM
-- ----------------------------
ALTER TABLE TTA_SOLE_ITEM ADD PRIMARY KEY (SOLE_ITEM_ID);

-- ----------------------------
-- Indexes structure for table TTA_SOLE_SUPPLIER
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_SOLE_SUPPLIER
-- ----------------------------
ALTER TABLE TTA_SOLE_SUPPLIER ADD CHECK (SOLE_SUPPLIER_ID IS NOT NULL);
ALTER TABLE TTA_SOLE_SUPPLIER ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE TTA_SOLE_SUPPLIER ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE TTA_SOLE_SUPPLIER ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE TTA_SOLE_SUPPLIER ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_SOLE_SUPPLIER
-- ----------------------------
ALTER TABLE TTA_SOLE_SUPPLIER ADD PRIMARY KEY (SOLE_SUPPLIER_ID);

-- ----------------------------
-- Indexes structure for table TTA_SUBJECT_CHOICE_SEC_MID
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_SUBJECT_CHOICE_SEC_MID
-- ----------------------------
ALTER TABLE TTA_SUBJECT_CHOICE_SEC_MID ADD CHECK (MID_ID IS NOT NULL);
ALTER TABLE TTA_SUBJECT_CHOICE_SEC_MID ADD CHECK (QN_CHOICE_ID IS NOT NULL);
ALTER TABLE TTA_SUBJECT_CHOICE_SEC_MID ADD CHECK (QN_LINE_ID IS NOT NULL);
ALTER TABLE TTA_SUBJECT_CHOICE_SEC_MID ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE TTA_SUBJECT_CHOICE_SEC_MID ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE TTA_SUBJECT_CHOICE_SEC_MID ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE TTA_SUBJECT_CHOICE_SEC_MID ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_SUBJECT_CHOICE_SEC_MID
-- ----------------------------
ALTER TABLE TTA_SUBJECT_CHOICE_SEC_MID ADD PRIMARY KEY (MID_ID);

-- ----------------------------
-- Indexes structure for table TTA_SUPPLIER
-- ----------------------------
CREATE INDEX PK_TTA_SUPPLIER_U1
ON TTA_SUPPLIER (SUPPLIER_CODE ASC)
LOGGING
VISIBLE;
CREATE INDEX PK_TTA_SUPPLIER_U2
ON TTA_SUPPLIER (OWNER_DEPT ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table TTA_SUPPLIER
-- ----------------------------
ALTER TABLE TTA_SUPPLIER ADD CHECK (SUPPLIER_ID IS NOT NULL);
ALTER TABLE TTA_SUPPLIER ADD CHECK (SUPPLIER_CODE IS NOT NULL);
ALTER TABLE TTA_SUPPLIER ADD CHECK (SUPPLIER_NAME IS NOT NULL);
ALTER TABLE TTA_SUPPLIER ADD CHECK (STATUS IS NOT NULL);
ALTER TABLE TTA_SUPPLIER ADD CHECK (IS_LATENT IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_SUPPLIER
-- ----------------------------
ALTER TABLE TTA_SUPPLIER ADD PRIMARY KEY (SUPPLIER_ID);

-- ----------------------------
-- Indexes structure for table TTA_SUPPLIER_ITEM_HEADER
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_SUPPLIER_ITEM_HEADER
-- ----------------------------
ALTER TABLE TTA_SUPPLIER_ITEM_HEADER ADD CHECK (SUPPLIER_ITEM_ID IS NOT NULL);
ALTER TABLE TTA_SUPPLIER_ITEM_HEADER ADD CHECK (BILL_CODE IS NOT NULL);
ALTER TABLE TTA_SUPPLIER_ITEM_HEADER ADD CHECK (SUPPLIER_CODE IS NOT NULL);
ALTER TABLE TTA_SUPPLIER_ITEM_HEADER ADD CHECK (SUPPLIER_NAME IS NOT NULL);
ALTER TABLE TTA_SUPPLIER_ITEM_HEADER ADD CHECK (BILL_STATUS IS NOT NULL);
ALTER TABLE TTA_SUPPLIER_ITEM_HEADER ADD CHECK (SPLIT_CONDITION IS NOT NULL);
ALTER TABLE TTA_SUPPLIER_ITEM_HEADER ADD CHECK (CREATION_DATE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_SUPPLIER_ITEM_HEADER
-- ----------------------------
ALTER TABLE TTA_SUPPLIER_ITEM_HEADER ADD PRIMARY KEY (SUPPLIER_ITEM_ID);

-- ----------------------------
-- Indexes structure for table TTA_SUPPLIER_ITEM_LINE
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_SUPPLIER_ITEM_LINE
-- ----------------------------
ALTER TABLE TTA_SUPPLIER_ITEM_LINE ADD CHECK (SUPPLIER_ITEM_LINE_ID IS NOT NULL);
ALTER TABLE TTA_SUPPLIER_ITEM_LINE ADD CHECK (SUPPLIER_CODE IS NOT NULL);
ALTER TABLE TTA_SUPPLIER_ITEM_LINE ADD CHECK (SUPPLIER_NAME IS NOT NULL);
ALTER TABLE TTA_SUPPLIER_ITEM_LINE ADD CHECK (SPLIT_CONDITION IS NOT NULL);
ALTER TABLE TTA_SUPPLIER_ITEM_LINE ADD CHECK (DEPT_NAME IS NOT NULL);
ALTER TABLE TTA_SUPPLIER_ITEM_LINE ADD CHECK (DEPT_CODE IS NOT NULL);
ALTER TABLE TTA_SUPPLIER_ITEM_LINE ADD CHECK (BRAND_NAME IS NOT NULL);
ALTER TABLE TTA_SUPPLIER_ITEM_LINE ADD CHECK (BRAND_CODE IS NOT NULL);
ALTER TABLE TTA_SUPPLIER_ITEM_LINE ADD CHECK (ITEM_CODE IS NOT NULL);
ALTER TABLE TTA_SUPPLIER_ITEM_LINE ADD CHECK (ITEM_NAME IS NOT NULL);
ALTER TABLE TTA_SUPPLIER_ITEM_LINE ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE TTA_SUPPLIER_ITEM_LINE ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE TTA_SUPPLIER_ITEM_LINE ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE TTA_SUPPLIER_ITEM_LINE ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_SUPPLIER_ITEM_LINE
-- ----------------------------
ALTER TABLE TTA_SUPPLIER_ITEM_LINE ADD PRIMARY KEY (SUPPLIER_ITEM_LINE_ID);

-- ----------------------------
-- Indexes structure for table TTA_SUPPLIER_ITEM_ORIGINAL
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_SUPPLIER_ITEM_ORIGINAL
-- ----------------------------
ALTER TABLE TTA_SUPPLIER_ITEM_ORIGINAL ADD CHECK (SUPPLIER_ITEM_ORIGINAL_ID IS NOT NULL);
ALTER TABLE TTA_SUPPLIER_ITEM_ORIGINAL ADD CHECK (SUPPLIER_CODE IS NOT NULL);
ALTER TABLE TTA_SUPPLIER_ITEM_ORIGINAL ADD CHECK (SUPPLIER_NAME IS NOT NULL);
ALTER TABLE TTA_SUPPLIER_ITEM_ORIGINAL ADD CHECK (DEPT_CODE IS NOT NULL);
ALTER TABLE TTA_SUPPLIER_ITEM_ORIGINAL ADD CHECK (BRAND_CODE IS NOT NULL);
ALTER TABLE TTA_SUPPLIER_ITEM_ORIGINAL ADD CHECK (ITEM_CODE IS NOT NULL);
ALTER TABLE TTA_SUPPLIER_ITEM_ORIGINAL ADD CHECK (ITEM_NAME IS NOT NULL);
ALTER TABLE TTA_SUPPLIER_ITEM_ORIGINAL ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE TTA_SUPPLIER_ITEM_ORIGINAL ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE TTA_SUPPLIER_ITEM_ORIGINAL ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE TTA_SUPPLIER_ITEM_ORIGINAL ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_SUPPLIER_ITEM_ORIGINAL
-- ----------------------------
ALTER TABLE TTA_SUPPLIER_ITEM_ORIGINAL ADD PRIMARY KEY (SUPPLIER_ITEM_ORIGINAL_ID);

-- ----------------------------
-- Indexes structure for table TTA_TEMP_PARAM_DEF
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_TEMP_PARAM_DEF
-- ----------------------------
ALTER TABLE TTA_TEMP_PARAM_DEF ADD CHECK (PARAM_ID IS NOT NULL);
ALTER TABLE TTA_TEMP_PARAM_DEF ADD CHECK (PARAM_KEY IS NOT NULL);
ALTER TABLE TTA_TEMP_PARAM_DEF ADD CHECK (PARAM_CONTENT IS NOT NULL);
ALTER TABLE TTA_TEMP_PARAM_DEF ADD CHECK (IS_SQL IS NOT NULL);
ALTER TABLE TTA_TEMP_PARAM_DEF ADD CHECK (REMARK IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_TEMP_PARAM_DEF
-- ----------------------------
ALTER TABLE TTA_TEMP_PARAM_DEF ADD PRIMARY KEY (PARAM_ID);

-- ----------------------------
-- Indexes structure for table TTA_TEMP_PARAM_RULE_MIDLE
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_TEMP_PARAM_RULE_MIDLE
-- ----------------------------
ALTER TABLE TTA_TEMP_PARAM_RULE_MIDLE ADD CHECK (RULE_PARAM_ID IS NOT NULL);
ALTER TABLE TTA_TEMP_PARAM_RULE_MIDLE ADD CHECK (RULE_ID IS NOT NULL);
ALTER TABLE TTA_TEMP_PARAM_RULE_MIDLE ADD CHECK (PARAM_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_TEMP_PARAM_RULE_MIDLE
-- ----------------------------
ALTER TABLE TTA_TEMP_PARAM_RULE_MIDLE ADD PRIMARY KEY (RULE_PARAM_ID);

-- ----------------------------
-- Indexes structure for table TTA_TEMP_RULE_DEF
-- ----------------------------
CREATE UNIQUE INDEX UNIQUE_RUL_DEF
ON TTA_TEMP_RULE_DEF (SOLE_RESOUCE_TYPE ASC, SOLE_PRODUCT_TYPE ASC, IS_INCLUDE_EC ASC, IS_INCLUDE_SPECIAL ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table TTA_TEMP_RULE_DEF
-- ----------------------------
ALTER TABLE TTA_TEMP_RULE_DEF ADD CHECK (RUL_ID IS NOT NULL);
ALTER TABLE TTA_TEMP_RULE_DEF ADD CHECK (RULE_NAME IS NOT NULL);
ALTER TABLE TTA_TEMP_RULE_DEF ADD CHECK (IS_ENABLE IS NOT NULL);
ALTER TABLE TTA_TEMP_RULE_DEF ADD CHECK (SOLE_RESOUCE_TYPE IS NOT NULL);
ALTER TABLE TTA_TEMP_RULE_DEF ADD CHECK (SOLE_PRODUCT_TYPE IS NOT NULL);
ALTER TABLE TTA_TEMP_RULE_DEF ADD CHECK (IS_INCLUDE_EC IS NOT NULL);
ALTER TABLE TTA_TEMP_RULE_DEF ADD CHECK (IS_INCLUDE_SPECIAL IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_TEMP_RULE_DEF
-- ----------------------------
ALTER TABLE TTA_TEMP_RULE_DEF ADD PRIMARY KEY (RUL_ID);

-- ----------------------------
-- Indexes structure for table TTA_TERMS_FRAME_HEADER
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_TERMS_FRAME_HEADER
-- ----------------------------
ALTER TABLE TTA_TERMS_FRAME_HEADER ADD CHECK (TEAM_FRAMEWORK_ID IS NOT NULL);
ALTER TABLE TTA_TERMS_FRAME_HEADER ADD CHECK (YEAR IS NOT NULL);
ALTER TABLE TTA_TERMS_FRAME_HEADER ADD CHECK (BILL_STATUS IS NOT NULL);
ALTER TABLE TTA_TERMS_FRAME_HEADER ADD CHECK (BUSINESS_VERSION IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_TERMS_FRAME_HEADER
-- ----------------------------
ALTER TABLE TTA_TERMS_FRAME_HEADER ADD PRIMARY KEY (TEAM_FRAMEWORK_ID);

-- ----------------------------
-- Indexes structure for table TTA_TERMS_FRAME_HEADER_H
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_TERMS_FRAME_HEADER_H
-- ----------------------------
ALTER TABLE TTA_TERMS_FRAME_HEADER_H ADD CHECK (TEAM_FRAMEWORK_ID IS NOT NULL);
ALTER TABLE TTA_TERMS_FRAME_HEADER_H ADD CHECK (FRAME_CODE IS NOT NULL);
ALTER TABLE TTA_TERMS_FRAME_HEADER_H ADD CHECK (YEAR IS NOT NULL);
ALTER TABLE TTA_TERMS_FRAME_HEADER_H ADD CHECK (BILL_STATUS IS NOT NULL);
ALTER TABLE TTA_TERMS_FRAME_HEADER_H ADD CHECK (BUSINESS_VERSION IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_TERMS_FRAME_HEADER_H
-- ----------------------------
ALTER TABLE TTA_TERMS_FRAME_HEADER_H ADD PRIMARY KEY (TEAM_FRAMEWORK_ID);

-- ----------------------------
-- Indexes structure for table TTA_TEST_CHOICE_MID
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_TEST_CHOICE_MID
-- ----------------------------
ALTER TABLE TTA_TEST_CHOICE_MID ADD CHECK (MID_ID IS NOT NULL);
ALTER TABLE TTA_TEST_CHOICE_MID ADD CHECK (QN_CHOICE_ID IS NOT NULL);
ALTER TABLE TTA_TEST_CHOICE_MID ADD CHECK (QN_LINE_ID IS NOT NULL);
ALTER TABLE TTA_TEST_CHOICE_MID ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE TTA_TEST_CHOICE_MID ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE TTA_TEST_CHOICE_MID ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE TTA_TEST_CHOICE_MID ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_TEST_CHOICE_MID
-- ----------------------------
ALTER TABLE TTA_TEST_CHOICE_MID ADD PRIMARY KEY (MID_ID);

-- ----------------------------
-- Indexes structure for table TTA_TEST_QUESTIONNAIRE_CHOICE
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_TEST_QUESTIONNAIRE_CHOICE
-- ----------------------------
ALTER TABLE TTA_TEST_QUESTIONNAIRE_CHOICE ADD CHECK (QN_CHOICE_ID IS NOT NULL);
ALTER TABLE TTA_TEST_QUESTIONNAIRE_CHOICE ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE TTA_TEST_QUESTIONNAIRE_CHOICE ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE TTA_TEST_QUESTIONNAIRE_CHOICE ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE TTA_TEST_QUESTIONNAIRE_CHOICE ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);
ALTER TABLE TTA_TEST_QUESTIONNAIRE_CHOICE ADD CHECK (ORIGINAL_QN_CHOICE_ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_TEST_QUESTIONNAIRE_CHOICE
-- ----------------------------
ALTER TABLE TTA_TEST_QUESTIONNAIRE_CHOICE ADD PRIMARY KEY (QN_CHOICE_ID);

-- ----------------------------
-- Indexes structure for table TTA_TEST_QUESTIONNAIRE_LINE
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_TEST_QUESTIONNAIRE_LINE
-- ----------------------------
ALTER TABLE TTA_TEST_QUESTIONNAIRE_LINE ADD CHECK (QN_LINE_ID IS NOT NULL);
ALTER TABLE TTA_TEST_QUESTIONNAIRE_LINE ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE TTA_TEST_QUESTIONNAIRE_LINE ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE TTA_TEST_QUESTIONNAIRE_LINE ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE TTA_TEST_QUESTIONNAIRE_LINE ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_TEST_QUESTIONNAIRE_LINE
-- ----------------------------
ALTER TABLE TTA_TEST_QUESTIONNAIRE_LINE ADD PRIMARY KEY (QN_LINE_ID);

-- ----------------------------
-- Indexes structure for table TTA_USER_GROUP_DEPT_BRAND
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_USER_GROUP_DEPT_BRAND
-- ----------------------------
ALTER TABLE TTA_USER_GROUP_DEPT_BRAND ADD CHECK (USER_GROUP_DEPT_BRAND_ID IS NOT NULL);
ALTER TABLE TTA_USER_GROUP_DEPT_BRAND ADD CHECK (CREATION_DATE IS NOT NULL);
ALTER TABLE TTA_USER_GROUP_DEPT_BRAND ADD CHECK (CREATED_BY IS NOT NULL);
ALTER TABLE TTA_USER_GROUP_DEPT_BRAND ADD CHECK (LAST_UPDATED_BY IS NOT NULL);
ALTER TABLE TTA_USER_GROUP_DEPT_BRAND ADD CHECK (LAST_UPDATE_DATE IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_USER_GROUP_DEPT_BRAND
-- ----------------------------
ALTER TABLE TTA_USER_GROUP_DEPT_BRAND ADD PRIMARY KEY (USER_GROUP_DEPT_BRAND_ID);

-- ----------------------------
-- Indexes structure for table TTA_VENDOR_IN
-- ----------------------------

-- ----------------------------
-- Checks structure for table TTA_VENDOR_IN
-- ----------------------------
ALTER TABLE TTA_VENDOR_IN ADD CHECK (VENDOR_ID IS NOT NULL);
ALTER TABLE TTA_VENDOR_IN ADD CHECK (VENDOR_NBR IS NOT NULL);
ALTER TABLE TTA_VENDOR_IN ADD CHECK (VENDOR_NAME IS NOT NULL);
ALTER TABLE TTA_VENDOR_IN ADD CHECK (STATUS IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TTA_VENDOR_IN
-- ----------------------------
ALTER TABLE TTA_VENDOR_IN ADD PRIMARY KEY (VENDOR_ID);

-- ----------------------------
-- Indexes structure for table WX_USER
-- ----------------------------

-- ----------------------------
-- Checks structure for table WX_USER
-- ----------------------------
ALTER TABLE WX_USER ADD CHECK (ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table WX_USER
-- ----------------------------
ALTER TABLE WX_USER ADD PRIMARY KEY (ID);

-- ----------------------------
-- Foreign Key structure for table TTA_SIDE_AGRT_LINE
-- ----------------------------
ALTER TABLE TTA_SIDE_AGRT_LINE ADD FOREIGN KEY (SIDE_AGRT_H_ID) REFERENCES TTA_SIDE_AGRT_HEADER (SIDE_AGRT_H_ID);


-- 2019/07/10 后新增针对ddl语句需添加到此脚本，以便维护。

create sequence SEQ_TTA_USER_GROUP_DEPT_BRAND start with 1 increment by 1 nomaxvalue nominvalue nocycle nocache;
create table TTA_USER_GROUP_DEPT_BRAND 
(
   USER_GROUP_DEPT_BRAND_ID INTEGER              not null,
   USER_ID              INTEGER,
   "GROUP"              VARCHAR(200),
   GROUP_DESC           VARCHAR(500),
   DEPT                 VARCHAR(200),
   DEPT_DESC            VARCHAR(500),
   BRAND_CODE           VARCHAR(200),
   BRAND_CN             VARCHAR(500),
   BRAND_EN             VARCHAR(500),
   VERSION_NUM          INTEGER,
   CREATION_DATE        DATE                 default SYSDATE not null,
   CREATED_BY           INTEGER              default -1 not null,
   LAST_UPDATED_BY      INTEGER              default -1 not null,
   LAST_UPDATE_DATE     DATE                 default SYSDATE not null,
   LAST_UPDATE_LOGIN    INTEGER,
   START_TIME           DATE,
   END_TIME             DATE,
   constraint PK_USER_GROUP_DEPT_BRAND_ID primary key (USER_GROUP_DEPT_BRAND_ID)
);

comment on table TTA_USER_GROUP_DEPT_BRAND is
' user group dept brand 权限表';

comment on column TTA_USER_GROUP_DEPT_BRAND.USER_GROUP_DEPT_BRAND_ID is
'主键';

comment on column TTA_USER_GROUP_DEPT_BRAND.USER_ID is
'外键，引用base_user表主键';


create or replace procedure pro_person_in
is
begin

  update base_person a
   set (a.area,
        a.email,
        a.grand,
        a.market,
        a.dept_no,
        a.org_code,
        a.post_name,
        a.person_name,
        a.person_name_en) =
       (select b.area,
               b.mail,
               b.grand,
               b.market,
               b.dept_no,
               b.org_code,
               b.post_name,
               b.name,
               b.name_en
          from tta_person_in b
         where b.code = a.employee_number)
 where exists
 (select 1 from tta_person_in b where b.code = a.employee_number);

insert into base_person  (
       GRAND,
       PERSON_NAME_EN,
       DEPT_NO,
       POST_NAME,
       AREA,
       MARKET,
       ORG_CODE,
       PERSON_ID,
       EMPLOYEE_NUMBER,
       PERSON_NAME,
       PERSON_TYPE,
       SEX,
       BIRTH_DAY,
       CARD_NO,
       ENABLED,
       TEL_PHONE,
       MOBILE_PHONE,
       EMAIL,
       POSTAL_ADDRESS,
       POSTCODE,
       SERVICE_STORE_ID,
       SOURCE_SYSTEM_ID,
       CREATION_DATE,
       CREATED_BY,
       LAST_UPDATED_BY,
       LAST_UPDATE_DATE,
       VERSION_NUM,
       LAST_UPDATE_LOGIN,
       SOURCE_CODE,
       SOURCE_ID)
  select
       t.grand,
       t.name_en,
       t.dept_no,
       t.post_name,
       t.area,
       t.market,
       t.org_code,
       seq_base_person.nextval,
       t.code,
       t.name,
       'IN' AS PERSON_TYPE,
       null as SEX,
       null as BIRTH_DAY,
       null as CARD_NO,
       'Y' AS  ENABLED,
       null as  TEL_PHONE,
       null as MOBILE_PHONE,
       t.mail,
       null as POSTAL_ADDRESS,
       null as POSTCODE,
       null as SERVICE_STORE_ID,
       null as SOURCE_SYSTEM_ID,
       sysdate as CREATION_DATE,
       -1 as CREATED_BY,
       -1 as LAST_UPDATED_BY,
       sysdate as LAST_UPDATE_DATE,
       0 as VERSION_NUM,
       -1 as LAST_UPDATE_LOGIN,
       'BPM' as SOURCE_CODE,
       null as SOURCE_ID
  from tta_person_in t where not exists (select 1 from  base_person b where b.employee_number=t.code);
  commit;
end;


create or replace procedure pro_base_department is
begin
  -- 1.更新数据
  update base_department a
     set (a.department_code, a.department_name, a.department_full_name) =
         (select b.code, b.name_cn, b.name_en
            from tta_dept_in b
           where b.code = a.department_code)
   where exists
   (select 1 from tta_dept_in c where c.code = a.department_code);
  -- 2.有新增数据则新增
  insert into base_department
    (department_id,
     department_code,
     department_name,
     department_full_name,
     suffix,
     department_level,
     ou_id,
     parent_department_id,
     cost_center,
     department_seq,
     date_from,
     date_to,
     enable_flag,
     biz_line_type,
     channel,
     department_type,
     inventory_enable,
     creation_date,
     created_by,
     last_update_date,
     last_updated_by,
     last_update_login,
     delete_flag,
     version_num)
    select seq_base_department.nextval,
           t.code as department_code,
           t.name_cn as department_name,
           t.name_en as department_full_name,
           null as suffix,
           0 as department_level,
           -999 as ou_id,
           0 as parent_department_id,
           null as cost_center,
           null as department_seq,
           sysdate date_from,
           null date_to,
           'Y' as enable_flag,
           null as biz_line_type,
           null as channel,
           null as department_type,
           'Y' as inventory_enable,
           sysdate creation_date,
           -1 as created_by,
           sysdate as last_update_date,
           -1 as last_updated_by,
           -1 as last_update_login,
           0 as delete_flag,
           0 as version_num
      from tta_dept_in t
     where not exists
     (select 1 from base_department a where a.department_code = t.code);
  commit;
end;



    
    
create or replace procedure pro_base_job
    is
    begin
      insert into base_job(
        JOB_ID,
        JOB_CODE,
        JOB_NAME,
        "COMMENT",
        DATE_FROM,
        DATE_TO,
        ENABLE_FLAG,
        OU_ID,
        CREATION_DATE,
        CREATED_BY,
        LAST_UPDATE_DATE,
        LAST_UPDATED_BY,
        LAST_UPDATE_LOGIN,
        DELETE_FLAG,
        VERSION_NUM
       ) SELECT
        SEQ_BASE_JOB.NEXTVAL AS JOB_ID,
        A.POST_NAME AS JOB_CODE,
        A.POST_NAME AS JOB_NAME,
        NULL AS "COMMENT",
        SYSDATE DATE_FROM,
        NULL AS DATE_TO,
        'Y' ENABLE_FLAG,
        -999 AS OU_ID,
        SYSDATE AS CREATION_DATE,
        -1 CREATED_BY,
        SYSDATE AS LAST_UPDATE_DATE,
        -1 AS LAST_UPDATED_BY,
        -1 AS LAST_UPDATE_LOGIN,
        0 AS  DELETE_FLAG,
        0 as VERSION_NUM
      FROM (select b.post_name from  tta_person_in b where b.post_name is not null group by b.post_name) a
      where not exists (select 1 from base_job b where b.job_code = a.post_name);
    commit;
    end;


create or replace procedure pro_base_position
is
begin
INSERT INTO base_position(
     POSITION_ID,
     DEPARTMENT_ID,
     JOB_ID,
     POSITION_CODE,
     POSITION_NAME,
     DATE_FROM,
     DATE_TO,
     ENABLE_FLAG,
     BIZ_LINE_TYPE,
     CHANNEL,
     OU_ID,
     CREATION_DATE,
     CREATED_BY,
     LAST_UPDATE_DATE,
     LAST_UPDATED_BY,
     LAST_UPDATE_LOGIN,
     DELETE_FLAG,
     VERSION_NUM
  )
  select
         seq_base_position.nextval as POSITION_ID,
         d.department_id AS DEPARTMENT_ID,
         b.job_id AS JOB_ID,
         a.dept_no_post_name AS POSITION_CODE,
         (d.department_name || '.' || a.post_name) AS POSITION_NAME,
         sysdate AS DATE_FROM,
         null AS DATE_TO,
         'Y' AS ENABLE_FLAG,
         NULL AS BIZ_LINE_TYPE,
         NULL AS CHANNEL,
         -999 AS OU_ID,
         sysdate AS CREATION_DATE,
         -1 AS CREATED_BY,
         sysdate AS LAST_UPDATE_DATE,
         -1 AS LAST_UPDATED_BY,
         -1 AS LAST_UPDATE_LOGIN,
         0 AS DELETE_FLAG,
         0 AS VERSION_NUM
    from (select dept_no,
                 post_name,
                 dept_no || '.' || post_name as dept_no_post_name
            from base_person
           group by dept_no, post_name) a
   inner join base_job b
      on a.post_name = b.job_code
   inner join base_department d
      on d.department_code = a.dept_no
      where not exists (select 1 from base_position t where t.department_id = d.department_id);
      commit;
end;


create or replace procedure pro_base_person_assign
as
begin
insert into base_person_assign
(
     ASSIGN_ID,
     PERSON_ID,
     POSITION_ID,
     JOB_ID,
     DELETE_FLAG,
     DATE_FROM,
     DATE_TO,
     OU_ID,
     MGR_FLAG,
     PRIMARY_FLAG,
     ENABLE_FLAG,
     BUDGET_VIEW,
     BUDGET_MAINTAIN,
     CREATION_DATE,
     CREATED_BY,
     LAST_UPDATE_DATE,
     LAST_UPDATED_BY,
     LAST_UPDATE_LOGIN,
     VERSION_NUM
) select
     seq_base_person_assign.nextval ASSIGN_ID,
     a.person_id as PERSON_ID,
     b.position_id as POSITION_ID,
     b.job_id as JOB_ID,
     0 as DELETE_FLAG,
     sysdate as DATE_FROM,
     null as DATE_TO,
     -999 as OU_ID,
     'N' as MGR_FLAG,
     'N' as PRIMARY_FLAG,
     'Y' as ENABLE_FLAG,
     1 AS BUDGET_VIEW,
     'N' AS BUDGET_MAINTAIN,
     sysdate as CREATION_DATE,
     -1 as CREATED_BY,
     sysdate as LAST_UPDATE_DATE,
     -1 as LAST_UPDATED_BY,
     -1 as LAST_UPDATE_LOGIN,
     0 as VERSION_NUM
   from (
          select
             x.person_id,
             x.dept_no || '.' || x.post_name  as dept_no_post_name
           from base_person x
           group by x.dept_no, x.post_name, x.person_id
        ) a
   INNER JOIN base_position b on b.POSITION_CODE = a.dept_no_post_name
   where not exists (select 1 from base_person_assign sg where sg.person_id = a.person_id
    and sg.person_id = b.position_id
    and sg.job_id = b.job_id
    );
   commit;
end;


create or replace procedure pro_base_dept_position_assign
is
begin
   pro_base_department();
   pro_base_position();
   pro_base_person_assign();
end pro_base_dept_position_assign;



create or replace procedure pro_base_person_job
    is
  begin
      PRO_PERSON_IN();
      PRO_BASE_JOB();
  end;
  

    CREATE OR REPLACE PROCEDURE pro_base_organization
as
begin
INSERT INTO base_organization
  (ORG_ID,
   PARENT_ORG_ID,
   ORG_CODE,
   ORG_NAME,
   TREE_TYPE,
   CHANNEL_TYPE,
   BUSINESS_TYPE,
   IS_DEP,
   ORG_TYPE,
   ORG_LEVEL,
   IS_LEAF,
   START_DATE,
   END_DATE,
   ENABLED,
   REMARK,
   ORG_PINYIN_NAME,
   ORG_SIMPLE_PINYIN_NAME,
   ORDER_NO,
   DELETE_FLAG,
   ORG_HIERARCHY_ID,
   ORG_EMAIL,
   SOURCE_SYSTEM_ID,
   CREATION_DATE,
   CREATED_BY,
   LAST_UPDATED_BY,
   LAST_UPDATE_DATE,
   VERSION_NUM,
   LEADER_ID,
   LAST_UPDATE_LOGIN,
   ORGANIZATION_ID,
   WORK_STATISTICS)
  select
         t.org_code as  ORG_ID,
         t.parent_org_code as PARENT_ORG_ID,
         t.org_code as ORG_CODE,
         t.org_name as ORG_NAME,
         '业务组织' as TREE_TYPE,
         10 as CHANNEL_TYPE,
         20 as BUSINESS_TYPE,
         'N' as IS_DEP,
         'ORG' as ORG_TYPE,
         t.org_level as ORG_LEVEL,
         t.is_leaf as IS_LEAF,
         SYSDATE AS START_DATE,
         NULL AS END_DATE,
         'Y' AS ENABLED,
         NULL AS REMARK,
         NULL AS ORG_PINYIN_NAME,
         NULL AS ORG_SIMPLE_PINYIN_NAME,
         NULL AS ORDER_NO,
         0 AS DELETE_FLAG,
         NULL AS ORG_HIERARCHY_ID,
         NULL AS ORG_EMAIL,
         NULL AS SOURCE_SYSTEM_ID,
         SYSDATE AS CREATION_DATE,
         -1 CREATED_BY,
         -1 AS LAST_UPDATED_BY,
         SYSDATE LAST_UPDATE_DATE,
         0 AS VERSION_NUM,
         NULL LEADER_ID,
         -1 LAST_UPDATE_LOGIN,
         NULL AS ORGANIZATION_ID,
         NULL AS WORK_STATISTICS
    from (
            SELECT
               o.org_code,
               o.parent_org_code,
               o.org_name,
               connect_by_isleaf as IS_LEAF,
               LEVEL as ORG_LEVEL
          FROM tta_org_in o
         START WITH o.parent_org_code IS NULL
         CONNECT BY PRIOR o.org_code = o.parent_org_code
) t where not exists (select 1 from base_organization a where a.org_code = t.org_code);
--   /* where t.org_code in (822, 783, 674);*/

update base_organization a
   set (a.org_level, a.is_leaf) =
       (select t.ORG_LEVEL, t.IS_LEAF
          from (SELECT
                      LEVEL as ORG_LEVEL, 
                      connect_by_isleaf as IS_LEAF,
                      o.org_code
                   FROM tta_org_in o
                  START WITH o.parent_org_code IS NULL
                 CONNECT BY PRIOR o.org_code = o.parent_org_code) t
         where t.org_code = a.org_code);
commit;
end pro_base_organization;



drop table TTA_VENDOR_IN;
create table TTA_VENDOR_IN
(
  VENDOR_NBR        VARCHAR2(100),
  VENDOR_NAME       VARCHAR2(500),
  STATUS            VARCHAR2(500),
  version_num       INTEGER default 0,
  creation_date     DATE default sysdate,
  created_by        INTEGER default -1,
  last_updated_by   INTEGER default -1,
  last_update_date  DATE default sysdate,
  last_update_login INTEGER default -1
);
-- Add comments to the table 
comment on table TTA_VENDOR_IN
  is '供应商接口表';
-- Add comments to the columns 
comment on column TTA_VENDOR_IN.VENDOR_NBR
  is '供应商编码';
comment on column TTA_VENDOR_IN.VENDOR_NAME
  is '供应商名称';
comment on column TTA_VENDOR_IN.STATUS
  is '状态';














  

  
